<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">12.4 </span><span class="font8">添加飞船图像</span></p>
<p><span class="font9">213</span></p>
<p><span class="font8">我们将把飞船放在屏幕底部中央。为此，首先将表示屏幕的矩形存储在</span><span class="font3">sef.screen_rect</span><span class="font8">中 (见</span><span class="font5">❸</span><span class="font8">)，再将</span><span class="font3">sef.rect.centerx </span><span class="font8">(飞船中心的</span><span class="font9" style="font-style:italic;">x</span><span class="font8">坐标)设置为表示屏幕的矩形的属性</span><span class="font3">centerx </span><span class="font8">(见 </span><span class="font5">❹</span><span class="font8">)，并将</span><span class="font3">sef.rect.bottom </span><span class="font8">(飞船下边缘的</span><span class="font9" style="font-style:italic;">^</span><span class="font8">坐标)设置为表示屏幕的矩形的属性</span><span class="font3">bottom</span><span class="font8">。</span><span class="font9">Pygame </span><span class="font8">将使用这些</span><span class="font3">rect</span><span class="font8">属性来放置飞船图像，使其与屏幕下边缘对齐并水平居中。</span></p>
<p><span class="font8">在</span><span class="font5">❺</span><span class="font8">处，我们定义了方法</span><span class="font3">blitme()</span><span class="font8">，它根据</span><span class="font3">sef.rect</span><span class="font8">指定的位置将图像绘制到屏幕上。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">12.4.2</span><span class="font6"> 在屏幕上绘制飞船</span></p></li></ul>
<p><span class="font8">下面来更新</span><span class="font9">alien_invasion.py</span><span class="font8">，使其创建一艘飞船，并调用其方法</span><span class="font3">blitme()</span><span class="font8">：</span></p>
<p><span class="font1">alien_invasion.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<p><span class="font0">from settings import Settings</span></p>
<p><span class="font0">from ship import Ship</span></p>
<p><span class="font0">def run_game():</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font0">pygame.display.set_caption(&quot;Alien Invasion&quot;)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 创建一艘飞船</span></p></li></ul>
<p><span class="font4">❶ </span><span class="font0">ship = Ship(screen)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 开始游戏主循环 </span><span class="font0">while True:</span></p></li></ul>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 每次循环时都重绘屏幕</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">12</span></p>
</div><br clear="all"></li></ul>
<p><span class="font0">screen.fill(ai_settings.bg_color)</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">ship.blitme()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 让最近绘制的屏幕可见 </span><span class="font0">pygame.display.flip()</span></p></li></ul>
<p><span class="font0">run_game()</span></p>
<p><span class="font8">我们导入</span><span class="font3">Ship</span><span class="font8">类，并在创建屏幕后创建一个名为</span><span class="font3">ship</span><span class="font8">的</span><span class="font3">Ship</span><span class="font8">实例。必须在主</span><span class="font3">while</span><span class="font8">循环前面创 建该实例(见</span><span class="font5">❶</span><span class="font8">)，以免每次循环时都创建一艘飞船。填充背景后，我们调用</span><span class="font3">ship.blitme()</span><span class="font8">将飞 船绘制到屏幕上，确保它出现在背景前面(见</span><span class="font5">❷</span><span class="font8">)。</span></p>
<p><span class="font8">现在如果运行</span><span class="font9">alien_invasion.py</span><span class="font8">，将看到飞船位于空游戏屏幕底部中央，如图</span><span class="font9">12-2</span><span class="font8">所示。</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>