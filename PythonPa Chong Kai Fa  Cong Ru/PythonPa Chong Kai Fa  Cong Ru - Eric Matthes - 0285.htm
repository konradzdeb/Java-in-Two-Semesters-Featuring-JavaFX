<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">268</span></p>
<p><span class="font8">第</span><span class="font9">14</span><span class="font8">章 记分</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>scoreboard.py</span></h6>
<p><span class="font0">def prep_score(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font7">将得分转换为一幅渲染的图像</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font4">❶ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">score_str = str(self.stats.score)</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.score_image = self.font.render(score_str, True, self.text_color,</span></p>
<p><span class="font0">self.ai_settings.bg_color)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 将得分放在屏幕右上角</span></p></li></ul>
<p><span class="font4">❸ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.score_rect = self.score_image.get_rect()</span></p>
<p><span class="font4">❹ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.score_rect.right = self.screen_rect.right - 20</span></p>
<p><span class="font4">❺ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.score_rect.top = 20</span></p>
<p><span class="font8">在</span><span class="font3">prep_score()</span><span class="font8">中，我们首先将数字值</span><span class="font3">stats.score</span><span class="font8">转换为字符串(见</span><span class="font5">❶</span><span class="font8">)，再将这个字符串 传递给创建图像的</span><span class="font3">render()</span><span class="font8">(见</span><span class="font5">❷</span><span class="font8">)。为在屏幕上清晰地显示得分，我们向</span><span class="font3">render()</span><span class="font8">传递了屏幕背 景色，以及文本颜色。</span></p>
<p><span class="font8">我们将得分放在屏幕右上角，并在得分增大导致这个数字更宽时让它向左延伸。为确保得分 始终锚定在屏幕右边，我们创建了一个名为</span><span class="font3">score_rect</span><span class="font8">的</span><span class="font3">rect </span><span class="font8">(见</span><span class="font5">❸</span><span class="font8">)，让其右边缘与屏幕右边缘 相距</span><span class="font9">20</span><span class="font8">像素(见</span><span class="font5">❹</span><span class="font8">)，并让其上边缘与屏幕上边缘也相距</span><span class="font9">20</span><span class="font8">像素(见</span><span class="font5">❺</span><span class="font8">)。</span></p>
<p><span class="font8">最后，我们创建方法</span><span class="font3">show_score()</span><span class="font8">，用于显示渲染好的得分图像：</span></p>
<h6><a name="bookmark2"></a><span class="font1"><a name="bookmark3"></a>scoreboard.py</span></h6>
<p><span class="font0">def show_score(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font7">在屏幕上显示得分</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">self.screen.blit(self.score_image, self.score_rect)</span></p>
<p><span class="font8">这个方法将得分图像显示到屏幕上，并将其放在</span><span class="font3">score_rect</span><span class="font8">指定的位置。</span></p>
<ul style="list-style:none;"><li><a name="caption2"></a>
<h5><a name="bookmark4"></a><span class="font2"><a name="bookmark5"></a>14.3.2</span><span class="font6"> 创建记分牌</span></h5></li></ul>
<p><span class="font8">为显示得分，我们在</span><span class="font9">alien_invasion.py</span><span class="font8">中创建一个</span><span class="font3">Scoreboard</span><span class="font8">实例:</span></p>
<h6><a name="bookmark6"></a><span class="font1"><a name="bookmark7"></a>alien_invasion.py</span></h6>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<p><span class="font0">from game_stats import GameStats</span></p>
<p><span class="font0">from scoreboard import Scoreboard</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p></li></ul>
<p><span class="font0">def run_game():</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 创建存储游戏统计信息的实例，并创建记分牌</span></p></li></ul>
<p><span class="font0">stats = GameStats(ai_settings)</span></p>
<p><span class="font4">❶ </span><span class="font0">sb = Scoreboard(ai_settings, screen, stats)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li>
<li>
<p><span class="font0">#</span><span class="font7"> 开始游戏主循环</span></p></li></ul>
<p><span class="font0">while True:</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">gf.update_screen(ai_settings, screen, stats, sb, ship, aliens,</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>