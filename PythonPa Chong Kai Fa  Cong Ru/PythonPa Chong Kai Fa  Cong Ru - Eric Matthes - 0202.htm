<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:9pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:9pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">10.4 </span><span class="font8">存储数据</span></p>
<p><span class="font9">185</span></p>
<p><span class="font8">用户输入用户名。</span></p>
<p><span class="font8">我们还需将</span><span class="font3">greet_user()</span><span class="font8">中的另一个代码块提取出来：将没有存储用户名时提示用户输入的 代码放在一个独立的函数中：</span></p>
<p><span class="font0">import json</span></p>
<p><span class="font0">def get_stored_username():</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">如果存储了用户名，就获取它</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p>
<p><span class="font0">def get_new_username():</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">提示用户输入用户名</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">username = input(&quot;What is your name? &quot;)</span></p>
<p><span class="font0">filename = 'username.json'</span></p>
<p><span class="font0">with open(filename, 'w') as f_obj:</span></p>
<p><span class="font0">json.dump(username, f_obj)</span></p>
<p><span class="font0">return username</span></p>
<p><span class="font0">def greet_user():</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">问候用户，并指出其名字</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">username = get_stored_username()</span></p>
<p><span class="font0">if username:</span></p>
<p><span class="font0">print(&quot;Welcome back, &quot;&nbsp;+ username + &quot;!&quot;)</span></p>
<p><span class="font0">else:</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">10</span></p>
</div><br clear="all">
<p><span class="font0">username = get_new_username()</span></p>
<p><span class="font0">print(&quot;We'll remember you when you come back, &quot;&nbsp;+ username + &quot;!&quot;)</span></p>
<p><span class="font0">greet_user()</span></p>
<p><span class="font8">在</span><span class="font9">remember_me.py</span><span class="font8">的这个最终版本中，每个函数都执行单一而清晰的任务。我们调用 </span><span class="font3">greet_user()</span><span class="font8">，它打印一条合适的消息：要么欢迎老用户回来，要么问候新用户。为此，它首先 调用</span><span class="font3">get_stored_username()</span><span class="font8">，这个函数只负责获取存储的用户名(如果存储了的话)，再在必要 时调用</span><span class="font3">get_new_username()</span><span class="font8">，这个函数只负责获取并存储新用户的用户名。要编写出清晰而易于 维护和扩展的代码，这种划分工作必不可少。</span></p>
<p><span class="font5">动手试一试</span></p>
<p><span class="font1">10-11</span><span class="font4">喜欢的数字</span><span class="font7">：编写一个程序，提示用户输入他喜欢的数字，并使用 </span><span class="font3">json.dump()</span><span class="font7">将这个数字存储到文件中。再编写一个程序，从文件中读取这个值，并打 印消息 “</span><span class="font9">I know your favorite number! It's.</span><span class="font7">”。</span></p>
<p><span class="font1">10-12</span><span class="font4">记住喜欢的数字</span><span class="font7">：将练习</span><span class="font9">10-11</span><span class="font7">中的两个程序合而为一。如果存储了用户喜 欢的数字，就向用户显示它，否则提示用户输入他喜欢的数字并将其存储到文件中。运 行这个程序两次，看看它是否像预期的那样工作。</span></p>
<p><span class="font1">10-13</span><span class="font4">验证用户</span><span class="font7">：最后一个</span><span class="font9">remember_me.py</span><span class="font7">版本假设用户要么已输入其用户名，要 </span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>