<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:9pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">22 </span><span class="font8">第</span><span class="font9">2</span><span class="font8">章 变量和简单数据类型</span></p>
<p><span class="font2">favorite_language</span><span class="font8">的值时，你会发现这个字符串与输入时一样，依然包含多余的空白(见</span><span class="font4">❹)。</span></p>
<p><span class="font8">要永久删除这个字符串中的空白，必须将删除操作的结果存回到变量中：</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt;&gt;&gt; </span><span class="font0" style="font-weight:bold;">favorite_language = 'python '</span></p></li></ul>
<p><span class="font3">❶ </span><span class="font0">&gt;&gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">favorite_language = favorite_language.rstrip()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt;&gt;&gt; </span><span class="font0" style="font-weight:bold;">favorite_language</span></p></li></ul>
<p><span class="font0">'python'</span></p>
<p><span class="font8">为删除这个字符串中的空白，你需要将其末尾的空白剔除，再将结果存回到原来的变量中(见 </span><span class="font4">❶</span><span class="font8">)。在编程中，经常需要修改变量的值，再将新值存回到原来的变量中。这就是变量的值可能 随程序的运行或用户输入数据而发生变化的原因。</span></p>
<p><span class="font8">你还可以剔除字符串开头的空白，或同时剔除字符串两端的空白。为此，可分别使用方法 </span><span class="font2">lstrip()</span><span class="font8">和</span><span class="font2">strip()</span><span class="font8">:</span></p>
<p><span class="font3">❶ </span><span class="font0">&gt;&gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">favorite_language = ' python '</span></p>
<p><span class="font3">号 </span><span class="font0">&gt;&gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">favorite</span><span class="font6">一</span><span class="font0" style="font-weight:bold;">language.rstrip()</span></p>
<p><span class="font0">' python'</span></p>
<p><span class="font3">❸ </span><span class="font0">&gt;&gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">favorite_language.lstrip()</span></p>
<p><span class="font0">'python '</span></p>
<p><span class="font3">❹ </span><span class="font0">&gt;&gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">favorite_language.strip()</span></p>
<p><span class="font0">'python'</span></p>
<p><span class="font8">在这个示例中，我们首先创建了一个开头和末尾都有空白的字符串(见</span><span class="font4">❶</span><span class="font8">)。接下来，我们 分别删除末尾(见</span><span class="font4">❷</span><span class="font8">)、开头(见</span><span class="font4">❸</span><span class="font8">)和两端(见</span><span class="font4">❹</span><span class="font8">)的空格。尝试使用这些剥除函数有助于你 熟悉字符串操作。在实际程序中，这些剥除函数最常用于在存储用户输入前对其进行清理。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">2.3.5</span><span class="font5"> 使用字符串时避免语法错误</span></p></li></ul>
<p><span class="font7">语法错误</span><span class="font8">是一种时不时会遇到的错误。程序中包含非法的</span><span class="font9">Python</span><span class="font8">代码时，就会导致语法错误。 例如，在用单引号括起的字符串中，如果包含撇号，就将导致错误。这是因为这会导致</span><span class="font9">Python</span><span class="font8">将 第一个单引号和撇号之间的内容视为一个字符串，进而将余下的文本视为</span><span class="font9">Python</span><span class="font8">代码，从而引发 错误。</span></p>
<p><span class="font8">下面演示了如何正确地使用单引号和双引号。请将该程序保存为</span><span class="font9">apostrophe.py</span><span class="font8">，再运行它：</span></p>
<p><span class="font9">apostrophe.py</span></p>
<p><span class="font0">message = &quot;One of Python's strengths is its diverse community.&quot; print(message)</span></p>
<p><span class="font8">撇号位于两个双引号之间，因此</span><span class="font9">Python</span><span class="font8">解释器能够正确地理解这个字符串：</span></p>
<p><span class="font0">One of Python's strengths is its diverse community.</span></p>
<p><span class="font8">然而，如果你使用单引号，</span><span class="font9">Python</span><span class="font8">将无法正确地确定字符串的结束位置: </span></p>
</body>
</html>