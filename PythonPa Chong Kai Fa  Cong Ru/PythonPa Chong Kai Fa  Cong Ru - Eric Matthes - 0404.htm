<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:6pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:10pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Calibri, sans-serif; }
 .font5 { font:10pt Segoe UI, sans-serif; }
 .font6 { font:7pt SimHei, sans-serif; }
 .font7 { font:10pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:9pt SimSun, serif; }
 .font10 { font:10pt SimSun, serif; }
 .font11 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font11">19.1 </span><span class="font10">让用户能够输入数据</span></p>
<p><span class="font11">387</span></p>
<p><span class="font5">forms.ModelForm</span><span class="font10">,它包含的</span><span class="font5">Meta</span><span class="font10">类指出了表单基于的模型以及要在表单中包含哪些字段。这里也 给字段</span><span class="font5">‘text'</span><span class="font10">指定了一个空标签（见</span><span class="font4">O</span><span class="font10">）。</span></p>
<p><span class="font10">在</span><span class="font4">❷</span><span class="font10">处，我们定义了属性</span><span class="font5">widgets</span><span class="font10">。</span><span class="font9">小部件</span><span class="font10">（</span><span class="font11">widget</span><span class="font10">）是一个</span><span class="font11">HTML</span><span class="font10">表单元素，如单行文本框、 多行文本区域或下拉列表。通过设置属性</span><span class="font5">widgets</span><span class="font10">，可覆盖</span><span class="font11">Django</span><span class="font10">选择的默认小部件。通过让 </span><span class="font11">Django</span><span class="font10">使用</span><span class="font5">forms.Textarea</span><span class="font10">，我们定制了字段</span><span class="font5">‘text’</span><span class="font10">的输入小部件，将文本区域的宽度设置为</span><span class="font11">80 </span><span class="font10">列，而不是默认的</span><span class="font11">40</span><span class="font10">列。这给用户提供了足够的空间，可以编写有意义的条目。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">2. URL </span><span class="font7">模式 </span><span class="font5">new_entry</span></p></li></ul>
<p><span class="font10">在用于添加新条目的页面的</span><span class="font11">URL</span><span class="font10">模式中，需要包含实参</span><span class="font5">topic_id</span><span class="font10">，因为条目必须与特定的主 题相关联。该</span><span class="font11">URL</span><span class="font10">模式如下，我们将它添加到了 </span><span class="font11">learning_logs/urls.py</span><span class="font10">中：</span></p>
<p><span class="font2">urls.py</span></p>
<p><span class="font1">--</span><span class="font1" style="font-style:italic;">snip</span><span class="font1">--</span></p>
<p><span class="font1">urlpatterns = [</span></p>
<p><span class="font1">--</span><span class="font1" style="font-style:italic;">snip</span><span class="font1">--</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1"># </span><span class="font8">用于添加新条目的页面</span></p></li></ul>
<p><span class="font1">url(r'<sup>A</sup>new_entry/(?P&lt;topic_id&gt;\d+)/$', views.new_entry, name='new_entry'),</span></p>
<p><span class="font1">]</span></p>
<p><span class="font10">这个</span><span class="font11">URL</span><span class="font10">模式与形式为</span><span class="font5">http</span><span class="font10">:〃</span><span class="font5">localhost:8000/new_entry/</span><span class="font10">口/的</span><span class="font11">URL</span><span class="font10">匹配，其中</span><span class="font10" style="font-style:italic;">九</span><span class="font10">是一个与 主题</span><span class="font11">ID</span><span class="font10">匹配的数字。代码</span><span class="font5">(?P&lt;topic_id&gt;\d+)</span><span class="font10">捕获一个数字值，并将其存储在变量</span><span class="font5">topic_id</span><span class="font10">中。请 求的</span><span class="font11">URL</span><span class="font10">与这个模式匹配时，</span><span class="font11">Django</span><span class="font10">将请求和主题</span><span class="font11">ID</span><span class="font10">发送给函数</span><span class="font5">new_entry()</span><span class="font10">。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">3.</span><span class="font7">视图函数 </span><span class="font5">new_entry()</span></p></li></ul>
<p><span class="font10">视图函数</span><span class="font5">new_entry()</span><span class="font10">与函数</span><span class="font5">new_topic()</span><span class="font10">很像：</span></p>
<p><span class="font2">views.py</span></p>
<p><span class="font1">from django.shortcuts import render</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">--</span><span class="font1" style="font-style:italic;">snip</span><span class="font1">--</span></p></li></ul>
<p><span class="font1">from .models import Topic</span></p>
<p><span class="font1">from .forms import TopicForm, EntryForm</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">--</span><span class="font1" style="font-style:italic;">snip</span><span class="font1">-</span></p></li></ul>
<p><span class="font1">def new_entry(request, topic_id):</span></p>
<p><span class="font1">&quot;&quot;&quot;</span><span class="font8">在特定的主题中添加新条目</span><span class="font1">&quot;&quot;&quot;</span></p>
<p><span class="font0">❶</span><span class="font6"> &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font1">topic = Topic.objects.get(id=topic_id)</span></p>
<p><span class="font0">❷</span><span class="font6"> &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font1">if request.method != 'POST':</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">#</span><span class="font8"> 未提交数据</span><span class="font1">,</span><span class="font8">创建一个空表单</span></p></li></ul>
<p><span class="font0">❸</span><span class="font6"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font1">form = EntryForm()</span></p>
<p><span class="font1">else:</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1"># POST</span><span class="font8">提交的数据</span><span class="font9">，</span><span class="font8">对数据进行处理</span></p></li></ul>
<p><span class="font0">❹</span><span class="font6"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font1">form = EntryForm(data=request.POST)</span></p>
<p><span class="font1">if form.is_valid():</span></p>
<p><span class="font0">❺</span><span class="font6"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font1">new_entry = form.save(commit=False)</span></p>
<p><span class="font0">❻</span><span class="font6"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font1">new_entry.topic = topic</span></p>
<p><span class="font3" style="font-weight:bold;">19</span></p>
</body>
</html>