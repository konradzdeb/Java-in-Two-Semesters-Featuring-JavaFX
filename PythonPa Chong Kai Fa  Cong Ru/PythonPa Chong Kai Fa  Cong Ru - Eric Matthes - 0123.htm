<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:12pt SimHei, sans-serif; }
 .font4 { font:9pt SimSun, serif; }
 .font5 { font:10pt SimSun, serif; }
 .font6 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font6">106</span></p>
<p><span class="font5">第</span><span class="font6">7</span><span class="font5">章用户输入和</span><span class="font6">while</span><span class="font5">循环</span></p>
<p><span class="font0">Hello again.</span></p>
<p><span class="font0">Tell me something, and I will repeat it back to you:</span></p>
<p><span class="font0">Enter 'quit' to end the program. </span><span class="font0" style="font-weight:bold;">quit </span><span class="font0">quit</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font5"><a name="bookmark1"></a>这个程序很好，唯一美中不足的是，它将单词</span><span class="font2">‘quit’</span><span class="font5">也作为一条消息打印了出来。为修复这 种问题，只需使用一个简单的</span><span class="font2">f</span><span class="font5">测试：</span></h6>
<p><span class="font0">prompt = &quot;\nTell me something, and I will repeat it back to you:&quot;</span></p>
<p><span class="font0">prompt += &quot;\nEnter 'quit' to end the program. &quot;</span></p>
<p><span class="font0">message = &quot;&quot;</span></p>
<p><span class="font0">while message != 'quit':</span></p>
<p><span class="font0">message = input(prompt)</span></p>
<p><span class="font0">if message != 'quit':</span></p>
<p><span class="font0">print(message)</span></p>
<h6><a name="bookmark2"></a><span class="font5"><a name="bookmark3"></a>现在，程序在显示消息前将做简单的检查，仅在消息不是退出值时才打印它:</span></h6>
<p><span class="font0">Tell me something, and I will repeat it back to you: Enter 'quit' to end the program. </span><span class="font0" style="font-weight:bold;">Hello everyone! </span><span class="font0">Hello everyone!</span></p>
<p><span class="font0">Tell me something, and I will repeat it back to you: Enter 'quit' to end the program. </span><span class="font0" style="font-weight:bold;">Hello again.</span></p>
<p><span class="font0">Hello again.</span></p>
<p><span class="font0">Tell me something, and I will repeat it back to you: Enter 'quit' to end the program. </span><span class="font0" style="font-weight:bold;">quit</span></p>
<ul style="list-style:none;"><li><a name="caption2"></a>
<h5><a name="bookmark4"></a><span class="font1"><a name="bookmark5"></a>7.2.3</span><span class="font3"> 使用标志</span></h5></li></ul>
<p><span class="font5">在前一个示例中，我们让程序在满足指定条件时就执行特定的任务。但在更复杂的程序中， 很多不同的事件都会导致程序停止运行；在这种情况下，该怎么办呢？</span></p>
<p><span class="font5">例如，在游戏中，多种事件都可能导致游戏结束，如玩家一艘飞船都没有了或要保护的城市 都被摧毁了。导致程序结束的事件有很多时，如果在一条</span><span class="font2">while</span><span class="font5">语句中检查所有这些条件，将既 复杂又困难。</span></p>
<p><span class="font5">在要求很多条件都满足才继续运行的程序中，可定义一个变量，用于判断整个程序是否处于 活动状态。这个变量被称为</span><span class="font4">标志</span><span class="font5">，充当了程序的交通信号灯。你可让程序在标志为</span><span class="font2">True</span><span class="font5">时继续运 行，并在任何事件导致标志的值为</span><span class="font2">False</span><span class="font5">时让程序停止运行。这样，在</span><span class="font2">while</span><span class="font5">语句中就只需检查一 个条件一标志的当前值是否为</span><span class="font2">True</span><span class="font5">，并将所有测试（是否发生了应将标志设置为</span><span class="font2">False</span><span class="font5">的事件） 都放在其他地方，从而让程序变得更为整洁。</span></p>
</body>
</html>