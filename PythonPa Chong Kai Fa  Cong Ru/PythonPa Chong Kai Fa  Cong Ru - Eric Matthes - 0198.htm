<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">10.4 </span><span class="font7">存储数据</span></p>
<p><span class="font8">181</span></p>
<p><span class="font7">了如何使用</span><span class="font3">json.dump()</span><span class="font7">来存储数字列表：</span></p>
<p><span class="font1">number_writer.py</span></p>
<p><span class="font0">import json</span></p>
<p><span class="font0">numbers = [2, 3, 5, 7, 11, 13]</span></p>
<p><span class="font4">❶ </span><span class="font0">filename = 'numbers.json'</span></p>
<p><span class="font4">❷ </span><span class="font0">with open(filename, 'w') as f_obj:</span></p>
<p><span class="font4">❸ </span><span class="font0">json.dump(numbers, f_obj)</span></p>
<p><span class="font7">我们先导入模块</span><span class="font3">json</span><span class="font7">,再创建一个数字列表。在。处，我们指定了要将该数字列表存储到其 中的文件的名称。通常使用文件扩展名</span><span class="font8">json</span><span class="font7">来指出文件存储的数据为</span><span class="font8">JSON</span><span class="font7">格式。接下来，我们 以写入模式打开这个文件，让</span><span class="font3">json</span><span class="font7">能够将数据写入其中(见</span><span class="font5">❷</span><span class="font7">)。在</span><span class="font5">❸</span><span class="font7">处，我们使用函数</span><span class="font3">json.dump() </span><span class="font7">将数字列表存储到文件</span><span class="font8">numbers.json</span><span class="font7">中。</span></p>
<p><span class="font7">这个程序没有输出，但我们可以打开文件</span><span class="font8">numbers.json</span><span class="font7">，看看其内容。数据的存储格式与 </span><span class="font8">Python </span><span class="font7">中一样：</span></p>
<p><span class="font0">[2, 3, 5, 7, 11, 13]</span></p>
<p><span class="font7">下面再编写一个程序，使用</span><span class="font3">json.load()</span><span class="font7">将这个列表读取到内存中：</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">10</span></p>
</div><br clear="all">
<p><span class="font1">number_reader.py</span></p>
<p><span class="font0">mport json</span></p>
<p><span class="font4">❶ </span><span class="font0">filename = 'numbers.json'</span></p>
<p><span class="font4">❷ </span><span class="font0">with open(filename) as f_obj:</span></p>
<p><span class="font4">❸ </span><span class="font0">numbers = json.load(f_obj)</span></p>
<p><span class="font0">print(numbers)</span></p>
<p><span class="font7">在。处，我们确保读取的是前面写入的文件。这次我们以读取方式打开这个文件，因为</span><span class="font8">Python </span><span class="font7">只需读取这个文件(见</span><span class="font5">❷</span><span class="font7">)。在</span><span class="font5">❸</span><span class="font7">处，我们使用函数</span><span class="font3">json.load()</span><span class="font7">加载存储在</span><span class="font8">numbers.json</span><span class="font7">中的信息， 并将其存储到变量</span><span class="font3">numbers</span><span class="font7">中。最后，我们打印恢复的数字列表，看看它是否与</span><span class="font8">number_writer.py </span><span class="font7">中创建的数字列表相同：</span></p>
<p><span class="font0">[2, 3, 5, 7, 11, 13]</span></p>
<p><span class="font7">这是一种在程序之间共享数据的简单方式。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">10.4.2</span><span class="font6"> 保存和读取用户生成的数据</span></p></li></ul>
<p><span class="font7">对于用户生成的数据，使用</span><span class="font3">json</span><span class="font7">保存它们大有裨益，因为如果不以某种方式进行存储，等程 序停止运行时用户的信息将丢失。下面来看一个这样的例子：用户首次运行程序时被提示输入自 </span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>