<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:8pt SimHei, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:9pt SimSun, serif; }
 .font9 { font:10pt SimSun, serif; }
 .font10 { font:9pt Times New Roman, serif; }
 .font11 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font11">14.3 </span><span class="font9">记分 </span><span class="font11">273</span></p>
<p><span class="font9">执行这种修改：</span></p>
<p><span class="font1">scoreboard.py</span></p>
<p><span class="font0">def prep_score(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font7">将得分转换为渲染的图像</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font4">❶ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">rounded_score = int(round(self.stats.score, -l))</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">score_str = &quot;{:,}&quot;.format(rounded_score)</span></p>
<p><span class="font0">self.score_image = self.font.render(score_str, True, self.text_color, self.ai_settings.bg_color)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<p><span class="font9">函数</span><span class="font3">round()</span><span class="font9">通常让小数精确到小数点后多少位，其中小数位数是由第二个实参指定的。然 而，如果将第二个实参指定为负数，</span><span class="font3">round()</span><span class="font9">将圆整到最近的</span><span class="font11">10</span><span class="font9">、</span><span class="font11">100</span><span class="font9">、</span><span class="font11">1000</span><span class="font9">等整数倍。</span><span class="font6">❶</span><span class="font9">处的代 码让</span><span class="font11">Python</span><span class="font9">将</span><span class="font3">stats.score</span><span class="font9">的值圆整到最近的</span><span class="font11">10</span><span class="font9">的整数倍，并将结果存储到</span><span class="font3">rounded_score</span><span class="font9">中。</span></p>
<p><span class="font6">注意 </span><span class="font8">在</span><span class="font11">Python 2.7</span><span class="font8">中，</span><span class="font3">round()</span><span class="font8">总是返回一个小数值，因此我们使用</span><span class="font3">int()</span><span class="font8">来确保报告的得分为 整数。如果你使用的是</span><span class="font11">Python 3</span><span class="font8">,可省略对打出)的调用。</span></p>
<p><span class="font6">❷</span><span class="font9">处使用了一个字符串格式设置指令，它让</span><span class="font11">Python</span><span class="font9">将数值转换为字符串时在其中插入逗号， 例如，输出</span><span class="font3">1,000,000</span><span class="font9">而不是</span><span class="font3">1000000</span><span class="font9">。如果你现在运行这个游戏，看到的将是</span><span class="font11">10</span><span class="font9">的整数倍的整洁 得分，即便得分很高亦如此，如图</span><span class="font11">14-3</span><span class="font9">所示。</span></p>
<div><img src="PythonPa Chong Kai Fa  Cong Ru - Eric Matthes - 0290_files/PythonPa20Chong20Kai20Fa2020Cong20Ru20-20Eric20Matthes20-200290-1.jpg" alt="" style="width:319pt;height:220pt;">
<p><span class="font5">图</span><span class="font10">14-3 </span><span class="font5">得分为</span><span class="font10">10</span><span class="font5">的整数倍，并将逗号用作千分位分隔符</span></p>
</div><br clear="all">
<div>
<p><span class="font2" style="font-weight:bold;">14</span></p>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>