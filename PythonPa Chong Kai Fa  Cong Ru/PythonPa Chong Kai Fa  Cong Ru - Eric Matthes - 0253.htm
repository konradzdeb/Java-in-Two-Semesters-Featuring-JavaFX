<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:14pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:14pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:9pt SimSun, serif; }
 .font10 { font:10pt SimSun, serif; }
 .font11 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font11">236</span></p>
<p><span class="font10">第</span><span class="font11">13</span><span class="font10">章 外星人</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font3"><a name="bookmark1"></a>13.3 </span><span class="font7">创建一群外星人</span></h5></li></ul>
<p><span class="font10">要绘制一群外星人，需要确定一行能容纳多少个外星人以及要绘制多少行外星人。我们将首 先计算外星人之间的水平间距，并创建一行外星人，再确定可用的垂直空间，并创建整群外星人。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">13.3.1</span><span class="font6"> 确定一行可容纳多少个外星人</span></p></li></ul>
<p><span class="font10">为确定一行可容纳多少个外星人，我们来看看可用的水平空间有多大。屏幕宽度存储在 </span><span class="font4">ai_settings.screen_width</span><span class="font10">中，但需要在屏幕两边都留下一定的边距，把它设置为外星人的宽度。 由于有两个边距，因此可用于放置外星人的水平空间为屏幕宽度减去外星人宽度的两倍：</span></p>
<p><span class="font0">available_space_x = ai_settings.screen_width - </span><span class="font9">(</span><span class="font0">2 * alien_width)</span></p>
<p><span class="font10">我们还需要在外星人之间留出一定的空间，即外星人宽度。因此，显示一个外星人所需的水 平空间为外星人宽度的两倍：一个宽度用于放置外星人，另一个宽度为外星人右边的空白区域。 为确定一行可容纳多少个外星人，我们将可用空间除以外星人宽度的两倍：</span></p>
<p><span class="font0">number_aliens_x = available_space_x / (2 * alien_width)</span></p>
<p><span class="font10">我们将在创建外星人群时使用这些公式。</span></p>
<p><span class="font5">注意 </span><span class="font9">令人欣慰的是，在程序中执行计算时，一开始你无需确定公式是正确的，而可以尝试直 接运行程序，看看结果是否符合预期。即便是在最糟糕的情况下，也只是屏幕上显示的 外星人太多或太少。你可以根据在屏幕上看到的情况调整计算公式。</span></p>
<ul style="list-style:none;"><li>
<h5><a name="bookmark2"></a><span class="font2"><a name="bookmark3"></a>13.3.2</span><span class="font6"> 创建多行外星人</span></h5></li></ul>
<p><span class="font10">为创建一行外星人，首先在</span><span class="font11">alien_invasion.py</span><span class="font10">中创建一个名为</span><span class="font4">aliens</span><span class="font10">的空编组，用于存储全部 外星人，再调用</span><span class="font11">game_functions.py</span><span class="font10">中创建外星人群的函数：</span></p>
<p><span class="font1">alien_invasion.py</span></p>
<p><span class="font0">import pygame</span></p>
<p><span class="font0">from pygame.sprite import Group</span></p>
<p><span class="font0">from settings import Settings</span></p>
<p><span class="font0">from ship import Ship</span></p>
<p><span class="font0">import game_functions as gf</span></p>
<p><span class="font0">def run_game():</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8"> 创建一艘飞船、一个子弹编组和一个外星人编组</span></p></li></ul>
<p><span class="font0">ship = Ship(ai_settings, screen)</span></p>
<p><span class="font0">bullets = Group()</span></p>
<div>
</div><br clear="all">
</body>
</html>