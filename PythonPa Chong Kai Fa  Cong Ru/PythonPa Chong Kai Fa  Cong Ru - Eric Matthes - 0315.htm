<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:8pt SimHei, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:12pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:9pt SimSun, serif; }
 .font10 { font:10pt SimSun, serif; }
 .font11 { font:9pt Times New Roman, serif; }
 .font12 { font:10pt Times New Roman, serif; }
 .font13 { font:11pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font12">298</span></p>
<p><span class="font10">第</span><span class="font12">15</span><span class="font10">章 生成数据</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8">创建一个</span><span class="font0">RandomWalk</span><span class="font8">实例，并将其包含的点都绘制出来</span></p></li></ul>
<p><span class="font4">❶ </span><span class="font0">rw = RandomWalk() rw.fill_walk()</span></p>
<p><span class="font4">❷ </span><span class="font0">plt.scatter(rw.x_values, rw.y_values, s=15</span><span class="font9">)</span><span class="font0"> plt.show()</span></p>
<p><span class="font10">我们首先导入了模块</span><span class="font3">pyplot</span><span class="font10">和</span><span class="font3">RandomWalk</span><span class="font10">类，然后创建了一个</span><span class="font3">RandomWalk</span><span class="font10">实例，并将其存储 到</span><span class="font3">rw</span><span class="font10">中(见</span><span class="font13" style="font-weight:bold;">O</span><span class="font10">),再调用</span><span class="font3">fill_walk()</span><span class="font10">。在</span><span class="font6">❷</span><span class="font10">处，我们将随机漫步包含的</span><span class="font12" style="font-style:italic;">x</span><span class="font10">和</span><span class="font12" style="font-style:italic;">y</span><span class="font10">值传递给</span><span class="font3">scatter</span><span class="font10">。， 并选择了合适的点尺寸。图</span><span class="font12">15-8</span><span class="font10">显示了包含</span><span class="font12">5000</span><span class="font10">个点的随机漫步图(本节的示意图未包含 </span><span class="font12">matplotlib</span><span class="font10">查看器部分，但你运行</span><span class="font12">rw_visual.py</span><span class="font10">时，依然会看到)。</span></p><img src="PythonPa Chong Kai Fa  Cong Ru - Eric Matthes - 0315_files/PythonPa20Chong20Kai20Fa2020Cong20Ru20-20Eric20Matthes20-200315-1.jpg" alt="" style="width:376pt;height:206pt;">
<p><span class="font5">图</span><span class="font11">15-8 </span><span class="font5">包含</span><span class="font11">5000</span><span class="font5">个点的随机漫步</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">15.3.4</span><span class="font7"> 模拟多次随机漫步</span></p></li></ul>
<p><span class="font10">每次随机漫步都不同，因此探索可能生成的各种模式很有趣。要在不多次运行程序的情况下 使用前面的代码模拟多次随机漫步，一种办法是将这些代码放在一个</span><span class="font3">while</span><span class="font10">循环中，如下所示：</span></p>
<p><span class="font1">rw_visual.py</span></p>
<p><span class="font0">import matplotlib.pyplot as plt</span></p>
<p><span class="font0">from random_walk import RandomWalk</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># </span><span class="font8">只要程序处于活动状态，就不断地模拟随机漫步</span></p></li></ul>
<p><span class="font0">while True:</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8">创建一个</span><span class="font0">RandomWalk</span><span class="font8">实例，并将其包含的点都绘制出来</span></p></li></ul>
<p><span class="font0">rw = RandomWalk()</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>