<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:11pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">12.5 </span><span class="font8">重构：模块 </span><span class="font9">game functions</span></p>
<p><span class="font9">215</span></p>
<p><span class="font8">这个模块中导入了事件检查循环要使用的</span><span class="font4">sys</span><span class="font8">和</span><span class="font4">pygame</span><span class="font8">。当前，函数</span><span class="font4">check_events()</span><span class="font8">不需要任 何形参，其函数体复制了</span><span class="font9">alien_invasion.py</span><span class="font8">的事件循环。</span></p>
<p><span class="font8">下面来修改</span><span class="font9">alien_invasion.py</span><span class="font8">，使其导入模块</span><span class="font4">game_functions</span><span class="font8">，并将事件循环替换为对函数 </span><span class="font4">check_events()</span><span class="font8">的调用：</span></p>
<p><span class="font1">alien_invasion.py</span></p>
<p><span class="font0">import pygame</span></p>
<p><span class="font0">from settings import Settings</span></p>
<p><span class="font0">from ship import Ship</span></p>
<p><span class="font0">import game_functions as gf</span></p>
<p><span class="font0">def run_game():</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font0"># </span><span class="font7">开始游戏主循环</span></p>
<p><span class="font0">while True:</span></p>
<p><span class="font0">gf.check_events()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># </span><span class="font7">让最近绘制的屏幕可见</span></p></li>
<li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<p><span class="font8">在主程序文件中，不再需要直接导入</span><span class="font5">$丫$</span><span class="font8">，因为当前只在模块</span><span class="font4">game_functions</span><span class="font8">中使用了它。出 于简化的目的，我们给导入的模块</span><span class="font4">game_functions</span><span class="font8">指定了别名</span><span class="font4">gf</span><span class="font8">。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">12.5.2 </span><span class="font6">函数 </span><span class="font2">update_screen()</span></p>
<div>
<p><span class="font3" style="font-weight:bold;">12</span></p>
</div><br clear="all"></li></ul>
<p><span class="font8">为进一步简化</span><span class="font4">run_game()</span><span class="font8">，下面将更新屏幕的代码移到一个名为</span><span class="font4">update_screen()</span><span class="font8">的函数中， 并将这个函数放在模块</span><span class="font4">game_functions.py</span><span class="font8">中：</span></p>
<p><span class="font1">game_functions.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p></li></ul>
<p><span class="font0">def check_events():</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p>
<p><span class="font0">def update_screen(ai_settings, screen, ship):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font7">更新屏幕上的图像，并切换到新屏幕</span><span class="font0">&quot;&quot;&quot;</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 每次循环时都重绘屏幕</span></p></li></ul>
<p><span class="font0">screen.fill(ai_settings.bg_color)</span></p>
<p><span class="font0">ship.blitme()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 让最近绘制的屏幕可见 </span><span class="font0">pygame.display.flip()</span></p></li></ul>
<p><span class="font8">新函数</span><span class="font4">update_screen()</span><span class="font8">包含三个形参：</span><span class="font4">ai_settings</span><span class="font8">、</span><span class="font4">screen</span><span class="font8">和</span><span class="font4">ship</span><span class="font8">。现在需要将 </span><span class="font9">alien_invasion.py</span><span class="font8">的</span><span class="font4">while</span><span class="font8">循环中更新屏幕的代码替换为对函数</span><span class="font4">update_screen()</span><span class="font8">的调用：</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>