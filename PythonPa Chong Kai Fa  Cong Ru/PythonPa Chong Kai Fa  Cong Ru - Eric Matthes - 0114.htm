<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Calibri, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:9pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">6.4 </span><span class="font7">嵌套 </span><span class="font8">97</span></p>
<p><span class="font4">❷</span><span class="font0">for name, languages in favorite_languages.items():</span></p>
<p><span class="font0">print(&quot;\n&quot; + name.title() + &quot;'s favorite languages are:&quot;)</span></p>
<p><span class="font4">❸ </span><span class="font0">for language in languages:</span></p>
<p><span class="font0">print(&quot;\t&quot; + language.title())</span></p>
<p><span class="font7">正如你看到的，现在与每个名字相关联的值都是一个列表(见</span><span class="font2">O</span><span class="font7">)。请注意，有些人喜欢的 语言只有一种，而有些人有多种。遍历字典时(见</span><span class="font2">❷</span><span class="font7">)，我们使用了变量</span><span class="font3">languages</span><span class="font7">来依次存储字 典中的每个值，因为我们知道这些值都是列表。在遍历字典的主循环中，我们又使用了一个</span><span class="font3">for </span><span class="font7">循环来遍历每个人喜欢的语言列表(见</span><span class="font2">❸</span><span class="font7">)。现在，每个人想列出多少种喜欢的语言都可以：</span></p>
<p><span class="font0">Jen's favorite languages are:</span></p>
<p><span class="font0">Python</span></p>
<p><span class="font0">Ruby</span></p>
<p><span class="font0">Sarah's favorite languages are:</span></p>
<p><span class="font0">C</span></p>
<p><span class="font0">Phil's favorite languages are:</span></p>
<p><span class="font0">Python</span></p>
<p><span class="font0">Haskell</span></p>
<p><span class="font0">Edward's favorite languages are:</span></p>
<p><span class="font0">Ruby</span></p>
<p><span class="font0">Go</span></p>
<p><span class="font7">为进一步改进这个程序，可在遍历字典的</span><span class="font3">for</span><span class="font7">循环开头添加一条</span><span class="font3">if</span><span class="font7">语句，通过查看</span><span class="font3">len (languages)</span><span class="font7">的值来确定当前的被调查者喜欢的语言是否有多种。如果他喜欢的语言有多种，就 像以前一样显示输出；如果只有一种，就相应修改输出的措辞，如显示</span><span class="font3">Sarah's favorite language is C</span><span class="font7">。</span></p>
<p><span class="font7">注意 </span><span class="font6">列表和字典的嵌套层级不应太多。如果嵌套层级比前面的示例多得多，很可能有更简单 的解决问题的方案。</span></p>
<p><span class="font1">6.4.3 </span><span class="font5">在字典中存储字典</span></p>
<p><span class="font7">可在字典中嵌套字典，但这样做时，代码可能很快复杂起来。例如，如果有多个网站用户， 每个都有独特的用户名，可在字典中将用户名作为键，然后将每位用户的信息存储在一个字典中， 并将该字典作为与用户名相关联的值。在下面的程序中，对于每位用户，我们都存储了其三项信 息：名、姓和居住地；为访问这些信息，我们遍历所有的用户名，并访问与每个用户名相关联的 信息字典：</span></p>
</body>
</html>