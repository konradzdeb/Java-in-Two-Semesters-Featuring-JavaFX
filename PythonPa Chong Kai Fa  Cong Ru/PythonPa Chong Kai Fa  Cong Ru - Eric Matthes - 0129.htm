<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">112</span></p>
<p><span class="font8">第</span><span class="font9">7</span><span class="font8">章 用户输入和</span><span class="font9">while</span><span class="font8">循环</span></p>
<p><span class="font8">我们首先创建了一个列表，其中包含多个值为</span><span class="font3">‘cat’</span><span class="font8">的元素。打印这个列表后，</span><span class="font9">Python</span><span class="font8">进入 </span><span class="font3">while</span><span class="font8">循环，因为它发现</span><span class="font3">‘cat'</span><span class="font8">在列表中至少出现了一次。进入这个循环后，</span><span class="font9">Python</span><span class="font8">删除第一个</span><span class="font3">‘cat' </span><span class="font8">并返回到</span><span class="font3">while</span><span class="font8">代码行，然后发现</span><span class="font3">‘cat'</span><span class="font8">还包含在列表中，因此再次进入循环。它不断删除</span><span class="font3">‘cat'</span><span class="font8">， 直到这个值不再包含在列表中，然后退出循环并再次打印列表：</span></p>
<p><span class="font0">['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat'] ['dog', 'dog', 'goldfish', 'rabbit']</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">7.3.3</span><span class="font6"> 使用用户输入来填充字典</span></p></li></ul>
<p><span class="font8">可使用</span><span class="font3">while</span><span class="font8">循环提示用户输入任意数量的信息。下面来创建一个调查程序，其中的循环每 次执行时都提示输入被调查者的名字和回答。我们将收集的数据存储在一个字典中，以便将回答 同被调查者关联起来：</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>mountain_poll.py</span></h6>
<p><span class="font0">responses = {}</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># </span><span class="font7">设置一个标志，指出调查是否继续</span></p></li></ul>
<p><span class="font0">polling_active = True</span></p>
<p><span class="font0">while polling_active:</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 提示输入被调查者的名字和回答</span></p></li></ul>
<p><span class="font4">❶ </span><span class="font0">name = input(&quot;\nWhat is your name?&quot;)</span></p>
<p><span class="font0">response = input(&quot;Which mountain would you like to climb someday? &quot;)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 将答卷存储在字典中</span></p></li></ul>
<p><span class="font4">❷ </span><span class="font0">responses[name] = response</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 看看是否还有人要参与调查</span></p></li></ul>
<p><span class="font4">❸ </span><span class="font0">repeat = input(&quot;Would you like to let another person respond? (yes/ no)&quot;) if repeat == 'no':</span></p>
<p><span class="font0">polling_active = False</span></p>
<p><span class="font0"># </span><span class="font7">调查结束，显示结果</span></p>
<p><span class="font0">print(&quot;\n--- Poll Results ---&quot;)</span></p>
<p><span class="font4">❹</span><span class="font0">for name, response in responses.items():</span></p>
<p><span class="font0">print(name + &quot;&nbsp;would like to climb &quot;&nbsp;+ response + &quot;.&quot;)</span></p>
<p><span class="font8">这个程序首先定义了一个空字典(</span><span class="font3">responses</span><span class="font8">)，并设置了一个标志(</span><span class="font3">polling_active</span><span class="font8">)，用于 指出调查是否继续。只要</span><span class="font3">polling_active</span><span class="font8">为</span><span class="font3">True</span><span class="font8">，</span><span class="font9">Python</span><span class="font8">就运行</span><span class="font3">while</span><span class="font8">循环中的代码。</span></p>
<p><span class="font8">在这个循环中，提示用户输入其用户名及其喜欢爬哪座山(见</span><span class="font5">❶</span><span class="font8">)。将这些信息存储在字典 </span><span class="font3">responses</span><span class="font8">中(见</span><span class="font5">❷</span><span class="font8">)，然后询问用户调查是否继续(见</span><span class="font5">❸</span><span class="font8">)。如果用户输入</span><span class="font3">yes</span><span class="font8">，程序将再次进入 </span><span class="font3">while</span><span class="font8">循环；如果用户输入</span><span class="font3">no</span><span class="font8">,标志</span><span class="font3">polling_active</span><span class="font8">将被设置为</span><span class="font3">False</span><span class="font8">，而</span><span class="font3">while</span><span class="font8">循环将就此结束。 最后一个代码块(见</span><span class="font5">❹</span><span class="font8">)显示调查结果。</span></p>
</body>
</html>