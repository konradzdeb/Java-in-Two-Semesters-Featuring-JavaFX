<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">32 </span><span class="font6">第</span><span class="font7">3</span><span class="font6">章列表简介</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">3.1.1</span><span class="font5"> 访问列表元素</span></p></li></ul>
<p><span class="font6">列表是有序集合，因此要访问列表的任何元素，只需将该元素的位置或索引告诉</span><span class="font7">Python</span><span class="font6">即可。 要访问列表元素，可指出列表的名称，再指出元素的索引，并将其放在方括号内。</span></p>
<p><span class="font6">例如，下面的代码从列表</span><span class="font2">bicycles</span><span class="font6">中提取第一款自行车：</span></p>
<p><span class="font0">bicycles = ['trek', 'cannondale', 'redline', 'specialized']</span></p>
<p><span class="font3">❶ </span><span class="font0">print(bicycles[0])</span></p>
<p><span class="font4">。</span><span class="font6">处演示了访问列表元素的语法。当你请求获取列表元素时，</span><span class="font7">Python</span><span class="font6">只返回该元素，而不包 括方括号和引号：</span></p>
<p><span class="font0">trek</span></p>
<p><span class="font6">这正是你要让用户看到的结果</span><span class="font7">——</span><span class="font6">整洁、干净的输出。</span></p>
<p><span class="font6">你还可以对任何列表元素调用第</span><span class="font7">2</span><span class="font6">章介绍的字符串方法。例如，可使用方法</span><span class="font2">title()</span><span class="font6">让元素 </span><span class="font2">'trek’</span><span class="font6">的格式更整洁：</span></p>
<p><span class="font0">bicycles = ['trek', 'cannondale', 'redline', 'specialized']</span></p>
<p><span class="font0">print(bicycles[0].title())</span></p>
<p><span class="font6">这个示例的输出与前一个示例相同，只是首字母</span><span class="font7">T</span><span class="font6">是大写的。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">3.1.2</span><span class="font5"> 索引从</span><span class="font1">0</span><span class="font5">而不是</span><span class="font1">1</span><span class="font5">开始</span></p></li></ul>
<p><span class="font6">在</span><span class="font7">Python</span><span class="font6">中，第一个列表元素的索引为</span><span class="font7">0</span><span class="font6">，而不是</span><span class="font7">1</span><span class="font6">。在大多数编程语言中都是如此，这与列 表操作的底层实现相关。如果结果出乎意料，请看看你是否犯了简单的差一错误。</span></p>
<p><span class="font6">第二个列表元素的索引为</span><span class="font7">1</span><span class="font6">。根据这种简单的计数方式，要访问列表的任何元素，都可将其 位置减</span><span class="font7">1</span><span class="font6">，并将结果作为索引。例如，要访问第四个列表元素，可使用索引</span><span class="font7">3</span><span class="font6">。</span></p>
<p><span class="font6">下面的代码访问索引</span><span class="font2">1</span><span class="font6">和</span><span class="font2">3</span><span class="font6">处的自行车：</span></p>
<p><span class="font0">bicycles = ['trek', 'cannondale', 'redline', 'specialized']</span></p>
<p><span class="font0">print(bicycles[1])</span></p>
<p><span class="font0">print(bicycles[3])</span></p>
<p><span class="font6">这些代码返回列表中的第二个和第四个元素：</span></p>
<p><span class="font0">cannondale</span></p>
<p><span class="font0">specialized</span></p>
<p><span class="font7">Python</span><span class="font6">为访问最后一个列表元素提供了一种特殊语法。通过将索引指定为</span><span class="font2">-1</span><span class="font6">,可让</span><span class="font7">Python</span><span class="font6">返 回最后一个列表元素：</span></p>
<p><span class="font0">bicycles = ['trek', 'cannondale', 'redline', 'specialized']</span></p>
<div>
</div><br clear="all">
</body>
</html>