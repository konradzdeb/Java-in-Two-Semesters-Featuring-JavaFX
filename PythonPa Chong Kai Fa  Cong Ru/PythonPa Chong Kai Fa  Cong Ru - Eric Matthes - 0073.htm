<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:9pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">56</span></p>
<p><span class="font8">第</span><span class="font9">4</span><span class="font8">章 操作列表</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>4.4.2</span><span class="font6"> 遍历切片</span></h5></li></ul>
<p><span class="font8">如果要遍历列表的部分元素，可在</span><span class="font3">for</span><span class="font8">循环中使用切片。在下面的示例中，我们遍历前三名 队员，并打印他们的名字：</span></p>
<p><span class="font0">players = ['charles', 'martina', 'michael', 'florence', 'eli']</span></p>
<p><span class="font0">print(&quot;Here are the first three players on my team:&quot;)</span></p>
<p><span class="font4">❶ </span><span class="font0">for player in players[</span><span class="font7">：</span><span class="font0">3]:</span></p>
<p><span class="font0">print(player.title())</span></p>
<p><span class="font5">❶</span><span class="font8">处的代码没有遍历整个队员列表，而只遍历前三名队员：</span></p>
<p><span class="font0">Here are the first three players on my team:</span></p>
<p><span class="font0">Charles</span></p>
<p><span class="font0">Martina</span></p>
<p><span class="font0">Michael</span></p>
<p><span class="font8">在很多情况下，切片都很有用。例如，编写游戏时，你可以在玩家退出游戏时将其最终得分 加入到一个列表中。然后，为获取该玩家的三个最高得分，你可以将该列表按降序排列，再创建 一个只包含前三个得分的切片。处理数据时，可使用切片来进行批量处理；编写</span><span class="font9">Web</span><span class="font8">应用程序时， 可使用切片来分页显示信息，并在每页显示数量合适的信息。</span></p>
<ul style="list-style:none;"><li>
<h5><a name="bookmark2"></a><span class="font2"><a name="bookmark3"></a>4.4.3</span><span class="font6"> 复制列表</span></h5></li></ul>
<p><span class="font8">你经常需要根据既有列表创建全新的列表。下面来介绍复制列表的工作原理，以及复制列表 可提供极大帮助的一种情形。</span></p>
<p><span class="font8">要复制列表，可创建一个包含整个列表的切片，方法是同时省略起始索引和终止索引(</span><span class="font3">[:]</span><span class="font8">)。 这让</span><span class="font9">Python</span><span class="font8">创建一个始于第一个元素，终止于最后一个元素的切片，即复制整个列表。</span></p>
<p><span class="font8">例如，假设有一个列表，其中包含你最喜欢的四种食品，而你还想创建另一个列表，在其中 包含一位朋友喜欢的所有食品。不过，你喜欢的食品，这位朋友都喜欢，因此你可以通过复制来 创建这个列表：</span></p>
<p><span class="font1">foods.py</span></p>
<p><span class="font4">❶ </span><span class="font0">my_foods = ['pizza', 'falafel', 'carrot cake']</span></p>
<p><span class="font4">@ </span><span class="font0">friend_foods = my_foods[:]</span></p>
<p><span class="font0">print(&quot;My favorite foods are:&quot;)</span></p>
<p><span class="font0">print(my_foods)</span></p>
<p><span class="font0">print(&quot;\nMy friend's favorite foods are:&quot;)</span></p>
<p><span class="font0">print(friend_foods)</span></p>
<p><span class="font8">我们首先创建了一个名为</span><span class="font3">my_foods</span><span class="font8">的食品列表(见</span><span class="font5">❶</span><span class="font8">)，然后创建了一个名为</span><span class="font3">friend_foods</span><span class="font8">的 新列表(见</span><span class="font5">❷</span><span class="font8">)。我们在不指定任何索引的情况下从列表</span><span class="font3">my_foods</span><span class="font8">中提取一个切片，从而创建了 这个列表的副本，再将该副本存储到变量</span><span class="font3">friend_foods</span><span class="font8">中。打印每个列表后，我们发现它们包含</span></p>
</body>
</html>