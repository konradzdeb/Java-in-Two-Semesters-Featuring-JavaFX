<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:11pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:12pt SimHei, sans-serif; }
 .font5 { font:10pt SimSun, serif; }
 .font6 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font6">8.6 </span><span class="font5">将函数存储在模块中</span></p>
<p><span class="font6">135</span></p>
<p><span class="font0">from pizza import make_pizza as mp</span></p>
<p><span class="font0">mp(16, 'pepperoni')</span></p>
<p><span class="font0">mp(12, 'mushrooms', 'green peppers', 'extra cheese')</span></p>
<p><span class="font5">上面的</span><span class="font3">import</span><span class="font5">语句将函数</span><span class="font3">make_pizza()</span><span class="font5">重命名为</span><span class="font3">mp()</span><span class="font5">；在这个程序中，每当需要调用 </span><span class="font3">make_pizza()</span><span class="font5">时，都可简写成</span><span class="font3">mp()</span><span class="font5">，而</span><span class="font6">Python</span><span class="font5">将运行</span><span class="font3">make_pizza()</span><span class="font5">中的代码，这可避免与这个程序 可能包含的函数</span><span class="font3">make_pizza()</span><span class="font5">混淆。</span></p>
<p><span class="font5">指定别名的通用语法如下：</span></p>
<p><span class="font0">from </span><span class="font0" style="font-style:italic;">modul</span><span class="font0" style="font-style:italic;text-decoration:underline;">en</span><span class="font0" style="font-style:italic;">ame</span><span class="font0"> import </span><span class="font0" style="font-style:italic;">functio</span><span class="font0" style="font-style:italic;text-decoration:underline;">nn</span><span class="font0" style="font-style:italic;">ame</span><span class="font0"> as </span><span class="font0" style="font-style:italic;">fn</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">8.6.4</span><span class="font4"> 使用</span><span class="font1">as</span><span class="font4">给模块指定别名</span></p></li></ul>
<p><span class="font5">你还可以给模块指定别名。通过给模块指定简短的别名(如给模块</span><span class="font3">pizza</span><span class="font5">指定别名</span><span class="font3">p</span><span class="font5">)，让你 能够更轻松地调用模块中的函数。相比于</span><span class="font3">pizza.make_pizza()</span><span class="font5">，</span><span class="font3">p.make_pizza()</span><span class="font5">更为简洁：</span></p>
<p><span class="font0">import pizza as p</span></p>
<p><span class="font0">p.make_pizza(16, 'pepperoni')</span></p>
<p><span class="font0">p.make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')</span></p>
<p><span class="font5">上述</span><span class="font3">import</span><span class="font5">语句给模块</span><span class="font3">pizza</span><span class="font5">指定了别名</span><span class="font3">p</span><span class="font5">，但该模块中所有函数的名称都没变。调用函数 </span><span class="font3">make_pizza()</span><span class="font5">时，可编写代码</span><span class="font3">p.make_pizza()</span><span class="font5">而不是</span><span class="font3">pizza.make_pizza()</span><span class="font5">，这样不仅能使代码更简 洁，还可以让你不再关注模块名，而专注于描述性的函数名。这些函数名明确地指出了函数的功 能，对理解代码而言，它们比模块名更重要。</span></p>
<p><span class="font5">给模块指定别名的通用语法如下：</span></p>
<p><span class="font0">import </span><span class="font0" style="font-style:italic;">modul</span><span class="font0" style="font-style:italic;text-decoration:underline;">e n</span><span class="font0" style="font-style:italic;">ame as mn</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">8.6.5</span><span class="font4"> 导入模块中的所有函数</span></p></li></ul>
<p><span class="font5">使用星号(</span><span class="font3">*</span><span class="font5">)运算符可让</span><span class="font6">Python</span><span class="font5">导入模块中的所有函数：</span></p>
<p><span class="font0">from pizza import *</span></p>
<p><span class="font0">make_pizza(16, 'pepperoni')</span></p>
<p><span class="font0">make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')</span></p>
<p><span class="font3">import</span><span class="font5">语句中的星号让</span><span class="font6">Python</span><span class="font5">将模块</span><span class="font3">pizza</span><span class="font5">中的每个函数都复制到这个程序文件中。由于导入 了每个函数，可通过名称来调用每个函数，而无需使用句点表示法。然而，使用并非自己编写的 大型模块时，最好不要采用这种导入方法：如果模块中有函数的名称与你的项目中使用的名称相 同，可能导致意想不到的结果：</span><span class="font6">Python</span><span class="font5">可能遇到多个名称相同的函数或变量，进而覆盖函数，而 </span></p>
</body>
</html>