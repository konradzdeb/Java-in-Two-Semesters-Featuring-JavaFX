<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:9pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">20</span></p>
<p><span class="font7">第</span><span class="font8">2</span><span class="font7">章 变量和简单数据类型</span></p>
<p><span class="font7">示姓名时再将它们合而为一：</span></p>
<p><span class="font0">first_name = &quot;ada&quot; last_name = &quot;lovelace&quot;</span></p>
<p><span class="font3">❶ </span><span class="font0">full_name = first_name + &quot;&nbsp;&quot;&nbsp;+ last_name</span></p>
<p><span class="font0">print(full_name)</span></p>
<p><span class="font8">Python</span><span class="font7">使用加号(</span><span class="font2">+ </span><span class="font7">)来合并字符串。在这个示例中，我们使用</span><span class="font2">+</span><span class="font7">来合并</span><span class="font2">first_name</span><span class="font7">、空格和 </span><span class="font2">last_name</span><span class="font7">,以得到完整的姓名(见</span><span class="font4">❶</span><span class="font7">)，其结果如下：</span></p>
<p><span class="font0">ada lovelace</span></p>
<p><span class="font7">这种合并字符串的方法称为</span><span class="font6">拼接</span><span class="font7">。通过拼接，可使用存储在变量中的信息来创建完整的消息。 下面来看一个例子：</span></p>
<p><span class="font0">first_name = &quot;ada&quot;</span></p>
<p><span class="font0">last_name = &quot;lovelace&quot;</span></p>
<p><span class="font0">full_name = first_name + &quot;&nbsp;&quot;&nbsp;+ last_name</span></p>
<p><span class="font3">❶ </span><span class="font0">print(&quot;Hello, &quot;&nbsp;+ full_name.title() + &quot;!&quot;)</span></p>
<p><span class="font7">在这里，一个问候用户的句子中使用了全名(见</span><span class="font4">❶</span><span class="font7">)，并使用了方法</span><span class="font2">title</span><span class="font7">。来将姓名设置为 合适的格式。这些代码显示一条格式良好的简单问候语：</span></p>
<p><span class="font0">Hello, Ada Lovelace!</span></p>
<p><span class="font7">你可以使用拼接来创建消息，再把整条消息都存储在一个变量中：</span></p>
<p><span class="font0">first_name = &quot;ada&quot;</span></p>
<p><span class="font0">last_name = &quot;lovelace&quot;</span></p>
<p><span class="font0">full_name = first_name + &quot;&nbsp;&quot;&nbsp;+ last_name</span></p>
<p><span class="font3">❶ </span><span class="font0">message = &quot;Hello, &quot;&nbsp;+ full_name.title() + &quot;!&quot;</span></p>
<p><span class="font3">❷ </span><span class="font0">print(message)</span></p>
<p><span class="font7">上述代码也显示消息“</span><span class="font8">Hello, Ada Lovelace!</span><span class="font7">”，但将这条消息存储在了一个变量中(见</span><span class="font4">❶</span><span class="font7">)， 这让最后的</span><span class="font2">print</span><span class="font7">语句简单得多(见</span><span class="font4">❷</span><span class="font7">)。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">2.3.3</span><span class="font5"> 使用制表符或换行符来添加空白</span></p></li></ul>
<p><span class="font7">在编程中，</span><span class="font6">空白</span><span class="font7">泛指任何非打印字符，如空格、制表符和换行符。你可使用空白来组织输出， 以使其更易读。</span></p>
<p><span class="font7">要在字符串中添加制表符，可使用字符组合</span><span class="font2">\t</span><span class="font7">，如下述代码的</span><span class="font4">❶</span><span class="font7">处所示：</span></p>
<p><span class="font0">&gt;&gt;&gt; </span><span class="font0" style="font-weight:bold;">print(&quot;Python&quot;)</span></p>
<p><span class="font0">Python</span></p>
</body>
</html>