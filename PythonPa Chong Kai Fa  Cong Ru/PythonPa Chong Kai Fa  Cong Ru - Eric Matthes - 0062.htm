<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:10pt SimHei, sans-serif; }
 .font4 { font:12pt SimHei, sans-serif; }
 .font5 { font:10pt SimSun, serif; }
 .font6 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font6">4.1 </span><span class="font5">遍历整个列表 </span><span class="font6">45</span></p>
<p><span class="font5">这行代码让</span><span class="font6">Python</span><span class="font5">从列表</span><span class="font2">magicians</span><span class="font5">中取出一个名字，并将其存储在变量</span><span class="font2">magician</span><span class="font5">中。最后，我们 让</span><span class="font6">Python</span><span class="font5">打印前面存储到变量</span><span class="font2">magician</span><span class="font5">中的名字(见</span><span class="font3">❸</span><span class="font5">)。这样，对于列表中的每个名字，</span><span class="font6">Python </span><span class="font5">都将重复执行</span><span class="font3">❷</span><span class="font5">处和</span><span class="font3">❸</span><span class="font5">处的代码行。你可以这样解读这些代码：对于列表</span><span class="font2">magicians</span><span class="font5">中的每位魔术 师，都将其名字打印出来。输出很简单，就是列表中所有的姓名：</span></p>
<p><span class="font0">alice david carolina</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">4.1.1</span><span class="font4"> 深入地研究循环</span></p></li></ul>
<p><span class="font5">循环这种概念很重要，因为它是让计算机自动完成重复工作的常见方式之一。例如，在前面 的</span><span class="font6">magicians.py</span><span class="font5">中使用的简单循环中，</span><span class="font6">Python</span><span class="font5">将首先读取其中的第一行代码：</span></p>
<p><span class="font0">for magician in magicians:</span></p>
<p><span class="font5">这行代码让</span><span class="font6">Python</span><span class="font5">获取列表</span><span class="font2">magicians</span><span class="font5">中的第一个值(</span><span class="font2">‘alice'</span><span class="font5">)，并将其存储到变量</span><span class="font2">magician </span><span class="font5">中。接下来，</span><span class="font6">Python</span><span class="font5">读取下一行代码：</span></p>
<p><span class="font0">print(magician)</span></p>
<p><span class="font5">它让</span><span class="font6">Python</span><span class="font5">打印</span><span class="font2">magician</span><span class="font5">的值---依然是</span><span class="font2">‘alice'</span><span class="font5">。鉴于该列表还包含其他值，</span><span class="font6">Python</span><span class="font5">返回至</span><span class="font6">U</span></p>
<p><span class="font5">循环的第一行：</span></p>
<p><span class="font0">for magician in magicians:</span></p>
<p><span class="font6">Python</span><span class="font5">获取列表中的下一个名字——</span><span class="font2">'david'</span><span class="font5">,并将其存储到变量</span><span class="font2">magician</span><span class="font5">中，再执行下面这 行代码：</span></p>
<p><span class="font0">print(magician)</span></p>
<p><span class="font6">Python</span><span class="font5">再次打印变量</span><span class="font2">magician</span><span class="font5">的值 当前为</span><span class="font2">‘david'</span><span class="font5">。接下来，</span><span class="font6">Python</span><span class="font5">再次执行整个循环， 对列表中的最后一个值一</span><span class="font2">‘carolina′</span><span class="font5">进行处理。至此，列表中没有其他的值了，因此</span><span class="font6">Python</span><span class="font5">接 着执行程序的下一行代码。在这个示例中，</span><span class="font2">for</span><span class="font5">循环后面没有其他的代码，因此程序就此结束。</span></p>
<p><span class="font5">刚开始使用循环时请牢记,对列表中的每个元素,都将执行循环指定的步骤,而不管列表包 含多少个元素。如果列表包含一百万个元素，</span><span class="font6">Python</span><span class="font5">就重复执行指定的步骤一百万次，且通常速 度非常快。</span></p>
<p><span class="font5">另外，编写</span><span class="font2">for</span><span class="font5">循环时，对于用于存储列表中每个值的临时变量，可指定任何名称。然而， 选择描述单个列表元素的有意义的名称大有帮助。例如,对于小猫列表、小狗列表和一般性列表, 像下面这样编写</span><span class="font2">for</span><span class="font5">循环的第一行代码是不错的选择：</span></p>
<div>
</div><br clear="all">
</body>
</html>