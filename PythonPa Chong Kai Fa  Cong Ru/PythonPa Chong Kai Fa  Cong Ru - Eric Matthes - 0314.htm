<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">15.3 </span><span class="font8">随机漫步</span></p>
<p><span class="font9">297</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 决定前进方向以及沿这个方向前进的距离</span></p></li></ul>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">x_direction = choice([l, -1])</span></p>
<p><span class="font0">x_distance = choice([0, 1, 2, 3, 4])</span></p>
<p><span class="font4">❸ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">x_step = x_direction * x_distance</span></p>
<p><span class="font0">y_direction = choice([1, -1])</span></p>
<p><span class="font0">y_distance = choice([0, 1, 2, 3, 4])</span></p>
<p><span class="font4">❹ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">y_step = y_direction * y_distance</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 拒绝原地踏步</span></p></li></ul>
<p><span class="font4">❺ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">if x_step == 0 and y_step == 0:</span></p>
<p><span class="font0">continue</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 计算下一个点的</span><span class="font0">x</span><span class="font7">和</span><span class="font0">y</span><span class="font7">值</span></p></li></ul>
<p><span class="font4">❻ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">next_x = self.x_values[-l] + x_step</span></p>
<p><span class="font0">next_y = self.y_values[-1] + y_step</span></p>
<p><span class="font0">self.x_values.append(next_x)</span></p>
<p><span class="font0">self.y_values.append(next_y)</span></p>
<p><span class="font8">在。处，我们建立了一个循环，这个循环不断运行，直到漫步包含所需数量的点。这个方法 的主要部分告诉</span><span class="font9">Python</span><span class="font8">如何模拟四种漫步决定：向右走还是向左走？沿指定的方向走多远？向上 走还是向下走？沿选定的方向走多远？</span></p>
<p><span class="font8">我们使用</span><span class="font3">choice([l, -1])</span><span class="font8">给</span><span class="font3">x_direction</span><span class="font8">选择一个值，结果要么是表示向右走的</span><span class="font9">1</span><span class="font8">,要么是表 示向左走的</span><span class="font5">-</span><span class="font9">1 </span><span class="font8">(见</span><span class="font5">❷</span><span class="font8">)。接下来，</span><span class="font3">choice([0, 1, 2, 3, 4])</span><span class="font8">随机地选择一个</span><span class="font9">0~4</span><span class="font8">之间的整数，告诉 </span><span class="font9">Python</span><span class="font8">沿指定的方向走多远(</span><span class="font3">x_distance</span><span class="font8">)。(通过包含</span><span class="font9">0</span><span class="font8">，我们不仅能够沿两个轴移动，还能够 沿</span><span class="font9" style="font-style:italic;">^</span><span class="font8">轴移动。)</span></p>
<p><span class="font8">在</span><span class="font5">❸</span><span class="font8">和</span><span class="font5">❹</span><span class="font8">处，我们将移动方向乘以移动距离，以确定沿</span><span class="font9" style="font-style:italic;">x</span><span class="font8">和</span><span class="font9" style="font-style:italic;">^</span><span class="font8">轴移动的距离。如果</span><span class="font3">x_step</span><span class="font8">为正， 将向右移动，为负将向左移动，而为零将垂直移动；如果</span><span class="font3">y_step</span><span class="font8">为正，就意味着向上移动，为负 意味着向下移动，而为零意味着水平移动。如果</span><span class="font3">x_step</span><span class="font8">和</span><span class="font3">y_step</span><span class="font8">都为零，则意味着原地踏步，我 们拒绝这样的情况，接着执行下一次循环(见</span><span class="font5">❺</span><span class="font8">)。</span></p>
<p><span class="font8">为获取漫步中下一个点的谴，我们将</span><span class="font3">x_step</span><span class="font8">与</span><span class="font3">x_values</span><span class="font8">中的最后一个值相加(见</span><span class="font5">❻</span><span class="font8">)，对于</span><span class="font9" style="font-style:italic;">y </span><span class="font8">值也做相同的处理。获得下一个点的</span><span class="font9" style="font-style:italic;">x</span><span class="font8">值和脑后，我们将它们分别附加到列表</span><span class="font3">x_values</span><span class="font8">和</span><span class="font3">y_values </span><span class="font8">的末尾。</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">15</span></p>
</div><br clear="all">
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>15.3.3</span><span class="font6"> 绘制随机漫步图</span></h5></li></ul>
<p><span class="font8">下面的代码将随机漫步的所有点都绘制出来：</span></p>
<p><span class="font1">rw_visual.py</span></p>
<p><span class="font0">import matplotlib.pyplot as plt</span></p>
<p><span class="font0">from random_walk import RandomWalk</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>