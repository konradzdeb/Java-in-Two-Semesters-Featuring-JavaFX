<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:11pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:7pt SimHei, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:12pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:10pt SimSun, serif; }
 .font10 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font10">9.2 </span><span class="font9">使用类和实例 </span><span class="font10">143</span></p>
<p><span class="font9">据类创建的实例上。你需要执行的一个重要任务是修改实例的属性。你可以直接修改实例的属性， 也可以编写方法以特定的方式进行修改。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font3"><a name="bookmark1"></a>9.2.1</span><span class="font2"> Car </span><span class="font7">类</span></h5></li></ul>
<p><span class="font9">下面来编写一个表示汽车的类，它存储了有关汽车的信息，还有一个汇总这些信息的方法：</span></p>
<p><span class="font1">car.py</span></p>
<p><span class="font0">class Car():</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font8">一次模拟汽车的简单尝试</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font5">❶ </span><span class="font0">def ―init—(self, make, model, year):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font8">初始化描述汽车的属性</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">self.make = make</span></p>
<p><span class="font0">self.model = model</span></p>
<p><span class="font0">self.year = year</span></p>
<p><span class="font0">def get_descriptive_name(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font8">返回整洁的描述性信息</span><span class="font0">&quot;&quot;&quot; long_name = str(self.year) + return long_name.title()</span></p>
<div>
<p><span class="font0">+ self.make + ' ' + self.model</span></p>
</div><br clear="all">
<p><span class="font5">❸ </span><span class="font0">my_new_car = Car('audi', 'a4', 2016) print(my_new_car.get_descriptive_name())</span></p>
<p><span class="font9">在</span><span class="font6">❶</span><span class="font9">处，我们定义了方法</span><span class="font4">_init_()</span><span class="font9">。与前面的</span><span class="font4">Dog</span><span class="font9">类中一样，这个方法的第一个形参为</span><span class="font4">self</span><span class="font9">； 我们还在这个方法中包含了另外三个形参：</span><span class="font4">make</span><span class="font9">、</span><span class="font4">model</span><span class="font9">和</span><span class="font4">year</span><span class="font9">。方法</span><span class="font4">_init__()</span><span class="font9">接受这些形参的 值，并将它们存储在根据这个类创建的实例的属性中。创建新的</span><span class="font4">Car</span><span class="font9">实例时，我们需要指定其制 造商、型号和生产年份。</span></p>
<p><span class="font9">在</span><span class="font6">❷</span><span class="font9">处，我们定义了一个名为</span><span class="font4">get_descriptive_name()</span><span class="font9">的方法，它使用属性</span><span class="font4">year</span><span class="font9">、</span><span class="font4">make</span><span class="font9">和</span><span class="font4">model </span><span class="font9">创建一个对汽车进行描述的字符串，让我们无需分别打印每个属性的值。为在这个方法中访问属 性的值，我们使用了</span><span class="font4">self.make</span><span class="font9">、</span><span class="font4">self.model</span><span class="font9">和</span><span class="font4">self.year</span><span class="font9">。在</span><span class="font6">❸</span><span class="font9">处，我们根据</span><span class="font4">Car</span><span class="font9">类创建了一个实 例，并将其存储到变量</span><span class="font4">my_new_car</span><span class="font9">中。接下来，我们调用方法</span><span class="font4">get_descriptive_name()</span><span class="font9">，指出我 们拥有的是一辆什么样的汽车：</span></p>
<p><span class="font0">2016 Audi A4</span></p>
<p><span class="font9">为让这个类更有趣，下面给它添加一个随时间变化的属性，它存储汽车的总里程。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">9.2.2</span><span class="font7"> 给属性指定默认值</span></p></li></ul>
<p><span class="font9">类中的每个属性都必须有初始值，哪怕这个值是</span><span class="font10">0</span><span class="font9">或空字符串。在有些情况下，如设置默认 值时，在方法</span><span class="font4">__init__()</span><span class="font9">内指定这种初始值是可行的；如果你对某个属性这样做了，就无需包含 为它提供初始值的形参。</span></p>
</body>
</html>