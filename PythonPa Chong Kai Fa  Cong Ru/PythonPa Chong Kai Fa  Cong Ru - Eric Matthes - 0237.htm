<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">220 </span><span class="font7">第</span><span class="font8">12</span><span class="font7">章 武装飞船</span></p>
<p><span class="font3">elf</span><span class="font7">代码块，是因为每个事件都只与一个键相关联；如果玩家同时按下了左右箭头键，将检测到 两个不同的事件。</span></p>
<p><span class="font7">如果此时运行</span><span class="font8">alien_invasion.py</span><span class="font7">，将能够不断地左右移动飞船；如果你同时按左右箭头键，飞 船将纹丝不动。</span></p>
<p><span class="font7">下面来进一步优化飞船的移动方式：调整飞船的速度；限制飞船的移动距离，以免它移到屏 幕外面去。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>12.6.4 </span><span class="font5">调整飞船的速度</span></h5></li></ul>
<p><span class="font7">当前，每次执行</span><span class="font3">while</span><span class="font7">循环时，飞船最多移动</span><span class="font8">1</span><span class="font7">像素，但我们可以在</span><span class="font3">Settings</span><span class="font7">类中添加属性 </span><span class="font3">ship_speed_factor</span><span class="font7">，用于控制飞船的速度。我们将根据这个属性决定飞船在每次循环时最多移动 多少距离。下面演示了如何在</span><span class="font8">settings.py</span><span class="font7">中添加这个新属性：</span></p>
<p><span class="font1">settings.py</span></p>
<p><span class="font0">class Settings():</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">一个存储游戏《外星人入侵》的所有设置的类</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">def __init__(self):</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li>
<li>
<p><span class="font0">#</span><span class="font6"> 飞船的设置</span></p></li></ul>
<p><span class="font0">self.ship_speed_factor = 1.5</span></p>
<p><span class="font7">我们将</span><span class="font3">ship_speed_factor</span><span class="font7">的初始值设置成了</span><span class="font3">1.5</span><span class="font7">。需要移动飞船时，我们将移动</span><span class="font8">1.5</span><span class="font7">像素而不 是</span><span class="font8">1</span><span class="font7">像素。</span></p>
<p><span class="font7">通过将速度设置指定为小数值，可在后面加快游戏的节奏时更细致地控制飞船的速度。然而， </span><span class="font3">rect</span><span class="font7">的</span><span class="font3">centerx</span><span class="font7">等属性只能存储整数值，因此我们需要对</span><span class="font3">Ship</span><span class="font7">类做些修改：</span></p>
<p><span class="font1">ship.py</span></p>
<p><span class="font0">class Ship():</span></p>
<p><span class="font4">❶ </span><span class="font0">def ―init—(self, ai_settings, screen):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">初始化飞船并设置其初始位置</span><span class="font0">&quot;&quot;&quot; self.screen = screen</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.ai_settings = ai_settings</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li>
<li>
<p><span class="font0">#</span><span class="font6"> 将每艘新飞船放在屏幕底部中央</span></p></li>
<li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li>
<li>
<p><span class="font0">#</span><span class="font6"> 在飞船的属性</span><span class="font0">center</span><span class="font6">中存储小数值</span></p></li></ul>
<p><span class="font0">self.center = float(self.rect.centerx) # </span><span class="font6">移动标志</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>