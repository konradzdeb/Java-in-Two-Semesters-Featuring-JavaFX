<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:6pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:10pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Consolas, monospace; }
 .font5 { font:10pt Segoe UI, sans-serif; }
 .font6 { font:7pt SimHei, sans-serif; }
 .font7 { font:10pt SimHei, sans-serif; }
 .font8 { font:12pt SimHei, sans-serif; }
 .font9 { font:9pt SimSun, serif; }
 .font10 { font:10pt SimSun, serif; }
 .font11 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font11">426</span></p>
<p><span class="font10">第</span><span class="font11">20</span><span class="font10">章 设置应用程序的样式并对其进行部署</span></p>
<p><span class="font10">服务器时，可能会不小心用本地测试数据库覆盖在线数据库。</span></p>
<p><span class="font7">注意 </span><span class="font9">如果你使用的是</span><span class="font11">Python 2.7</span><span class="font9">,请将</span><span class="font11">_</span><span class="font5">pycache</span><span class="font11">_</span><span class="font9">替换为</span><span class="font11">*.</span><span class="font5">pyc</span><span class="font9">,因为</span><span class="font11">Python 2.7</span><span class="font9">不会创建目录 </span><span class="font11">__pycache__</span><span class="font9">。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">4 . </span><span class="font7">提交项目</span></p></li></ul>
<p><span class="font10">我们需要为“学习笔记”初始化一个</span><span class="font11">Git</span><span class="font10">仓库，将所有必要的文件都加入到这个仓库中，并 提交项目的初始状态，如下所示：</span></p>
<p><span class="font0">❶</span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">git init</span></p>
<p><span class="font1">Initialized empty Git repository in /home/ehmatthes/pcc/learning_log/.git/ </span><span class="font0">❷</span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">git add .</span></p>
<p><span class="font0">❸</span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">git commit -am &quot;Ready for deployment to heroku.&quot;</span></p>
<p><span class="font1">[master (root-commit) dbc1d99] Ready for deployment to heroku.</span></p>
<p><span class="font1">43 files changed, 746 insertions(+)</span></p>
<p><span class="font1">create mode 100644 .gitignore</span></p>
<p><span class="font1">create mode 100644 Procfile</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">--</span><span class="font1" style="font-style:italic;">snip</span><span class="font1">--</span></p></li></ul>
<p><span class="font1">create mode 100644 users/views.py</span></p>
<p><span class="font0">❹</span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">git status</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1"># On branch master</span></p></li></ul>
<p><span class="font1">nothing to commit, working directory clean</span></p>
<p><span class="font1">(ll_env)learning_log$</span></p>
<p><span class="font10">在</span><span class="font7">❶</span><span class="font10">处，我们执行命令</span><span class="font5">git init</span><span class="font10">，在“学习笔记”所在的目录中初始化一个空仓库。在</span><span class="font7">❷</span><span class="font10">处， 我们执行了命令</span><span class="font5">git add </span><span class="font11">.</span><span class="font10">(千万别忘了这个句点)，它将未被忽略的文件都添加到这个仓库中。 在</span><span class="font7">❸</span><span class="font10">处，我们执行了命令</span><span class="font5">git commit -am </span><span class="font4" style="font-style:italic;">commit message</span><span class="font10">，其中的标志</span><span class="font5">-a</span><span class="font10">让</span><span class="font11">Git</span><span class="font10">在这个提交中包含 所有修改过的文件，而标志</span><span class="font5">-m</span><span class="font10">让</span><span class="font11">Git</span><span class="font10">记录一条日志消息。</span></p>
<p><span class="font10">在</span><span class="font7">❹</span><span class="font10">处，我们执行了命令</span><span class="font5">git status</span><span class="font10">，输出表明当前位于分支</span><span class="font11">master</span><span class="font10">中，而工作目录是</span><span class="font9">干净 </span><span class="font10">(</span><span class="font11">clean</span><span class="font10">)的。每当你要将项目推送到</span><span class="font11">Heroku</span><span class="font10">时，都希望看到这样的状态。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font3"><a name="bookmark1"></a>20.2.12</span><span class="font8"> 推送到 </span><span class="font3">Heroku</span></h5></li></ul>
<h6><a name="bookmark2"></a><span class="font10"><a name="bookmark3"></a>我们终于为将项目推送到</span><span class="font11">Heroku</span><span class="font10">做好了准备。在活动的虚拟环境中，执行下面的命令：</span></h6>
<p><span class="font0">❶</span><span class="font6"> </span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">heroku login</span></p>
<p><span class="font1">Enter your Heroku credentials.</span></p>
<p><span class="font1">Email: </span><a href="mailto:eric@example.com"><span class="font1" style="font-weight:bold;">eric@example.com</span></a></p>
<p><span class="font1">Password (typing will be hidden):</span></p>
<p><span class="font1">Logged in as </span><a href="mailto:eric@example.com"><span class="font1">eric@example.com</span></a></p>
<p><span class="font0">❷</span><span class="font6"> </span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">heroku create</span></p>
<p><span class="font1">Creating afternoon-meadow-2775... done, stack is cedar-14</span></p>
<p><a href="https://afternoon-meadow-2775.herokuapp.com/"><span class="font1">https://afternoon-meadow-2775.herokuapp.com/</span></a><span class="font1"> |</span></p>
<p><a href="https://git.heroku.com/afternoon-meadow-2775.git"><span class="font1">https://git.heroku.com/afternoon-meadow-2775.git</span></a></p>
<p><span class="font1">Git remote heroku added</span></p>
<p><span class="font0">❸</span><span class="font6"> </span><span class="font1">(ll_env)learning_log$ </span><span class="font1" style="font-weight:bold;">git push heroku master</span></p>
<div>
</div><br clear="all">
</body>
</html>