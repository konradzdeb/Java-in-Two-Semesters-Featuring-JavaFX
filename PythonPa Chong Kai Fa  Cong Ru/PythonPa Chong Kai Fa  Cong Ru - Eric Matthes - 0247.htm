<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:11pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:7pt SimHei, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:12pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:10pt SimSun, serif; }
 .font10 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font10">230</span></p>
<p><span class="font9">第</span><span class="font10">12</span><span class="font9">章 武装飞船</span></p>
<p><span class="font10">game_fUnctions.py </span><span class="font9">的末尾：</span></p>
<p><span class="font1">game_functions.py</span></p>
<p><span class="font0">def update_bullets(bullets):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font8">更新子弹的位置，并删除已消失的子弹</span><span class="font0">&quot;&quot;&quot; # </span><span class="font8">更新子弹的位置</span></p>
<p><span class="font0">bullets.update()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8"> 删除已消失的子弹</span></p></li></ul>
<p><span class="font0">for bullet in bullets.copy():</span></p>
<p><span class="font0">if bullet.rect.bottom &lt;= 0:</span></p>
<p><span class="font0">bullets.remove(bullet)</span></p>
<p><span class="font4">update_bullets()</span><span class="font9">的代码是从</span><span class="font10">alien_mvasion.py</span><span class="font9">剪切并粘贴而来的，它只需要一个参数，即编 组</span><span class="font4">bullets</span><span class="font9">。</span></p>
<p><span class="font10">alien_invasion.py</span><span class="font9">中的</span><span class="font4">while</span><span class="font9">循环又变得很简单了：</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>alien_invasion.py</span></h6>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8"> 开始游戏主循环</span></p></li></ul>
<p><span class="font0">while True:</span></p>
<p><span class="font5">❶ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">gf.check_events(ai_settings, screen, ship, bullets)</span></p>
<p><span class="font5">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">ship.update()</span></p>
<p><span class="font5">❸ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">gf.update_bullets(bullets)</span></p>
<p><span class="font5">❹ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">gf.update_screen(ai_settings, screen, ship, bullets)</span></p>
<p><span class="font9">我们让主循环包含尽可能少的代码，这样只要看函数名就能迅速知道游戏中发生的情况。主 循环检查玩家的输入(见</span><span class="font6">❶</span><span class="font9">)，然后更新飞船的位置(见</span><span class="font6">❷</span><span class="font9">)和所有未消失的子弹的位置(见</span><span class="font6">❸</span><span class="font9">)。 接下来，我们使用更新后的位置来绘制新屏幕(见</span><span class="font6">❹</span><span class="font9">)。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">12.8.8</span><span class="font7"> 创建函数 </span><span class="font2">fire_bullet()</span></p></li></ul>
<p><span class="font9">下面将发射子弹的代码移到一个独立的函数中，这样，在</span><span class="font4">check_keydown_events()</span><span class="font9">中只需使 用一行代码来发射子弹，让</span><span class="font4">elif</span><span class="font9">代码块变得非常简单：</span></p>
<h6><a name="bookmark2"></a><span class="font1"><a name="bookmark3"></a>game_functions.py</span></h6>
<p><span class="font0">def check_keydown_events(event, ai_settings, screen, ship, bullets): &quot;&quot;&quot;</span><span class="font8">响应按键</span><span class="font0">&quot;&quot;&quot;</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<p><span class="font0">elif event.key == pygame.K_SPACE:</span></p>
<p><span class="font0">fire_bullet(ai_settings, screen, ship, bullets)</span></p>
<p><span class="font0">def fire_bullet(ai_settings, screen, ship, bullets): &quot;&quot;&quot;</span><span class="font8">如果还没有到达限制，就发射一颗子弹</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">#</span><span class="font8">创建新子弹，并将其加入到编组</span><span class="font0">bullets</span><span class="font8">中</span></p>
<p><span class="font0">if len(bullets) &lt;&nbsp;ai_settings.bullets_allowed: new_bullet = Bullet(ai_settings, screen, ship) bullets.add(new_bullet)</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>