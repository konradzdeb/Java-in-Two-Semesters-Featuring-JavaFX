<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:7pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:9pt Arial, sans-serif; }
 .font3 { font:8pt SimHei, sans-serif; }
 .font4 { font:12pt SimHei, sans-serif; }
 .font5 { font:10pt SimSun, serif; }
 .font6 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font6">5.4</span><span class="font5">使用</span><span class="font6">if</span><span class="font5">语句处理列表 </span><span class="font6">79</span></p>
<p><span class="font0" style="font-weight:bold;">print(&quot;XnFinished making your pizza!&quot;)</span></p>
<p><span class="font5">在❶处，我们定义了一个列表，其中包含比萨店供应的配料。请注意，如果比萨店供应的配 料是固定的，也可使用一个元组来存储它们。在❷处，我们又创建了一个列表，其中包含顾客点 的配料，请注意那个不同寻常的配料——</span><span class="font6">'french fries%</span><span class="font5">在❸处，我们遍历顾客点的配料列表。 在这个循环中，对于顾客点的每种配料，我们都检查它是否包含在供应的配料列表中(见❹)； 如果答案是肯定的，就将其加入到比萨中，否则将运行</span><span class="font6">else</span><span class="font5">代码块(见。)：打印一条消息，告 诉顾客不供应这种配料。</span></p>
<p><span class="font5">这些代码的输出整洁而详实：</span></p>
<p><span class="font0" style="font-weight:bold;">Adding mushrooms.</span></p>
<p><span class="font0" style="font-weight:bold;">Sorry, we don't have french fries.</span></p>
<p><span class="font0" style="font-weight:bold;">Adding extra cheese.</span></p>
<p><span class="font0" style="font-weight:bold;">Finished making your pizza!</span></p>
<p><span class="font5">通过为数不多的几行代码，我们高效地处理了一种真实的情形！</span></p>
<p><span class="font4">动手试一试</span></p>
<p><span class="font2">5-8</span><span class="font5">以特殊方式跟管理员打招呼：创建一个至少包含</span><span class="font6">5</span><span class="font5">个用户名的列表，且其中一 个用户名为</span><span class="font6">'admin'</span><span class="font5">。想象你要编写代码，在每位用户登录网站后都打印一条问候消息。 遍历用户名列表，并向每位用户打印一条问候消息。</span></p>
<p><span class="font5">□如果用户名为‘</span><span class="font6">admin</span><span class="font5">就打印一条特殊的问候消息，如</span><span class="font6">&quot;Hello admin, would you like to see a status report?”</span><span class="font5">。</span></p>
<p><span class="font5">口否则，打印一条普通的问候消息，如 </span><span class="font6">&quot;Hello Eric, thank you for logging in again” <sub>o</sub></span></p>
<p><span class="font2">5-9</span><span class="font5">处理没有用户的情形：在为完成练习</span><span class="font6">5</span><span class="font5">・</span><span class="font6">8</span><span class="font5">编写的程序中，添加一条</span><span class="font6">if</span><span class="font5">语句，检 查用户名列表是否为空。</span></p>
<p><span class="font5">□如果为空，就打印消息</span><span class="font6">“We need to find some users! ” °</span></p>
<p><span class="font5">口删除列表中的所有用户名，确定将打印正确的消息。</span></p>
<p><span class="font2">5-10</span><span class="font5">检查用户名：按下面的说明编写一个程序，模拟网站确保每位用户的用户名 都独一无二的方式。</span></p>
<p><span class="font5">口创建一个至少包含</span><span class="font6">5</span><span class="font5">个用户名的列表，并将其命名为</span><span class="font6">current userso</span></p>
<p><span class="font5">口再创建一个包含</span><span class="font6">5</span><span class="font5">个用户名的列表，将其命名为</span><span class="font6">new_users,</span><span class="font5">并确保其中有一两 个用户名也包含在列表</span><span class="font6">current users</span><span class="font5">中。</span></p>
<p><span class="font5">口遍历列表</span><span class="font6">new_users,</span><span class="font5">对于其中的每个用户名，都检查它是否已被使用。如果是 这样，就打印一条消息，指出需要输入别的用户名；否则，打印一条消息，指 出这个用户名未被使用。</span></p>
<p><span class="font3">图灵社区会员江子涛</span><span class="font1">Tesla(jiangzitao201314@foxmail.com)</span><span class="font3">专享尊重版权</span></p>
</body>
</html>