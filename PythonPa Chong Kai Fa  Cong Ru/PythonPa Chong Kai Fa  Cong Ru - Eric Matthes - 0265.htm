<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:8pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:9pt Times New Roman, serif; }
 .font10 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font10">248</span></p>
<p><span class="font8">第</span><span class="font10">13</span><span class="font8">章 外星人</span></p>
<p><span class="font8">测试有些功能时，可以修改游戏的某些设置，以便专注于游戏的特定方面。例如，可以缩小屏 幕以减少需要击落的外星人数量，也可以提高子弹的速度，以便能够在单位时间内发射大量子弹。</span></p>
<p><span class="font8">测试这个游戏时，我喜欢做的一项修改是增大子弹的尺寸，使其在击中外星人后依然有效，</span></p>
<p><span class="font8">如图</span><span class="font10">13-6</span><span class="font8">所示。请尝试将</span><span class="font3">bullet_width</span><span class="font8">设置为</span><span class="font10">300</span><span class="font8">,看看将所有外星人都射杀有多快！</span></p>
<p><span class="font8">类似这样的修改可提高测试效率，还可能激发出如何赋予玩家更大威力的思想火花。(完成 测试后,别忘了将设置恢复正常。)</span></p><img src="PythonPa Chong Kai Fa  Cong Ru - Eric Matthes - 0265_files/PythonPa20Chong20Kai20Fa2020Cong20Ru20-20Eric20Matthes20-200265-1.jpg" alt="" style="width:325pt;height:224pt;">
<p><span class="font5">图</span><span class="font9">13-6 </span><span class="font5">威力更大的子弹让游戏的有些方法测试起来更容易</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">13.5.3</span><span class="font6"> 生成新的外星人群</span></p></li></ul>
<p><span class="font8">这个游戏的一个重要特点是外星人无穷无尽,一个外星人群被消灭后,又会出现一群外星人。</span></p>
<p><span class="font8">要在外星人群被消灭后又显示一群外星人，首先需要检查编组</span><span class="font3">aliens</span><span class="font8">是否为空。如果为空， 就调用</span><span class="font3">create_fleet()</span><span class="font8">。我们将在</span><span class="font3">update_bullets()</span><span class="font8">中执行这种检查，因为外星人都是在这里被 消灭的：</span></p>
<p><span class="font1">game_functions.py</span></p>
<p><span class="font0">def update_bullets(ai_settings, screen, ship, aliens, bullets):</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 检查是否有子弹击中了外星人</span></p></li>
<li>
<p><span class="font0">#</span><span class="font7"> 如果是，就删除相应的子弹和外星人</span></p></li></ul>
<p><span class="font0">collisions = pygame.sprite.groupcollide(bullets, aliens, True, True)</span></p>
<p><span class="font4">❶ </span><span class="font0">if len(aliens) == 0:</span></p>
<div>
</div><br clear="all">
</body>
</html>