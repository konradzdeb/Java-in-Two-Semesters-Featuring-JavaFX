<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">7.2 while</span><span class="font7">循环简介</span></p>
<p><span class="font8">105</span></p>
<p><span class="font0">1</span></p>
<p><span class="font0">2</span></p>
<p><span class="font0">3</span></p>
<p><span class="font0">4</span></p>
<p><span class="font0">5</span></p>
<p><span class="font7">你每天使用的程序很可能就包含</span><span class="font3">while</span><span class="font7">循环。例如，游戏使用</span><span class="font3">while</span><span class="font7">循环，确保在玩家想玩时 不断运行，并在玩家想退出时停止运行。如果程序在用户没有让它停止时停止运行，或者在用户 要退出时还继续运行，那就太没有意思了；有鉴于此，</span><span class="font3">while</span><span class="font7">循环很有用。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">7.2.2</span><span class="font6"> 让用户选择何时退出</span></p></li></ul>
<p><span class="font7">可使用</span><span class="font3">while</span><span class="font7">循环让程序在用户愿意时不断地运行，如下面的程序</span><span class="font8">parrot.py</span><span class="font7">所示。我们在其中 定义了一个退出值，只要用户输入的不是这个值，程序就接着运行：</span></p>
<p><span class="font1">parrot.py</span></p>
<p><span class="font4">❶ </span><span class="font0">prompt = &quot;\nTell me something, and I will repeat it back to you:&quot;</span></p>
<p><span class="font0">prompt += &quot;\nEnter 'quit' to end the program. &quot;&nbsp;</span><span class="font4">❷ </span><span class="font0">message =&quot;&quot;</span></p>
<p><span class="font4">❸ </span><span class="font0">while message != 'quit':</span></p>
<p><span class="font0">message = input(prompt) print(message)</span></p>
<p><span class="font7">在</span><span class="font5">❶</span><span class="font7">处，我们定义了一条提示消息，告诉用户他有两个选择：要么输入一条消息，要么输 人退出值(这里为</span><span class="font3">‘quit'</span><span class="font7">)。接下来，我们创建了一个变量一</span><span class="font3">message </span><span class="font7">(见</span><span class="font5">❷</span><span class="font7">)，用于存储用户 输入的值。我们将变量</span><span class="font3">message</span><span class="font7">的初始值设置为空字符串</span><span class="font3">&quot;&quot;</span><span class="font7">，让</span><span class="font8">Python</span><span class="font7">首次执行</span><span class="font3">while</span><span class="font7">代码行时有 可供检查的东西。</span><span class="font8">Python</span><span class="font7">首次执行</span><span class="font3">while</span><span class="font7">语句时，需要将</span><span class="font3">message</span><span class="font7">的值与</span><span class="font3">‘quit’</span><span class="font7">进行比较，但此时 用户还没有输入。如果没有可供比较的东西，</span><span class="font8">Python</span><span class="font7">将无法继续运行程序。为解决这个问题， 我们必须给变量</span><span class="font3">message</span><span class="font7">指定一个初始值。虽然这个初始值只是一个空字符串，但符合要求，让 </span><span class="font8">Python</span><span class="font7">能够执行</span><span class="font3">while</span><span class="font7">循环所需的比较。只要</span><span class="font3">message</span><span class="font7">的值不是</span><span class="font3">‘quit’</span><span class="font7">，这个循环(见</span><span class="font5">❸</span><span class="font7">)就会不 断运行。</span></p>
<p><span class="font7">首次遇到这个循环时，</span><span class="font3">message</span><span class="font7">是一个空字符串，因此</span><span class="font8">Python</span><span class="font7">进入这个循环。执行到代码行 </span><span class="font3">message = input(prompt)</span><span class="font7">时，</span><span class="font8">Python</span><span class="font7">显示提示消息，并等待用户输入。不管用户输入是什么，都 将存储到变量</span><span class="font3">message</span><span class="font7">中并打印出来；接下来，</span><span class="font8">Python</span><span class="font7">重新检查</span><span class="font3">while</span><span class="font7">语句中的条件。只要用户输 人的不是单词</span><span class="font3">‘quit'</span><span class="font7">，</span><span class="font8">Python</span><span class="font7">就会再次显示提示消息并等待用户输入。等到用户终于输入</span><span class="font3">‘quit’ </span><span class="font7">后，</span><span class="font8">Python</span><span class="font7">停止执行</span><span class="font3">while</span><span class="font7">循环，而整个程序也到此结束：</span></p>
<p><span class="font0">Tell me something, and I will repeat it back to you:</span></p>
<p><span class="font0">Enter ‘quit‘ to end the program. </span><span class="font0" style="font-weight:bold;">Hello everyone!</span></p>
<p><span class="font0">Hello everyone!</span></p>
<p><span class="font0">Tell me something, and I will repeat it back to you:</span></p>
<p><span class="font0">Enter ‘quit‘ to end the program. </span><span class="font0" style="font-weight:bold;">Hello again.</span></p>
</body>
</html>