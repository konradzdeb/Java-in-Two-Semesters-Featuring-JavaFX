<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:8pt SimSun, serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">17.2 </span><span class="font6">使用</span><span class="font7">Pygal</span><span class="font6">可视化仓库</span></p>
<p><span class="font7">345</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font5"> 将</span><span class="font0">API</span><span class="font5">响应存储在一个变量中</span></p></li></ul>
<p><span class="font0">response_dict = r.json()</span></p>
<p><span class="font0">print(&quot;Total repositories:&quot;, response_dict['total_count'])</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font5"> 研究有关仓库的信息</span></p></li></ul>
<p><span class="font0">repo_dicts = response_dict['items']</span></p>
<p><span class="font3">❶ </span><span class="font0">names, stars = </span><span class="font5">口，</span><span class="font0">[]</span></p>
<p><span class="font0">for repo_dict in repo_dicts:</span></p>
<p><span class="font3">❷ </span><span class="font0">names.append(repo_dict['name'])</span></p>
<p><span class="font0">stars.append(repo_dict['stargazers_count'])</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font5"> 可视化</span></p></li></ul>
<p><span class="font3">❸ </span><span class="font0">my_style = LS('#333366', base_style=LCS)</span></p>
<p><span class="font3">❹ </span><span class="font0">chart = pygal.Bar(style=my_style, x_label_rotation=45, show_legend=False)</span></p>
<p><span class="font0">chart.title = 'Most-Starred Python Projects on GitHub'</span></p>
<p><span class="font0">chart.x_labels = names</span></p>
<p><span class="font3">❺ </span><span class="font0">chart.add('', stars)</span></p>
<p><span class="font0">chart.render_to_file('python_repos.svg')</span></p>
<p><span class="font6">我们首先导入了</span><span class="font2">pygal</span><span class="font6">以及要应用于图表的</span><span class="font7">Pygal</span><span class="font6">样式。接下来，打印</span><span class="font7">API</span><span class="font6">调用响应的状态以 及找到的仓库总数，以便获悉</span><span class="font7">API</span><span class="font6">调用是否出现了问题。我们不再打印返回的有关项目的信息， 因为将通过可视化来呈现这些信息。</span></p>
<p><span class="font6">在</span><span class="font4">❶</span><span class="font6">处，我们创建了两个空列表，用于存储将包含在图表中的信息。我们需要每个项目的名 称，用于给条形加上标签，我们还需要知道项目获得了多少个星，用于确定条形的高度。在循环 中，我们将项目的名称和获得的星数附加到这些列表的末尾</span><span class="font4">❷</span><span class="font6">。</span></p>
<p><span class="font6">接下来，我们使用</span><span class="font2">LightenStyle</span><span class="font6">类(别名</span><span class="font2">LS</span><span class="font6">)定义了一种样式，并将其基色设置为深蓝色(见 </span><span class="font4">❸</span><span class="font6">)。我们还传递了实参</span><span class="font2">base_style</span><span class="font6">，以使用</span><span class="font2">LightColorizedStyle</span><span class="font6">类(别名</span><span class="font2">LCS</span><span class="font6">)。然后，我们使用 </span><span class="font2">Bar()</span><span class="font6">创建一个简单的条形图，并向它传递了</span><span class="font2">my_style </span><span class="font6">(见</span><span class="font4">❹</span><span class="font6">)。我们还传递了另外两个样式实参: 让标签绕</span><span class="font7" style="font-style:italic;">x</span><span class="font6">轴旋转</span><span class="font7">45</span><span class="font6">度(</span><span class="font2">x_label_rotation=45</span><span class="font6">)，并隐藏了图例(</span><span class="font2">show_legend=False</span><span class="font6">)，因为我们 只在图表中绘制一个数据系列。接下来，我们给图表指定了标题，并将属性</span><span class="font2">x_labels</span><span class="font6">设置为列表 </span><span class="font2">names</span><span class="font6">。</span></p>
<p><span class="font6">由于我们不需要给这个数据系列添加标签，因此在</span><span class="font4">❺</span><span class="font6">处添加数据时，将标签设置成了空字符 串。生成的图表如图</span><span class="font7">17-1</span><span class="font6">所示。从中可知，前几个项目的受欢迎程度比其他项目高得多，但所有 这些项目在</span><span class="font7">Python</span><span class="font6">生态系统中都很重要。</span></p>
<p><span class="font1" style="font-weight:bold;">17</span></p>
</body>
</html>