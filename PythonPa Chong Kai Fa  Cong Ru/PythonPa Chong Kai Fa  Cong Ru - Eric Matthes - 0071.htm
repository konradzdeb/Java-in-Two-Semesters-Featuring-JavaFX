<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:7pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:9pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:14pt Arial, sans-serif; }
 .font5 { font:8pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:14pt SimHei, sans-serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:11pt SimSun, serif; }
 .font10 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font10">54 </span><span class="font8">第</span><span class="font10">4</span><span class="font8">章操作列表</span></p>
<p><span class="font10">for</span><span class="font8">循环为</span><span class="font10">for value in range(l<sub>&gt;</sub>ll),</span><span class="font8">它将值</span><span class="font10">1</span><span class="font8">〜</span><span class="font10">10</span><span class="font8">提供给表达式</span><span class="font10">value**2</span><span class="font8">。请注意，这里的</span><span class="font10">for </span><span class="font8">语句末尾没有冒号。</span></p>
<p><span class="font8">结果与你在前面看到的平方数列表相同：</span></p>
<p><span class="font0" style="font-weight:bold;">[1, 4, 9, 16, 25, 36, 49, 6% 81, 100]</span></p>
<p><span class="font8">要创建自己的列表解析，需要经过一定的练习，但能够熟练地创建常规列表后，你会发现这 样做是完全值得的。当你觉得编写三四行代码来生成列表有点繁复时，就应考虑创建列表解析了。</span></p>
<p><span class="font6">动手试一试</span></p>
<p><span class="font2">4-3</span><span class="font8">数到</span><span class="font2">20</span><span class="font9">：</span><span class="font8">使用一个</span><span class="font10">for</span><span class="font8">循环打印数字</span><span class="font10">1~20 </span><span class="font8">(含)<sub>o</sub></span></p>
<p><span class="font2">44</span><span class="font8">一百万：创建一个列表，其中包含数字</span><span class="font10">17000000,</span><span class="font8">再使用一个</span><span class="font10">for</span><span class="font8">循环将这 些数字打印出来(如果输出的时间太长，按</span><span class="font10">Ctrl + C</span><span class="font8">停止输出，或关闭输出窗口)。</span></p>
<p><span class="font2">4-5</span><span class="font8">计算</span><span class="font2">1</span><span class="font9">〜</span><span class="font2">1 000 000</span><span class="font8">的总和：创建一个列表，其中包含数字</span><span class="font10">1</span><span class="font8">〜</span><span class="font10">1 000000,</span><span class="font8">再使用 </span><span class="font10">min()</span><span class="font8">和</span><span class="font10">max()</span><span class="font8">核实该列表确实是从</span><span class="font10">1</span><span class="font8">开始，到</span><span class="font10">1 000 000</span><span class="font8">结束的。另外，对这个列表调 用函数</span><span class="font10">sum(),</span><span class="font8">看看</span><span class="font10">Python</span><span class="font8">将一百万个数字相加需要多长时间。</span></p>
<p><span class="font2">4-6</span><span class="font8">奇数：通过给函数</span><span class="font10">range</span><span class="font8">。指定第三个参数来创建一个列表，其中包含</span><span class="font10">1</span><span class="font8">〜</span><span class="font10">20</span><span class="font8">的 奇数；再使用一个</span><span class="font10">for</span><span class="font8">循环将这些数字都打印出来。</span></p>
<p><span class="font10">4-7 3</span><span class="font8">的倍数：创建一个列表，其中包含</span><span class="font10">3</span><span class="font8">〜</span><span class="font10">30</span><span class="font8">内能被</span><span class="font10">3</span><span class="font8">整除的数字；再使用一个</span><span class="font10">for </span><span class="font8">循环将这个列表中的数字都打印出来。</span></p>
<p><span class="font2">4-8</span><span class="font8">立方：将同一个数字乘三次称为立方。例如，在</span><span class="font10">Pytlion</span><span class="font8">中，</span><span class="font10">2</span><span class="font8">的立方用</span><span class="font10">2**3 </span><span class="font8">表示。请创建一个列表，其中包含前</span><span class="font10">10</span><span class="font8">个整数(即</span><span class="font10">170</span><span class="font8">)的立方，再使用一个</span><span class="font10">for</span><span class="font8">循 环将这些立方数都打印出来。</span></p>
<p><span class="font10">4-9</span><span class="font8">立方解析：使用列表解析生成一个列表，其中包含前</span><span class="font10">10</span><span class="font8">个整数的立方。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font4"><a name="bookmark1"></a>4.4</span><span class="font7"> 使用列表的一部分</span></h5></li></ul>
<p><span class="font8">在第</span><span class="font10">3</span><span class="font8">章中，你学习了如何访问单个列表元素。在本章中，你一直在学习如何处理列表的所 有元素。你还可以处理列表的部分元素——</span><span class="font10">Python</span><span class="font8">称之为切片。</span></p>
<ul style="list-style:none;"><li>
<h5><a name="bookmark2"></a><span class="font3"><a name="bookmark3"></a>4.4.1</span><span class="font6"> 切片</span></h5></li></ul>
<p><span class="font8">要创建切片，可指定要使用的第一个元素和最后一个元素的索弓</span><span class="font10">I</span><span class="font8">。与函数</span><span class="font10">range</span><span class="font8">。一样,</span><span class="font10">Python </span><span class="font8">在到达你指定的第二个索引前面的元素后停止。要输出列表中的前三个元素，需要指定索引</span><span class="font10">0-3, </span><span class="font8">这将输出分别为。、</span><span class="font10">1</span><span class="font8">和</span><span class="font10">2</span><span class="font8">的元素。</span></p>
<p><span class="font8">下面的示例处理的是一个运动队成员列表：</span></p>
<p><span class="font5">图灵社区会员江子涛</span><span class="font1">Tesla(jiangzitao201314@foxmail.com)</span><span class="font5">专享尊重版权</span></p>
</body>
</html>