<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:7pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:10pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:14pt Arial, sans-serif; }
 .font5 { font:8pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:14pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:9pt SimSun, serif; }
 .font10 { font:10pt SimSun, serif; }
 .font11 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font11">110</span></p>
<p><span class="font10">第</span><span class="font2">7</span><span class="font10">章用户输入和</span><span class="font2">while</span><span class="font10">循环</span></p>
<p><span class="font6">动手试一试</span></p>
<p><span class="font11">7-4</span><span class="font10">比萨配料：编写一个循环，提示用户输入一系列的比萨配料，并在用户输入 </span><span class="font11">'quit'</span><span class="font10">时结束循环。每当用户输入一种配料后，都打印一条消息，说我们会在比萨中添 加这种配料。</span></p>
<p><span class="font11">7-5</span><span class="font10">电影票：有家电影院根据观众的年龄收取不同的票价：不到</span><span class="font11">3</span><span class="font10">岁的观众免费； </span><span class="font11">3</span><span class="font10">〜</span><span class="font11">12</span><span class="font10">岁的观众为</span><span class="font11">10</span><span class="font10">美元；超过</span><span class="font11">12</span><span class="font10">岁的观众为</span><span class="font11">15</span><span class="font10">美元。请编写一个循环，在其中询问 用户的年龄，并指出其票价。</span></p>
<p><span class="font11">7-6</span><span class="font10">三个出口：以另一种方式完成练习</span><span class="font11">7</span><span class="font10">・</span><span class="font11">4</span><span class="font10">或练习</span><span class="font11">7</span><span class="font10">・</span><span class="font11">5,</span><span class="font10">在程序中采取如下所有做法。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font10">□在</span><span class="font11">while</span><span class="font10">循环中使用条件测试来结束循环。</span></p></li>
<li>
<p><span class="font10">□使用变量</span><span class="font11">active</span><span class="font10">来控制循环结束的时机。</span></p></li></ul>
<p><span class="font10">口使用</span><span class="font11">break</span><span class="font10">语句在用户输入</span><span class="font11">‘quit'</span><span class="font10">时退出循环。</span></p>
<p><span class="font11">7-7</span><span class="font10">无限循环：编写一个没完没了的循环，并运行它(要结束该循环，可按</span><span class="font11">Ctrl+C, </span><span class="font10">也可关闭显示输出的窗口 )<sub>o</sub></span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font4"><a name="bookmark1"></a>7.3</span><span class="font7">使用</span><span class="font4">while</span><span class="font7">循环来处理列表和字典</span></h5></li></ul>
<p><span class="font10">到目前为止，我们每次都只处理了一项用户信息：获取用户的输入，再将输入打印出来或作 出应答；循环再次运行时，我们获悉另一个输入值并作出响应。然而，要记录大量的用户和信息， 需要在</span><span class="font11">while</span><span class="font10">循环中使用列表和字典。</span></p>
<p><span class="font11">for</span><span class="font10">循环是一种遍历列表的有效方式，但在</span><span class="font11">for</span><span class="font10">循环中不应修改列表，否则将导致</span><span class="font11">Python</span><span class="font10">难以 跟踪其中的元素。要在遍历列表的同时对其进行修改，可使用</span><span class="font11">while</span><span class="font10">循环。通过将</span><span class="font11">while</span><span class="font10">循环同列 表和字典结合起来使用，可收集、存储并组织大量输入，供以后查看和显示。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">7.3.1</span><span class="font6"> 在列表之间移动元素</span></p></li></ul>
<p><span class="font10">假设有一个列表，其中包含新注册但还未验证的网站用户；验证这些用户后，如何将他们移 到另一个已验证用户列表中呢？ 一种办法是使用一个</span><span class="font11">While</span><span class="font10">循环，在验证用户的同时将其从未验 证用户列表中提取出来，再将其加入到另一个已验证用户列表中。代码可能类似于下面这样：</span></p>
<p><span class="font2">confirmed_users.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font8"># 首先，创这一个待脸证用户列表</span></p></li>
<li>
<p><span class="font8"># 和一个用于存储已脸证用户的空列表</span></p></li></ul>
<p><span class="font9" style="font-weight:bold;">❶</span><span class="font0" style="font-weight:bold;"> unconfirmed_users = ['alice', 'brian', 'candace']</span></p>
<p><span class="font0" style="font-weight:bold;">confirmed_users =[]</span></p>
<ul style="list-style:none;"><li>
<p><span class="font8"># 脸证每个用户，直到没有未险证用户为止</span></p></li>
<li>
<p><span class="font8"># 将每个经过脸证的列表都移到已险证用户列表中</span></p></li></ul>
<p><span class="font9" style="font-weight:bold;">❷</span><span class="font0" style="font-weight:bold;"> while unconfirmed_users:</span></p>
<p><span class="font5">图灵社区会员江子涛</span><span class="font1">Tesla(jiangzitao201314@foxmail.com)</span><span class="font5">专享尊重版权</span></p>
</body>
</html>