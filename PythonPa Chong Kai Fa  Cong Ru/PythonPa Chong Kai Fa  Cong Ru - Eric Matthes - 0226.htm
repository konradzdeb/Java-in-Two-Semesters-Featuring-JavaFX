<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Calibri, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:9pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">12.3 </span><span class="font8">开始游戏项目</span></p>
<p><span class="font9">209</span></p>
<p><span class="font8">(见</span><span class="font3">❺</span><span class="font8">)。</span></p>
<p><span class="font3">❻</span><span class="font8">处调用了</span><span class="font4">pygame.displayflip()</span><span class="font8">,命令</span><span class="font9">Pygame</span><span class="font8">让最近绘制的屏幕可见。在这里，它在每次 执行</span><span class="font4">while</span><span class="font8">循环时都绘制一个空屏幕，并擦去旧屏幕，使得只有新屏幕可见。在我们移动游戏元 素时，</span><span class="font4">pygame.displayflip()</span><span class="font8">将不断更新屏幕，以显示元素的新位置，并在原来的位置隐藏元素， 从而营造平滑移动的效果。</span></p>
<p><span class="font8">在这个基本的游戏结构中，最后一行调用</span><span class="font4">run_game()</span><span class="font8">，这将初始化游戏并开始主循环。</span></p>
<p><span class="font8">如果此时运行这些代码，你将看到一个空的</span><span class="font9">Pygame</span><span class="font8">窗口。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>12.3.2 </span><span class="font5">设置背景色</span></h5></li></ul>
<p><span class="font9">Pygame</span><span class="font8">默认创建一个黑色屏幕，这太乏味了。下面来将背景设置为另一种颜色：</span></p>
<p><span class="font1">alien_invasion.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p></li></ul>
<p><span class="font0">def run_game():</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font0">pygame.display.set_caption(&quot;Alien Invasion&quot;)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 设置背景色</span></p></li></ul>
<p><span class="font0">❶ bg_color = </span><span class="font7">(</span><span class="font0">230, 230, 230</span><span class="font7">)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 开始游戏主循环</span><span class="font0">.</span></p></li></ul>
<p><span class="font0">while True:</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># </span><span class="font6">监听键盘和鼠标事件</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">12</span></p>
</div><br clear="all"></li>
<li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 每次循环时都重绘屏幕</span></p></li></ul>
<p><span class="font0">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;screen.fill(bg_color)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 让最近绘制的屏幕可见 </span><span class="font0">pygame.display.flip()</span></p></li></ul>
<p><span class="font0">run_game()</span></p>
<p><span class="font8">首先，我们创建了一种背景色，并将其存储在</span><span class="font4">bg_color</span><span class="font8">中(见</span><span class="font3">O</span><span class="font8">)。该颜色只需指定一次， 因此我们在进入主</span><span class="font4">while</span><span class="font8">循环前定义它。</span></p>
<p><span class="font8">在</span><span class="font9">Pygame</span><span class="font8">中，颜色是以</span><span class="font9">RGB</span><span class="font8">值指定的。这种颜色由红色、绿色和蓝色值组成，其中每个值 的可能取值范围都为</span><span class="font9">0~255</span><span class="font8">。颜色值</span><span class="font9">(255, 0, 0)</span><span class="font8">表示红色，</span><span class="font9">(0, 255, 0)</span><span class="font8">表示绿色，而</span><span class="font9">(0, 0, 255)</span><span class="font8">表示蓝 色。通过组合不同的</span><span class="font9">RGB</span><span class="font8">值，可创建</span><span class="font9">1600</span><span class="font8">万种颜色。在颜色值</span><span class="font9">(230, 230, 230)</span><span class="font8">中，红色、蓝色和 绿色量相同，它将背景设置为一种浅灰色。</span></p>
<p><span class="font8">在</span><span class="font3">❷</span><span class="font8">处，我们调用方法</span><span class="font4">screenfill()</span><span class="font8">，用背景色填充屏幕；这个方法只接受一个实参：一 种颜色。</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>