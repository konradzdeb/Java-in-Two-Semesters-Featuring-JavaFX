<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">14.3 </span><span class="font7">记分</span></p>
<p><span class="font8">281</span></p>
<p><span class="font7">为在屏幕上显示飞船，我们对编组调用了</span><span class="font3">0</span><span class="font5">血闪()</span><span class="font7">。</span><span class="font8">Pygame</span><span class="font7">将绘制每艘飞船。</span></p>
<p><span class="font7">为在游戏开始时让玩家知道他有多少艘飞船，我们在开始新游戏时调用</span><span class="font3">prep_ships()</span><span class="font7">。这是 在</span><span class="font8">game_functions.py </span><span class="font7">的 </span><span class="font3">check_play_button()</span><span class="font7">中进行的：</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>game_functions.py</span></h6>
<p><span class="font0">def check_play_button(ai_settings, screen, stats, sb, play_button, ship, aliens, bullets, mouse_x, mouse_y):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">在玩家单击</span><span class="font0">Play</span><span class="font6">按钮时开始新游戏</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">button_clicked = play_button.rect.collidepoint(mouse_x, mouse_y)</span></p>
<p><span class="font0">if button_clicked and not stats.game_active:</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li>
<li>
<p><span class="font0">#</span><span class="font6"> 重置记分牌图像</span></p></li></ul>
<p><span class="font0">sb.prep_score()</span></p>
<p><span class="font0">sb.prep_high_score()</span></p>
<p><span class="font0">sb.prep_level()</span></p>
<p><span class="font0">sb.prep_ships()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li></ul>
<h6><a name="bookmark2"></a><span class="font7"><a name="bookmark3"></a>我们还在飞船被外星人撞到时调用</span><span class="font3">prep_ships()</span><span class="font7">，从而在玩家损失一艘飞船时更新飞船图像:</span><br><br><span class="font1"><a name="bookmark4"></a>game_functions.py</span></h6>
<p><span class="font4">❶ </span><span class="font0">def update_aliens(ai_settings, screen, stats, sb, ship, aliens, bullets):</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">- -</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p></li>
<li>
<p><span class="font0">#</span><span class="font6"> 检测外星人和飞船之间的碰撞</span></p></li></ul>
<p><span class="font0">if pygame.sprite.spritecollideany(ship, aliens):</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">ship_hit(ai_settings, screen, stats, sb, ship, aliens, bullets)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 检查是否有外星人抵达屏幕底端</span></p></li></ul>
<p><span class="font4">❸ </span><span class="font0">check_aliens_bottom(ai_settings, screen, stats, sb, ship, aliens, bullets)</span></p>
<p><span class="font4">❹ </span><span class="font0">def ship_hit(ai_settings, screen, stats, sb, ship, aliens, bullets):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">响应被外星人撞到的飞船</span><span class="font0">&quot;&quot;&quot;</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">14</span></p>
</div><br clear="all">
<p><span class="font0">if stats.ships_left &gt;&nbsp;0:</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># </span><span class="font6">将</span><span class="font0">ships_left</span><span class="font6">减</span><span class="font0">1</span></p></li></ul>
<p><span class="font0">stats.ships_left -= 1 # </span><span class="font6">更新记分牌</span></p>
<p><span class="font4">❺ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">sb.prep_ships()</span></p>
<p><span class="font0"># </span><span class="font6">清空外星人列表和子弹列表</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font7">首先，我们在</span><span class="font3">update_aliens()</span><span class="font7">的定义中添加了形参</span><span class="font3">sb </span><span class="font7">(见</span><span class="font5">❶</span><span class="font7">)。然后，我们向</span><span class="font3">ship_hit()</span><span class="font7">(见 </span><span class="font5">❷</span><span class="font7">)和</span><span class="font3">check_aliens_bottom()</span><span class="font7">(见</span><span class="font5">❸</span><span class="font7">)都传递了</span><span class="font3">sb</span><span class="font7">，让它们都能够访问记分牌对象。</span></p>
<p><span class="font7">接下来，我们更新了</span><span class="font3">ship_hit()</span><span class="font7">的定义，使其包含形参</span><span class="font3">sb </span><span class="font7">(见</span><span class="font5">❹</span><span class="font7">)。我们在将</span><span class="font3">ships_left</span><span class="font7">的值</span></p>
<p><span class="font7">减</span><span class="font8">1</span><span class="font7">后调用了</span><span class="font3">prep_ships()</span><span class="font7">(见</span><span class="font5">❺</span><span class="font7">)，这样每次损失了飞船时，显示的飞船数都是正确的。</span></p>
<p><span class="font7">在</span><span class="font3">check_aliens_bottom()</span><span class="font7">中需要调用</span><span class="font3">ship_hit()</span><span class="font7">，因此对这个函数进行更新：</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>