<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:11pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">10.3 </span><span class="font6">异常 </span><span class="font7">175</span></p>
<p><span class="font6">因除零错误而失败，我们就打印一条友好的消息，告诉用户如何避免这种错误。程序将继续运行， 用户根本看不到</span><span class="font7">traceback</span><span class="font6">：</span></p>
<p><span class="font0">Give me two numbers, and I'll divide them.</span></p>
<p><span class="font0">Enter 'q' to quit.</span></p>
<p><span class="font0">First number: </span><span class="font0" style="font-weight:bold;">5</span></p>
<p><span class="font0">Second number: </span><span class="font0" style="font-weight:bold;">0</span></p>
<p><span class="font0">You can't divide by 0!</span></p>
<p><span class="font0">First number: </span><span class="font0" style="font-weight:bold;">5</span></p>
<p><span class="font0">Second number: </span><span class="font0" style="font-weight:bold;">2</span></p>
<p><span class="font0">2.5</span></p>
<p><span class="font0">First number: </span><span class="font0" style="font-weight:bold;">q</span></p>
<p><span class="font4">try-except-else</span><span class="font6">代码块的工作原理大致如下：</span><span class="font7">Python</span><span class="font6">尝试执行</span><span class="font4">try</span><span class="font6">代码块中的代码；只有可 能引发异常的代码才需要放在</span><span class="font4">try</span><span class="font6">语句中。有时候，有一些仅在</span><span class="font4">try</span><span class="font6">代码块成功执行时才需要运行 的代码；这些代码应放在</span><span class="font4">else</span><span class="font6">代码块中。</span><span class="font4">except</span><span class="font6">代码块告诉</span><span class="font7">Python</span><span class="font6">，如果它尝试运行</span><span class="font4">try</span><span class="font6">代码块中 的代码时引发了指定的异常，该怎么办。</span></p>
<p><span class="font6">通过预测可能发生错误的代码，可编写健壮的程序，它们即便面临无效数据或缺少资源，也 能继续运行，从而能够抵御无意的用户错误和恶意的攻击。</span></p>
<div>
<p><span class="font3" style="font-weight:bold;">10</span></p>
</div><br clear="all">
<ul style="list-style:none;"><li>
<p><span class="font3">10.3.5</span><span class="font5"> 处理 </span><span class="font2">FileNotFoundError </span><span class="font5">异常</span></p></li></ul>
<p><span class="font6">使用文件时，一种常见的问题是找不到文件：你要查找的文件可能在其他地方、文件名可能 不正确或者这个文件根本就不存在。对于所有这些情形，都可使用</span><span class="font4">try-except</span><span class="font6">代码块以直观的方 式进行处理。</span></p>
<p><span class="font6">我们来尝试读取一个不存在的文件。下面的程序尝试读取文件</span><span class="font7">alice.txt</span><span class="font6">的内容，但我没有将 这个文件存储在</span><span class="font7">alice.py</span><span class="font6">所在的目录中：</span></p>
<p><span class="font1">alice.py</span></p>
<p><span class="font0">filename = 'alice.txt'</span></p>
<p><span class="font0">with open(filename) as f_obj:</span></p>
<p><span class="font0">contents = f_obj.read()</span></p>
<p><span class="font7">Python</span><span class="font6">无法读取不存在的文件，因此它引发一个异常：</span></p>
<p><span class="font0">Traceback (most recent call last):</span></p>
<p><span class="font0">File &quot;alice.py&quot;, line 3, in &lt;module&gt;</span></p>
<p><span class="font0">with open(filename) as f_obj:</span></p>
<p><span class="font0">FileNotFoundError: [Errno 2] No such file or directory: 'alice.txt'</span></p>
<p><span class="font6">在上述</span><span class="font7">traceback</span><span class="font6">中，最后一行报告了</span><span class="font4">FileNotFoundError</span><span class="font6">异常，这是</span><span class="font7">Python</span><span class="font6">找不到要打开的文</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>