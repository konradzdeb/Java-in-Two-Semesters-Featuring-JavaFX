<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:9pt Arial, sans-serif; }
 .font2 { font:11pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:14pt Arial, sans-serif; }
 .font5 { font:10pt Segoe UI, sans-serif; }
 .font6 { font:7pt SimHei, sans-serif; }
 .font7 { font:10pt SimHei, sans-serif; }
 .font8 { font:12pt SimHei, sans-serif; }
 .font9 { font:14pt SimHei, sans-serif; }
 .font10 { font:9pt SimSun, serif; }
 .font11 { font:10pt SimSun, serif; }
 .font12 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font12">3.3 </span><span class="font11">组织列表 </span><span class="font12">39</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">□</span><span class="font10"> 使用</span><span class="font5">insert</span><span class="font10">。将另一位新嘉宾添加到名单中间。</span></p></li>
<li>
<p><span class="font1">□</span><span class="font10"> 使用</span><span class="font5">append()</span><span class="font10">将最后一位新嘉宾添加到名单末尾。</span></p></li>
<li>
<p><span class="font1">□</span><span class="font10"> 打印一系列消息，向名单中的每位嘉宾发出邀请。</span></p></li></ul>
<p><span class="font12">3-7</span><span class="font11">缩减名单</span><span class="font10">：你刚得知新购买的餐桌无法及时送达，因此只能邀请两位嘉宾。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font1">□</span><span class="font10"> 以完成练习</span><span class="font12">3-6</span><span class="font10">时编写的程序为基础，在程序末尾添加一行代码，打印一条你只 能邀请两位嘉宾共进晚餐的消息。</span></p></li>
<li>
<p><span class="font1">□</span><span class="font10"> 使用</span><span class="font5">pop()</span><span class="font10">不断地删除名单中的嘉宾，直到只有两位嘉宾为止。每次从名单中弹 出一位嘉宾时，都打印一条消息，让该嘉宾知悉你很抱歉，无法邀请他来共进 晚餐。</span></p></li>
<li>
<p><span class="font1">□</span><span class="font10"> 对于余下的两位嘉宾中的每一位，都打印一条消息，指出他依然在受邀人之列。</span></p></li>
<li>
<p><span class="font1">□</span><span class="font10"> 使用</span><span class="font5">del</span><span class="font10">将最后两位嘉宾从名单中删除，让名单变成空的。打印该名单，核实程 序结束时名单确实是空的。</span></p></li></ul>
<ul style="list-style:none;"><li>
<p><span class="font4">3.3</span><span class="font9"> 组织列表</span></p></li></ul>
<p><span class="font11">在你创建的列表中，元素的排列顺序常常是无法预测的，因为你并非总能控制用户提供数据 的顺序。这虽然在大多数情况下都是不可避免的，但你经常需要以特定的顺序呈现信息。有时候， 你希望保留列表元素最初的排列顺序，而有时候又需要调整排列顺序。</span><span class="font12">Python</span><span class="font11">提供了很多组织列 表的方式，可根据具体情况选用。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">3.3.1</span><span class="font8"> 使用方法</span><span class="font2">sort()</span><span class="font8">对列表进行永久性排序</span></p></li></ul>
<p><span class="font12">Python</span><span class="font11">方法</span><span class="font5">sort()</span><span class="font11">让你能够较为轻松地对列表进行排序。假设你有一个汽车列表，并要让其 中的汽车按字母顺序排列。为简化这项任务，我们假设该列表中的所有值都是小写的。</span></p>
<p><span class="font12">cars.py</span></p>
<p><span class="font0">cars = ['bmw', 'audi', 'toyota', 'subaru']</span></p>
<p><span class="font6">❶ </span><span class="font0">cars.sort()</span></p>
<p><span class="font0">print(cars)</span></p>
<p><span class="font11">方法</span><span class="font5">sort()</span><span class="font11">(见</span><span class="font7">❶</span><span class="font11">)永久性地修改了列表元素的排列顺序。现在，汽车是按字母顺序排列的， 再也无法恢复到原来的排列顺序：</span></p>
<p><span class="font0">['audi', 'bmw', 'subaru', 'toyota']</span></p>
<p><span class="font11">你还可以按与字母顺序相反的顺序排列列表元素，为此，只需向</span><span class="font5">sort()</span><span class="font11">方法传递参数 </span><span class="font5">reverse=True</span><span class="font11">。下面的示例将汽车列表按与字母顺序相反的顺序排列：</span></p>
<p><span class="font0">cars = ['bmw', 'audi', 'toyota', 'subaru']</span></p>
</body>
</html>