<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }
 .font9 { font:11pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">244 </span><span class="font7">第</span><span class="font8">13</span><span class="font7">章外星人</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">13.4.2</span><span class="font5"> 创建表示外星人移动方向的设置</span></p></li></ul>
<p><span class="font7">下面来创建让外星人撞到屏幕右边缘后向下移动、再向左移动的设置。实现这种行为的代码 如下：</span></p>
<p><span class="font1">settings.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 外星人设置</span></p></li></ul>
<p><span class="font0">self.alien_speed_factor = 1</span></p>
<p><span class="font0">self.fleet_drop_speed = 10</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># fleet_direction</span><span class="font6">为</span><span class="font0">1</span><span class="font6">表示向右移，为</span><span class="font0">-1</span><span class="font6">表示向左移</span></p></li></ul>
<p><span class="font0">self.fleet direction = 1</span></p>
<p><span class="font7">设置</span><span class="font3">fleet_drop_speed</span><span class="font7">指定了有外星人撞到屏幕边缘时，外星人群向下移动的速度。将这个 速度与水平速度分开是有好处的，这样你就可以分别调整这两种速度了。</span></p>
<p><span class="font7">要实现</span><span class="font3">fleet_direction</span><span class="font7">设置，可以将其设置为文本值，如</span><span class="font3">‘left'</span><span class="font7">或</span><span class="font3">'right'</span><span class="font7">，但这样就必须 编写</span><span class="font3">if-elif</span><span class="font7">语句来检查外星人群的移动方向。鉴于只有两个可能的方向，我们使用值</span><span class="font8">1</span><span class="font7">和</span><span class="font4">-</span><span class="font8">1</span><span class="font7">来表 示它们，并在外星人群改变方向时在这两个值之间切换。另外，鉴于向右移动时需要增大每个外 星人的</span><span class="font8" style="font-style:italic;">x</span><span class="font7">坐标，而向左移动时需要减小每个外星人的</span><span class="font8" style="font-style:italic;">x</span><span class="font7">坐标，使用数字来表示方向更合理。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">13.4.3</span><span class="font5"> 检查外星人是否撞到了屏幕边缘</span></p></li></ul>
<p><span class="font7">现在需要编写一个方法来检查是否有外星人撞到了屏幕边缘，还需修改</span><span class="font3">update</span><span class="font7">。，以让每个 外星人都沿正确的方向移动：</span></p>
<p><span class="font1">alien.py</span></p>
<p><span class="font0">def check_edges(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">如果外星人位于屏幕边缘，就返回</span><span class="font0">True&quot;&quot;&quot;</span></p>
<p><span class="font0">screen_rect = self.screen.get_rect()</span></p>
<p><span class="font0" style="font-weight:bold;">O &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">if self.rect.right &gt;= screen_rect.right:</span></p>
<p><span class="font0">return True</span></p>
<p><span class="font0" style="font-weight:bold;">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">elif self.rect.left &lt;= 0:</span></p>
<p><span class="font0">return True</span></p>
<p><span class="font0">def update(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">向左或向右移动外星人</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0" style="font-weight:bold;">❸ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.x += (self.ai_settings.alien_speed_factor *</span></p>
<p><span class="font0">self.ai_settings.fleet_direction)</span></p>
<p><span class="font0">self.rect.x = self.x</span></p>
<p><span class="font7">我们可对任何外星人调用新方法</span><span class="font3">check_edges（）</span><span class="font7">，看看它是否位于屏幕左边缘或右边缘。如 果外星人的</span><span class="font3">rect</span><span class="font7">的</span><span class="font3">right</span><span class="font7">属性大于或等于屏幕的出</span><span class="font3">a</span><span class="font7">的</span><span class="font3">right</span><span class="font7">属性，就说明外星人位于屏幕右边缘 （见</span><span class="font9" style="font-weight:bold;">O</span><span class="font7">）。如果外星人的</span><span class="font3">rect</span><span class="font7">的</span><span class="font3">left</span><span class="font7">属性小于或等于</span><span class="font8">0</span><span class="font7">，就说明外星人位于屏幕左边缘（见</span><span class="font4">❷</span><span class="font7">）。</span></p>
<p><span class="font7">我们修改了方法</span><span class="font3">update</span><span class="font7">。，将移动量设置为外星人速度和</span><span class="font3">fleet_direction</span><span class="font7">的乘积，让外星人 </span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>