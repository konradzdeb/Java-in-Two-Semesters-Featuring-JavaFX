<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:12pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:9pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }
 .font10 { font:11pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">120</span></p>
<p><span class="font8">第</span><span class="font9">8</span><span class="font8">章 函数</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6"> 一条名为</span><span class="font0">Willie</span><span class="font6">的小狗 </span><span class="font0">describe_pet('willie') describe_pet(pet_name='willie')</span></p></li>
<li>
<p><span class="font0">#</span><span class="font6"> 一只名为</span><span class="font0">Harry</span><span class="font6">的仓鼠</span></p></li></ul>
<p><span class="font0">describe_pet('harry', 'hamster')</span></p>
<p><span class="font0">describe_pet(pet_name='harry', animal_type='hamster') describe_pet(animal_type='hamster', pet_name='harry')</span></p>
<p><span class="font8">这些函数调用的输出与前面的示例相同。</span></p>
<p><span class="font8">注意 </span><span class="font7">使用哪种调用方式无关紧要，只要函数调用能生成你希望的输出就行。使用对你来说最 容易理解的调用方式即可。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>8.2.5 </span><span class="font5">避免实参错误</span></h5></li></ul>
<p><span class="font8">等你开始使用函数后，如果遇到实参不匹配错误，不要大惊小怪。你提供的实参多于或少于 函数完成其工作所需的信息时，将出现实参不匹配错误。例如，如果调用函数</span><span class="font2">describe_pet()</span><span class="font8">时 没有指定任何实参，结果将如何呢？</span></p>
<p><span class="font0">def describe_pet(animal_type, pet_name):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">显示宠物的信息</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">print(&quot;\nI have a &quot;&nbsp;+ animal_type + &quot;.&quot;)</span></p>
<p><span class="font0">print(&quot;My &quot;&nbsp;+ animal_type + &quot;'s name is &quot;&nbsp;+ pet_name.title() + &quot;.&quot;)</span></p>
<p><span class="font0">describe_pet()</span></p>
<p><span class="font9">Python</span><span class="font8">发现该函数调用缺少必要的信息，而</span><span class="font9">traceback</span><span class="font8">指出了这一点：</span></p>
<p><span class="font0">Traceback (most recent call last):</span></p>
<p><span class="font3">❶ </span><span class="font0">File &quot;pets.py&quot;, line 6, in &lt;module&gt;</span></p>
<p><span class="font3">❷ </span><span class="font0">describe_pet()</span></p>
<p><span class="font3">❸ </span><span class="font0">TypeError: describe_pet() missing 2 required positional arguments: 'animal_</span></p>
<p><span class="font0">type' and 'pet_name'</span></p>
<p><span class="font8">在</span><span class="font10" style="font-weight:bold;">O</span><span class="font8">处，</span><span class="font9">traceback</span><span class="font8">指出了问题出在什么地方，让我们能够回过头去找出函数调用中的错误。 在</span><span class="font4">❷</span><span class="font8">处，指出了导致问题的函数调用。在</span><span class="font4">❸</span><span class="font8">处，</span><span class="font9">traceback</span><span class="font8">指出该函数调用少两个实参，并指出了 相应形参的名称。如果这个函数存储在一个独立的文件中，我们也许无需打开这个文件并查看函 数的代码，就能重新正确地编写函数调用。</span></p>
<p><span class="font9">Python</span><span class="font8">读取函数的代码，并指出我们需要为哪些形参提供实参，这提供了极大的帮助。这也 是应该给变量和函数指定描述性名称的另一个原因；如果你这样做了，那么无论对于你，还是可 能使用你编写的代码的其他任何人来说，</span><span class="font9">Python</span><span class="font8">提供的错误消息都将更有帮助。</span></p>
<p><span class="font8">如果提供的实参太多，将出现类似的</span><span class="font9">traceback</span><span class="font8">，帮助你确保函数调用和函数定义匹配。</span></p>
</body>
</html>