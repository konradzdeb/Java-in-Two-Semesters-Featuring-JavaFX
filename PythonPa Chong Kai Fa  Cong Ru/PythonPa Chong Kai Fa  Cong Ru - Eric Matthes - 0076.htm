<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:14pt Arial, sans-serif; }
 .font4 { font:10pt Calibri, sans-serif; }
 .font5 { font:10pt Segoe UI, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:12pt SimHei, sans-serif; }
 .font8 { font:14pt SimHei, sans-serif; }
 .font9 { font:9pt SimSun, serif; }
 .font10 { font:10pt SimSun, serif; }
 .font11 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font11">4.5 </span><span class="font10">元组</span></p>
<p><span class="font11">59</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">4.5</span><span class="font8"> 元组</span></p></li></ul>
<p><span class="font10">列表非常适合用于存储在程序运行期间可能变化的数据集。列表是可以修改的，这对处理网 站的用户列表或游戏中的角色列表至关重要。然而，有时候你需要创建一系列不可修改的元素， 元组可以满足这种需求。</span><span class="font11">Python</span><span class="font10">将不能修改的值称为</span><span class="font9">不可变的</span><span class="font10">，而不可变的列表被称为</span><span class="font9">元组</span><span class="font10">。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>4.5.1</span><span class="font7"> 定义元组</span></h5></li></ul>
<p><span class="font10">元组看起来犹如列表，但使用圆括号而不是方括号来标识。定义元组后，就可以使用索引来 访问其元素，就像访问列表元素一样。</span></p>
<p><span class="font10">例如，如果有一个大小不应改变的矩形，可将其长度和宽度存储在一个元组中，从而确保它 们是不能修改的：</span></p>
<p><span class="font1">dimensions.py</span></p>
<p><span class="font0" style="font-weight:bold;">O </span><span class="font0">dimensions = (200, 50)</span></p>
<p><span class="font0" style="font-weight:bold;">@ </span><span class="font0">print(dimensions[o])</span></p>
<p><span class="font0">print(dimensions[1])</span></p>
<p><span class="font10">我们首先定义了元组</span><span class="font5">dimensions </span><span class="font10">(见</span><span class="font4">O</span><span class="font10">)，为此我们使用了圆括号而不是方括号。接下来，我 们分别打印该元组的各个元素，使用的语法与访问列表元素时使用的语法相同(见</span><span class="font4">❷</span><span class="font10">)：</span></p>
<p><span class="font0">200</span></p>
<p><span class="font0">50</span></p>
<p><span class="font10">下面来尝试修改元组</span><span class="font5">dimensions</span><span class="font10">中的一个元素，看看结果如何：</span></p>
<p><span class="font0">dimensions = (200, 50)</span></p>
<p><span class="font0" style="font-weight:bold;">O </span><span class="font0">dimensions[0] = 250</span></p>
<p><span class="font6">。</span><span class="font10">处的代码试图修改第一个元素的值，导致</span><span class="font11">Python</span><span class="font10">返回类型错误消息。由于试图修改元组的 操作是被禁止的，因此</span><span class="font11">Python</span><span class="font10">指出不能给元组的元素赋值：</span></p>
<p><span class="font0">Traceback (most recent call last):</span></p>
<p><span class="font0">File &quot;dimensions.py&quot;, line 3, in &lt;module&gt;</span></p>
<p><span class="font0">dimensions[0] = 250</span></p>
<p><span class="font0">TypeError: 'tuple' object does not support item assignment</span></p>
<p><span class="font10">代码试图修改矩形的尺寸时，</span><span class="font11">Python</span><span class="font10">报告错误，这很好，因为这正是我们希望的。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">4.5.2</span><span class="font7"> 遍历元组中的所有值</span></p></li></ul>
<p><span class="font10">像列表一样，也可以使用</span><span class="font5">for</span><span class="font10">循环来遍历元组中的所有值：</span></p>
<p><span class="font0">dimensions = (200, 50)</span></p>
<p><span class="font0">for dimension in dimensions:</span></p>
<p><span class="font0">print(dimension)</span></p>
</body>
</html>