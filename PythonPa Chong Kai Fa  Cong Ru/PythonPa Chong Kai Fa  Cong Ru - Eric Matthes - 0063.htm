<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:11pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">46</span></p>
<p><span class="font7">第</span><span class="font8">4</span><span class="font7">章 操作列表</span></p>
<p><span class="font0">for cat in cats:</span></p>
<p><span class="font0">for dog in dogs:</span></p>
<p><span class="font0">for item in list_of_items:</span></p>
<p><span class="font7">这些命名约定有助于你明白</span><span class="font3">for</span><span class="font7">循环中将对每个元素执行的操作。使用单数和复数式名称， 可帮助你判断代码段处理的是单个列表元素还是整个列表。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">4.1.2</span><span class="font6"> 在</span><span class="font1">for</span><span class="font6">循环中执行更多的操作</span></p></li></ul><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font7"><a name="bookmark1"></a>在</span><span class="font3">for</span><span class="font7">循环中，可对每个元素执行任何操作。下面来扩展前面的示例，对于每位魔术师，都 打印一条消息，指出他的表演太精彩了。</span></h6>
<p><span class="font0">magicians = ['alice', 'david', 'carolina']</span></p>
<p><span class="font0">for magician in magicians:</span></p>
<p><span class="font4">❶ </span><span class="font0">print(magician.title() + &quot;, that was a great trick!&quot;)</span></p>
<p><span class="font7">相比于前一个示例，唯一的不同是对于每位魔术师，都打印了一条以其名字为抬头的消息(见 </span><span class="font5">❶</span><span class="font7">)。这个循环第一次迭代时，变量</span><span class="font3">magician</span><span class="font7">的值为</span><span class="font3">'alice'</span><span class="font7">，因此</span><span class="font8">Python</span><span class="font7">打印的第一条消息的抬 头为</span><span class="font3">‘Alice'</span><span class="font7">。第二次迭代时，消息的抬头为</span><span class="font3">‘David'</span><span class="font7">，而第三次迭代时，抬头为</span><span class="font3">‘Carolina'</span><span class="font7">。</span></p>
<p><span class="font7">下面的输出表明，对于列表中的每位魔术师，都打印了一条个性化消息：</span></p>
<p><span class="font0">Alice, that was a great trick!</span></p>
<p><span class="font0">David, that was a great trick!</span></p>
<p><span class="font0">Carolina, that was a great trick!</span></p>
<p><span class="font7">在</span><span class="font3">for</span><span class="font7">循环中，想包含多少行代码都可以。在代码行</span><span class="font3">for magician in magicians</span><span class="font7">后面，每个 缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每 个值执行任意次数的操作。</span></p>
<p><span class="font7">下面再添加一行代码，告诉每位魔术师，我们期待他的下一次表演：</span></p>
<p><span class="font0">magicians = ['alice', 'david', 'carolina']</span></p>
<p><span class="font0">for magician in magicians:</span></p>
<p><span class="font0">print(magician.title() + &quot;, that was a great trick!&quot;)</span></p>
<p><span class="font4">❶ </span><span class="font0">print(&quot;I can't wait to see your next trick, &quot;&nbsp;+ magician.title() + &quot;.\n&quot;)</span></p>
<p><span class="font7">由于两条</span><span class="font3">print</span><span class="font7">语句都缩进了，因此它们都将针对列表中的每位魔术师执行一次。第二条 </span><span class="font3">print</span><span class="font7">语句中的换行符</span><span class="font3">“\n”</span><span class="font7">(见</span><span class="font5">❶</span><span class="font7">)在每次迭代结束后都插入一个空行，从而整洁地将针对各位魔 术师的消息编组：</span></p>
<p><span class="font0">Alice, that was a great trick!</span></p>
<p><span class="font0">I can't wait to see your next trick, Alice.</span></p>
<p><span class="font0">David, that was a great trick!</span></p>
<p><span class="font0">I can't wait to see your next trick, David.</span></p>
<div>
</div><br clear="all">
</body>
</html>