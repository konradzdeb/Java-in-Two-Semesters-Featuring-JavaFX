<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:9pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">12.8 </span><span class="font8">射击</span></p>
<p><span class="font9">225</span></p>
<p><span class="font0">#</span><span class="font6">存储用小数表示的子弹位置</span></p>
<p><span class="font4">❹ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.y = float(self.rect.y)</span></p>
<p><span class="font4">❺ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.color = ai_settings.bullet_color</span></p>
<p><span class="font0">self.speed_factor = ai_settings.bullet_speed_factor</span></p>
<p><span class="font3">Bullet</span><span class="font8">类继承了我们从模块</span><span class="font3">pygame.sprite</span><span class="font8">中导入的</span><span class="font3">Sprite</span><span class="font8">类。通过使用精灵，可将游戏中相 关的元素编组，进而同时操作编组中的所有元素。为创建子弹实例，需要向</span><span class="font3">__init__()</span><span class="font8">传递 </span><span class="font3">ai_settings</span><span class="font8">、</span><span class="font3">screen</span><span class="font8">和</span><span class="font3">ship</span><span class="font8">实例，还调用了</span><span class="font3">super()</span><span class="font8">来继承</span><span class="font3">Sprite</span><span class="font8">。</span></p>
<p><span class="font5">注意</span><span class="font7">代码</span><span class="font3">super(Bullet, self)._init__()</span><span class="font7">使用了</span><span class="font9">Python 2.7</span><span class="font7">语法。这种语法也适用于</span><span class="font9">Python 3</span><span class="font7">, 但你也可以将这行代码简写为</span><span class="font3">super().__init—()</span><span class="font7">。</span></p>
<p><span class="font8">在</span><span class="font5">。</span><span class="font8">处，我们创建了子弹的属性</span><span class="font3">rect</span><span class="font8">。子弹并非基于图像的，因此我们必须使用</span><span class="font3">pygame.Rect() </span><span class="font8">类从空白开始创建一个矩形。创建这个类的实例时，必须提供矩形左上角的</span><span class="font9" style="font-style:italic;">x</span><span class="font8">坐标和</span><span class="font9" style="font-style:italic;">^</span><span class="font8">坐标，还有 矩形的宽度和高度。我们在</span><span class="font9">(0, 0)</span><span class="font8">处创建这个矩形，但接下来的两行代码将其移到了正确的位置， 因为子弹的初始位置取决于飞船当前的位置。子弹的宽度和高度是从</span><span class="font3">ai_settings</span><span class="font8">中获取的。</span></p>
<p><span class="font8">在</span><span class="font5">❷</span><span class="font8">处，我们将子弹的</span><span class="font3">centerx</span><span class="font8">设置为飞船的</span><span class="font3">rect.centerx</span><span class="font8">。子弹应从飞船顶部射出，因此我 们将表示子弹的</span><span class="font3">rect</span><span class="font8">的</span><span class="font3">top</span><span class="font8">属性设置为飞船的</span><span class="font3">rect</span><span class="font8">的</span><span class="font3">top</span><span class="font8">属性，让子弹看起来像是从飞船中射出的 (见</span><span class="font5">❸</span><span class="font8">)。</span></p>
<p><span class="font8">我们将子弹的</span><span class="font9" style="font-style:italic;">^</span><span class="font8">坐标存储为小数值，以便能够微调子弹的速度(见</span><span class="font5">❹</span><span class="font8">)。在</span><span class="font5">❺</span><span class="font8">处，我们将子弹 的颜色和速度设置分别存储到</span><span class="font3">self.c010r</span><span class="font8">和</span><span class="font3">self.speed_factor</span><span class="font8">中。</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">12</span></p>
</div><br clear="all">
<p><span class="font8">下面是</span><span class="font9">bullet.py</span><span class="font8">的第二部分---方法</span><span class="font3">update</span><span class="font8">。和</span><span class="font3">draw_bullet()</span><span class="font8">:</span></p>
<p><span class="font1">bullet.py</span></p>
<p><span class="font0">def update(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">向上移动子弹</span><span class="font0">&quot;&quot;&quot;</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6">更新表示子弹位置的小数值</span></p></li></ul>
<p><span class="font4">❶ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.y -= self.speed_factor</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6">更新表示子弹的隹匹的位置</span></p></li></ul>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.rect.y = self.y</span></p>
<p><span class="font0">def draw_bullet(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font6">在屏幕上绘制子弹</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font4">❸ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">pygame.draw.rect(self.screen, self.color, self.rect)</span></p>
<p><span class="font8">方法</span><span class="font3">update</span><span class="font8">。管理子弹的位置。发射出去后，子弹在屏幕中向上移动，这意味着</span><span class="font9" style="font-style:italic;">y</span><span class="font8">坐标将不 断减小，因此为更新子弹的位置，我们从</span><span class="font3">self.y</span><span class="font8">中减去</span><span class="font3">self.speed_factor</span><span class="font8">的值(见</span><span class="font5">❶</span><span class="font8">)。接下来， 我们将</span><span class="font3">self.rect.y</span><span class="font8">设置为</span><span class="font3">self.y</span><span class="font8">的值(见</span><span class="font5">❷</span><span class="font8">)。属性</span><span class="font3">speed_factor</span><span class="font8">让我们能够随着游戏的进行或根 据需要提高子弹的速度，以调整游戏的行为。子弹发射后，其</span><span class="font9" style="font-style:italic;">x</span><span class="font8">坐标始终不变，因此子弹将沿直 线垂直地往上穿行。</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>