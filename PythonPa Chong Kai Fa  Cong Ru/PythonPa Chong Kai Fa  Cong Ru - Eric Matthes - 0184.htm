<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:9pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">10.1 </span><span class="font7">从文件中读取数据</span></p>
<p><span class="font8">167</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>pi_string.py</span></h6>
<p><span class="font0">filename = 'pi_digits.txt'</span></p>
<p><span class="font0">with open(filename) as file_object: lines = file_object.readlines()</span></p>
<p><span class="font4">❶ </span><span class="font0">pi_string =''</span></p>
<p><span class="font4">❷ </span><span class="font0">for line in lines:</span></p>
<p><span class="font0">pi_string += line.rstrip()</span></p>
<p><span class="font4">❸ </span><span class="font0">print(pi_string)</span></p>
<p><span class="font0">print(len(pi_string))</span></p>
<p><span class="font7">就像前一个示例一样，我们首先打开文件，并将其中的所有行都存储在一个列表中。在。处， 我们创建了一个变量一</span><span class="font3">pi_string</span><span class="font7">，用于存储圆周率的值。接下来，我们使用一个循环将各行 都加入</span><span class="font3">pi_string</span><span class="font7">，并删除每行末尾的换行符(见</span><span class="font5">❷</span><span class="font7">)。在</span><span class="font5">❸</span><span class="font7">处，我们打印这个字符串及其长度：</span></p>
<p><span class="font0">3.1415926535 8979323846 2643383279</span></p>
<p><span class="font0">36</span></p>
<h6><a name="bookmark2"></a><span class="font7"><a name="bookmark3"></a>在变量</span><span class="font3">pi_string</span><span class="font7">存储的字符串中，包含原来位于每行左边的空格，为删除这些空格，可使 用</span><span class="font3">strip()</span><span class="font7">而不是</span><span class="font3">rstrip()</span><span class="font7">:</span></h6>
<div>
<p><span class="font2" style="font-weight:bold;">10</span></p>
</div><br clear="all">
<p><span class="font0">filename = 'pi_30_digits.txt'</span></p>
<p><span class="font0">with open(filename) as file_object:</span></p>
<p><span class="font0">lines = file_object.readlines()</span></p>
<p><span class="font0">pi_string = '' for line in lines:</span></p>
<p><span class="font0">pi_string += line.strip()</span></p>
<p><span class="font0">print(pi_string)</span></p>
<p><span class="font0">print(len(pi_string))</span></p>
<p><span class="font7">这样，我们就获得了一个这样的字符串：它包含精确到</span><span class="font8">30</span><span class="font7">位小数的圆周率值。这个字符串长</span></p>
<p><span class="font8">32</span><span class="font7">字符，因为它还包含整数部分的</span><span class="font8">3</span><span class="font7">和小数点：</span></p>
<p><span class="font0">3.141592653589793238462643383279</span></p>
<p><span class="font0">32</span></p>
<p><span class="font7">注意 </span><span class="font6">读取文本文件时，</span><span class="font8">Python</span><span class="font6">将其中的所有文本都解读为字符串。如果你读取的是数字，并 要将其作为数值使用，就必须使用函数</span><span class="font3">int()</span><span class="font6">将其转换为整数，或使用函数</span><span class="font3">float</span><span class="font6">。将其转 换为浮点数。</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>