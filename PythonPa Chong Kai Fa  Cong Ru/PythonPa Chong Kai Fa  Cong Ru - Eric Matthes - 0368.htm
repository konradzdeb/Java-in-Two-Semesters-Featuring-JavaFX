<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:8pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">17.3 Hacker News API</span></p>
<p><span class="font8">351</span></p>
<p><span class="font7">在</span><span class="font8">Hacker News</span><span class="font7">网站，用户分享编程和技术方面的文章，并就这些文章展开积极的讨论。</span><span class="font8">Hacker News</span><span class="font7">的</span><span class="font8">API</span><span class="font7">让你能够访问有关该网站所有文章和评论的信息，且不要求你通过注册获得密钥。</span></p>
<p><span class="font7">下面的调用返回本书编写时最热门的文章的信息：</span></p>
<p><a href="https://hacker-news.firebaseio.com/v0/item/9884165.json"><span class="font0">https://hacker-news.firebaseio.com/v0/item/9884165.json</span></a></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font7"><a name="bookmark1"></a>响应是一个字典，包含</span><span class="font8">ID</span><span class="font7">为</span><span class="font8">9884165</span><span class="font7">的文章的信息:</span></h6>
<p><span class="font0">{</span></p>
<p><span class="font4">❶ </span><span class="font0">'url': '</span><a href="http://www.bbc.co.uk/news/science-environment-33524589'"><span class="font0">http://www.bbc.co.uk/news/science-environment-33524589'</span></a><span class="font0">, 'type': 'story',</span></p>
<p><span class="font4">❷ </span><span class="font0">'title': 'New Horizons: Nasa spacecraft speeds past Pluto', </span><span class="font4">❸ </span><span class="font0">'descendants': 141,</span></p>
<p><span class="font0">'score': 230,</span></p>
<p><span class="font0">'time': 1436875181,</span></p>
<p><span class="font0">'text': '',</span></p>
<p><span class="font0">'by': 'nns',</span></p>
<p><span class="font0">'id': 9884165,</span></p>
<p><span class="font4">❹ </span><span class="font0">'kids': [9884723, 9885099, 9884789, 9885604, 9885844]</span></p>
<p><span class="font0">]</span></p>
<p><span class="font7">这个字典包含很多键，如</span><span class="font3">‘url'</span><span class="font7">(见</span><span class="font5">❶</span><span class="font7">)和</span><span class="font3">'title'</span><span class="font7">(见</span><span class="font5">❷</span><span class="font7">)。与键</span><span class="font3">'descendants'</span><span class="font7">相关联的值是 文章被评论的次数(见</span><span class="font5">❸</span><span class="font7">)。与键</span><span class="font3">'kids'</span><span class="font7">相关联的值包含对文章所做的所有评论的</span><span class="font8">ID </span><span class="font7">(见</span><span class="font5">❹</span><span class="font7">)。每 个评论自己也可能有</span><span class="font8">kid</span><span class="font7">，因此文章的后代(</span><span class="font8">descendant</span><span class="font7">)数量可能比其</span><span class="font8">kid</span><span class="font7">数量多。</span></p>
<p><span class="font7">下面来执行一个</span><span class="font8">API</span><span class="font7">调用，返回</span><span class="font8">Hacker News</span><span class="font7">上当前热门文章的</span><span class="font8">ID</span><span class="font7">，再查看每篇排名靠前的文章:</span></p>
<h6><a name="bookmark2"></a><span class="font1"><a name="bookmark3"></a>hn_submissions.py</span></h6>
<p><span class="font0">import requests</span></p>
<p><span class="font0">from operator import itemgetter</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font6">执行</span><span class="font0">API</span><span class="font6">调用并存储响应</span></p></li></ul>
<p><span class="font4">❶ </span><span class="font0">url = '</span><a href="https://hacker-news.firebaseio.com/v0/topstories.json'"><span class="font0">https://hacker-news.firebaseio.com/v0/topstories.json'</span></a></p>
<p><span class="font0">r = requests.get(url)</span></p>
<p><span class="font0">print(&quot;Status code:&quot;, r.status_code)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0"># </span><span class="font6">处理有关每篇文章的信息</span></p></li></ul>
<p><span class="font4">❷ </span><span class="font0">submission_ids = r.json()</span></p>
<p><span class="font4">❸ </span><span class="font0">submission_dicts =[]</span></p>
<p><span class="font0">for submission_id in submission_ids[:30]:</span></p>
<p><span class="font0">#</span><span class="font6">对于每篇文章，都执行一个</span><span class="font0">API</span><span class="font6">调用</span></p>
<p><span class="font4">❹ </span><span class="font0">url = ('</span><a href="https://hacker-news.firebaseio.com/v0/item/'"><span class="font0">https://hacker-news.firebaseio.com/v0/item/'</span></a><span class="font0"> + str(submission_id) + '.json')</span></p>
<p><span class="font0">submission_r = requests.get(url)</span></p>
<p><span class="font0">print(submission_r.status_code)</span></p>
<p><span class="font0">response_dict = submission_r.json()</span></p>
<p><span class="font4">❺ </span><span class="font0">submission_dict = {</span></p>
<p><span class="font0">'title': response_dict['title'],</span></p>
<p><span class="font0">'link': '</span><a href="http://news.ycombinator.com/item?id='"><span class="font0">http://news.ycombinator.com/item?id='</span></a><span class="font0"> + str(submission_id),</span></p>
<p><span class="font2" style="font-weight:bold;">17</span></p>
</body>
</html>