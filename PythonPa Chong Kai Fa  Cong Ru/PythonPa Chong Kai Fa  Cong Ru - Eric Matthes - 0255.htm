<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Segoe UI, sans-serif; }
 .font2 { font:7pt SimHei, sans-serif; }
 .font3 { font:10pt SimHei, sans-serif; }
 .font4 { font:8pt SimSun, serif; }
 .font5 { font:9pt SimSun, serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }
 .font8 { font:11pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">238</span></p>
<p><span class="font6">第</span><span class="font7">13</span><span class="font6">章 外星人</span></p>
<p><span class="font2">❶ &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">alien = Alien(ai_settings, screen)</span></p>
<p><span class="font2">❷ &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">alien_width = alien.rect.width</span></p>
<p><span class="font2">❸ &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">available_space_x = ai_settings.screen_width - 2 * alien_width</span></p>
<p><span class="font2">❹ &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">number_aliens_x = int(available_space_x / </span><span class="font5">(</span><span class="font0">2 * alien_width))</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font4"> 创建第一行外星人</span></p></li></ul>
<p><span class="font2">❺ </span><span class="font0">for alien_number in range(number_aliens_x):</span></p>
<p><span class="font0"># </span><span class="font4">创建一个外星人并将其加入当前行</span></p>
<p><span class="font2">❻ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">alien = Alien(ai_settings, screen)</span></p>
<p><span class="font0">alien.x = alien_width + 2 * alien_width * alien_number</span></p>
<p><span class="font0">alien.rect.x = alien.x aliens.add(alien)</span></p>
<p><span class="font6">这些代码大都在前面详细介绍过。为放置外星人，我们需要知道外星人的宽度和高度，因此 在执行计算前，我们先创建一个外星人(见</span><span class="font8" style="font-weight:bold;">0</span><span class="font6">)。这个外星人不是外星人群的成员，因此没有将 它加入到编组</span><span class="font1">aliens</span><span class="font6">中。在</span><span class="font3">❷</span><span class="font6">处，我们从外星人的</span><span class="font1">rect</span><span class="font6">属性中获取外星人宽度，并将这个值存储 至</span><span class="font1">Ualien_width</span><span class="font6">中，以免反复访问属性</span><span class="font1">rect</span><span class="font6">。在</span><span class="font3">❸</span><span class="font6">处，我们计算可用于放置外星人的水平空间，以 及其中可容纳多少个外星人。</span></p>
<p><span class="font6">相比于前面介绍的工作，这里唯一的不同是使用了 </span><span class="font1">int()</span><span class="font6">来确保计算得到的外星人数量为整 数(见</span><span class="font3">❹</span><span class="font6">)，因为我们不希望某个外星人只显示一部分，而且函数</span><span class="font1">range()</span><span class="font6">也需要一个整数。函数 </span><span class="font1">int()</span><span class="font6">将小数部分丢弃，相当于向下圆整(这大有裨益，因为我们宁愿每行都多出一点点空间， 也不希望每行的外星人之间过于拥挤)。</span></p>
<p><span class="font6">接下来，我们编写了一个循环，它从零数到要创建的外星人数(见</span><span class="font3">❺</span><span class="font6">)。在这个循环的主体 中，我们创建一个新的外星人，并通过设置</span><span class="font7" style="font-style:italic;">x</span><span class="font6">坐标将其加入当前行(见</span><span class="font3">❻</span><span class="font6">)。将每个外星人都往右 推一个外星人的宽度。接下来，我们将外星人宽度乘以</span><span class="font7">2</span><span class="font6">，得到每个外星人占据的空间(其中包 括其右边的空白区域)，再据此计算当前外星人在当前行的位置。最后，我们将每个新创建的外 星人都添加到编组</span><span class="font1">aliens</span><span class="font6">中。</span></p>
<p><span class="font6">如果你现在运行这个游戏，将看到第一行外星人，如图</span><span class="font7">13-3</span><span class="font6">所示。</span></p>
<div>
</div><br clear="all">
</body>
</html>