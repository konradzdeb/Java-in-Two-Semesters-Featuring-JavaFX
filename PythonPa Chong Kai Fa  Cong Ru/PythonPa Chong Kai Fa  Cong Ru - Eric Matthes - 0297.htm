<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:8pt SimSun, serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">280</span></p>
<p><span class="font6">第</span><span class="font7">14</span><span class="font6">章 记分</span></p>
<p><span class="font6">(见</span><span class="font4">❷</span><span class="font6">)。</span></p>
<p><span class="font6">接下来，需要修改</span><span class="font2">Scoreboard</span><span class="font6">,在其中创建一个可供显示的飞船编组。下面是其中的</span><span class="font2">import </span><span class="font6">语句和方法</span><span class="font2">__init__()</span><span class="font6">：</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font1"><a name="bookmark1"></a>scoreboard.py</span></h6>
<p><span class="font0">import pygame.font</span></p>
<p><span class="font0">from pygame.sprite import Group</span></p>
<p><span class="font0">from ship import Ship</span></p>
<p><span class="font0">class Scoreboard():</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font5">报告得分信息的类</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">def __init__(self, ai_settings, screen, stats):</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font0">self.prep_level() self.prep_ships()</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font6">鉴于要创建一个飞船编组，我们导入</span><span class="font2">Group</span><span class="font6">和</span><span class="font2">Ship</span><span class="font6">类。调用</span><span class="font2">prep_level()</span><span class="font6">后，我们调用了 </span><span class="font2">prep_ships()</span><span class="font6">。</span></p>
<p><span class="font2">prep_ships()</span><span class="font6">的代码如下：</span></p>
<h6><a name="bookmark2"></a><span class="font1"><a name="bookmark3"></a>scoreboard.py</span></h6>
<p><span class="font0">def prep_ships(self):</span></p>
<p><span class="font0">&quot;&quot;&quot;</span><span class="font5">显示还余下多少艘飞船</span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font3">❶ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.ships = Group()</span></p>
<p><span class="font3">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">for ship_number in range(self.stats.ships_left):</span></p>
<p><span class="font0">ship = Ship(self.ai_settings, self.screen)</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">❸ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">ship.rect.x = 10 + ship_number * ship.rect.width</span></p></li>
<li>
<p><span class="font3">❹ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">ship.rect.y = 10</span></p></li></ul>
<p><span class="font3">❺ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">self.ships.add(ship)</span></p>
<p><span class="font6">方法</span><span class="font2">prep_ships()</span><span class="font6">创建一个空编组</span><span class="font2">self.ships</span><span class="font6">，用于存储飞船实例(见</span><span class="font4">❶</span><span class="font6">)。为填充这个编组， 根据玩家还有多少艘飞船运行一个循环相应的次数(见</span><span class="font4">❷</span><span class="font6">)。在这个循环中，我们创建一艘新飞 船，并设置其</span><span class="font7" style="font-style:italic;">x</span><span class="font6">坐标，让整个飞船编组都位于屏幕左边，且每艘飞船的左边距都为</span><span class="font7">10</span><span class="font6">像素(见</span><span class="font4">❸</span><span class="font6">)。 我们还将</span><span class="font7" style="font-style:italic;">y</span><span class="font6">坐标设置为离屏幕上边缘</span><span class="font7">10</span><span class="font6">像素，让所有飞船都与得分图像对齐(见</span><span class="font4">❹</span><span class="font6">)。最后，我们 将每艘新飞船都添加到编组</span><span class="font2">ships</span><span class="font6">中(见</span><span class="font4">❺</span><span class="font6">)。</span></p>
<p><span class="font6">现在需要在屏幕上绘制飞船了：</span></p>
<p><span class="font1">scoreboard.py</span></p>
<p><span class="font0">def show_score(self):</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<p><span class="font0">self.screen.blit(self.level_image, self.level_rect)</span></p>
<p><span class="font0"># </span><span class="font5">绘制飞船</span></p>
<p><span class="font0">self.ships.draw(self.screen)</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>