<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:9pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:10pt SimHei, sans-serif; }
 .font4 { font:9pt SimSun, serif; }
 .font5 { font:10pt SimSun, serif; }
 .font6 { font:10pt Times New Roman, serif; }
 .font7 { font:11pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font6">352</span></p>
<p><span class="font5">第</span><span class="font6">17</span><span class="font5">章使用</span><span class="font6">API</span></p>
<p><span class="font0" style="font-weight:bold;">❻ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">'comments': response_dict.get('descendants', 0</span><span class="font4">)</span></p>
<p><span class="font0">}</span></p>
<p><span class="font0">submission_dicts.append(submission_dict)</span></p>
<p><span class="font0" style="font-weight:bold;">6 </span><span class="font0">submission_dicts = sorted(submission_dicts, key=itemgetter('comments'), reverse=True)</span></p>
<p><span class="font0" style="font-weight:bold;">❽ </span><span class="font0">for submission_dict in submission_dicts:</span></p>
<p><span class="font0">print(&quot;\nTitle:&quot;, submission_dict['title'])</span></p>
<p><span class="font0">print(&quot;Discussion link:&quot;, submission_dict['link'])</span></p>
<p><span class="font0">print(&quot;Comments:&quot;, submission_dict['comments'])</span></p>
<p><span class="font5">首先，我们执行了一个</span><span class="font6">API</span><span class="font5">调用，并打印了响应的状态(见</span><span class="font3">❶</span><span class="font5">)。这个</span><span class="font6">API</span><span class="font5">调用返回一个列表， 其中包含</span><span class="font6">Hacker News</span><span class="font5">上当前最热门的</span><span class="font6">500</span><span class="font5">篇文章的</span><span class="font6">ID</span><span class="font5">。接下来，我们将响应文本转换为一个 </span><span class="font6">Python</span><span class="font5">列表(见</span><span class="font3">❷</span><span class="font5">)，并将其存储在</span><span class="font2">submission_ids</span><span class="font5">中。我们将使用这些</span><span class="font6">ID</span><span class="font5">来创建一系列字典，其 中每个字典都存储了一篇文章的信息。</span></p>
<p><span class="font5">在</span><span class="font3">❸</span><span class="font5">处，我们创建了一个名为</span><span class="font2">submission_dicts</span><span class="font5">的空列表，用于存储前面所说的字典。接下 来，我们遍历前</span><span class="font6">30</span><span class="font5">篇文章的</span><span class="font6">ID</span><span class="font5">。对于每篇文章，我们都执行一个</span><span class="font6">API</span><span class="font5">调用，其中的</span><span class="font6">URL</span><span class="font5">包含 </span><span class="font2">submission_id</span><span class="font5">的当前值(见</span><span class="font7" style="font-weight:bold;">❹</span><span class="font5">)。我们打印每次请求的状态，以便知道请求是否成功了。</span></p>
<p><span class="font5">在</span><span class="font3">❺</span><span class="font5">处，我们为当前处理的文章创建一个字典，并在其中存储文章的标题以及到其讨论页面 的链接。在</span><span class="font3">❻</span><span class="font5">处，我们在这个字典中存储了评论数。如果文章还没有评论，响应字典中将没有键 </span><span class="font2">'descendants'</span><span class="font1"><sub>o</sub></span><span class="font5">不确定某个键是否包含在字典中时，可使用方法</span><span class="font2">dict.get()</span><span class="font5">，它在指定的键存在 时返回与之相关联的值，并在指定的键不存在时返回你指定的值(这里是</span><span class="font6">0</span><span class="font5">)。最后，我们将 </span><span class="font2">submission_dict </span><span class="font5">附加到 </span><span class="font2">submission_dicts </span><span class="font5">末尾。</span></p>
<p><span class="font6">Hacke</span><span class="font5">；</span><span class="font6">News</span><span class="font5">上的文章是根据总体得分排名的，而总体得分取决于很多因素，其中包含被推 荐的次数、评论数以及发表的时间。我们要根据评论数对字典列表</span><span class="font2">submission_dicts</span><span class="font5">进行排序， 为此，使用了模块</span><span class="font2">operator</span><span class="font5">中的函数</span><span class="font2">itemgetter()</span><span class="font5">(见</span><span class="font3">❼</span><span class="font5">)。我们向这个函数传递了键</span><span class="font2">'comments'</span><span class="font5">， 因此它将从这个列表的每个字典中提取与键</span><span class="font2">'comments'</span><span class="font5">相关联的值。这样，函数</span><span class="font2">sorted()</span><span class="font5">将根据 这种值对列表进行排序。我们将列表按降序排列，即评论最多的文章位于最前面。</span></p>
<p><span class="font5">对列表排序后，我们遍历这个列表(见</span><span class="font7" style="font-weight:bold;">❽</span><span class="font5">)，对于每篇热门文章，都打印其三项信息：标题、 到讨论页面的链接以及文章现有的评论数：</span></p>
<p><span class="font0">Status code: 200</span></p>
<p><span class="font0">200</span></p>
<p><span class="font0">200</span></p>
<p><span class="font0">200</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p>
<p><span class="font0">Title: Firefox deactivates Flash by default</span></p>
<p><span class="font0">Discussion link: </span><a href="http://news.ycombinator.com/item?id=9883246"><span class="font0">http://news.ycombinator.com/item?id=9883246</span></a></p>
<p><span class="font0">Comments: 231</span></p>
<p><span class="font0">Title: New Horizons: Nasa spacecraft speeds past Pluto</span></p>
<p><span class="font0">Discussion link: </span><a href="http://news.ycombinator.com/item?id=9884165"><span class="font0">http://news.ycombinator.com/item?id=9884165</span></a></p>
</body>
</html>