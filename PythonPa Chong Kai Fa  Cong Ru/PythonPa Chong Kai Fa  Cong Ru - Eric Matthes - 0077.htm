<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:7pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:9pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:8pt SimHei, sans-serif; }
 .font5 { font:12pt SimHei, sans-serif; }
 .font6 { font:9pt SimSun, serif; }
 .font7 { font:10pt SimSun, serif; }
 .font8 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font8">60 </span><span class="font7">第</span><span class="font8">4</span><span class="font7">章操作列表</span></p>
<p><span class="font7">就像遍历列表时一样，</span><span class="font8">PythonB</span><span class="font7">回元组中所有的元素，:</span></p>
<p><span class="font0" style="font-weight:bold;">200</span></p>
<p><span class="font0" style="font-weight:bold;">50</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">4.5.3</span><span class="font5"> 修改元组变量</span></p></li></ul>
<p><span class="font7">虽然不能修改元组的元素，但可以给存储元组的变量赋值。因此，如果要修改前述矩形的尺 寸，可重新定义整个元组：</span></p>
<p><span class="font6" style="font-weight:bold;">❶</span><span class="font0" style="font-weight:bold;"> dimensions = </span><span class="font6" style="font-weight:bold;">(</span><span class="font0" style="font-weight:bold;">200, 50) print(&quot;Original dimensions:&quot;) for dimension in dimensions:</span></p>
<p><span class="font0" style="font-weight:bold;">print(dimension)</span></p>
<p><span class="font6" style="font-weight:bold;">❷</span><span class="font0" style="font-weight:bold;"> dimensions = </span><span class="font6" style="font-weight:bold;">(</span><span class="font0" style="font-weight:bold;">400, 100</span><span class="font6" style="font-weight:bold;">)</span></p>
<p><span class="font6" style="font-weight:bold;">❸</span><span class="font0" style="font-weight:bold;"> print(&quot;\nModified dimensions:&quot;)</span></p>
<p><span class="font0" style="font-weight:bold;">for dimension in dimensions: print(dimension)</span></p>
<p><span class="font7">我们首先定义了一个元组，并将其存储的尺寸打印了出来(见❶)；接下来，将一个新元组 存储到变量</span><span class="font8">dimensions</span><span class="font7">中(见❷)；然后，打印新的尺寸(见❸)。这次，</span><span class="font8">Python</span><span class="font7">不会报告任何错 误，因为给元组变量赋值是合法的：</span></p>
<p><span class="font0" style="font-weight:bold;">Original dimensions:</span></p>
<p><span class="font0" style="font-weight:bold;">200</span></p>
<p><span class="font0" style="font-weight:bold;">50</span></p>
<p><span class="font0" style="font-weight:bold;">Modified dimensions:</span></p>
<p><span class="font0" style="font-weight:bold;">400</span></p>
<p><span class="font0" style="font-weight:bold;">100</span></p>
<p><span class="font7">相比于列表，元组是更简单的数据结构。如果需要存储的一组值在程序的整个生命周期内都 不变，可使用元组。</span></p>
<p><span class="font5">动手试一试</span></p>
<p><span class="font2">4-13</span><span class="font7">自助餐：有一家自助式餐馆，只提供五种简单的食品。请想出五种简单的食 品，并将其存储在一个元组中。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font7">□使用一个</span><span class="font8">for</span><span class="font7">循环将该餐馆提供的五种食品都打印出来。</span></p></li></ul>
<p><span class="font7">口尝试修改其中的一个元素，核实</span><span class="font8">Python</span><span class="font7">确实会拒绝你这样做。</span></p>
<p><span class="font7">口餐馆调整了菜单，替换了它提供的其中两种食品。请编写一个这样的代码块： 给元组变量赋值，并使用一个</span><span class="font8">for</span><span class="font7">循环将新元组的每个元素都打印出来。</span></p>
<p><span class="font4">图灵社区会员江子涛</span><span class="font1">Tesla(jiangzitao201314@foxmail.com)</span><span class="font4">专享尊重版权</span></p>
</body>
</html>