<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:9pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:10pt SimHei, sans-serif; }
 .font4 { font:12pt SimHei, sans-serif; }
 .font5 { font:9pt SimSun, serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">336 </span><span class="font6">第</span><span class="font7">16</span><span class="font6">章 下载数据</span></p>
<p><span class="font6">的颜色。这个类修改整个图表的主题，包括背景色、标签以及各个国家的颜色。要使用这个样式， 先导入它：</span></p>
<p><span class="font0">from pygal.style import LightColorizedStyle</span></p>
<p><span class="font6">然后就可独立地使用</span><span class="font2">LightColorizedStyle</span><span class="font6">了，例如：</span></p>
<p><span class="font0">wm_style = LightColorizedStyle</span></p>
<p><span class="font6">然而使用这个类时，你不能直接控制使用的颜色，</span><span class="font7">Pygal</span><span class="font6">将选择默认的基色。要设置颜色， 可使用</span><span class="font2">RotateStyle</span><span class="font6">,并将</span><span class="font2">LightColorizedStyle</span><span class="font6">作为基本样式。为此，导入</span><span class="font2">LightColorizedStyle </span><span class="font6">和</span><span class="font2">RotateStyle</span><span class="font6">：</span></p>
<p><span class="font0">from pygal.style import LightColorizedStyle, RotateStyle</span></p>
<p><span class="font6">再使用</span><span class="font2">RotateStyle</span><span class="font6">创建一种样式，并传入另一个实参</span><span class="font2">base_style</span><span class="font6">：</span></p>
<p><span class="font0">wm_style = RotateStyle('#336699', base_style=LightColorizedStyle)</span></p>
<p><span class="font6">这设置了较亮的主题，同时根据通过实参传递的颜色给各个国家着色。使用这种样式时，生 成的图表与本书的屏幕截图更一致。</span></p>
<p><span class="font6">尝试为不同的可视化选择合适的样式设置指令时，在</span><span class="font2">import</span><span class="font6">语句中指定别名会有所帮助：</span></p>
<p><span class="font0">from pygal.style import LightColorizedStyle as LCS, RotateStyle as RS</span></p>
<p><span class="font6">这样，样式定义将更短：</span></p>
<p><span class="font0">wm_style = RS('#336699', base_style=LCS)</span></p>
<p><span class="font6">通过使用几个样式设置指令，就能很好地控制图表和地图的外观。</span></p>
<p><span class="font4">动手试一试</span></p>
<p><span class="font1">16-5</span><span class="font3">涵盖所有国家</span><span class="font5">：本节制作人口地图时，对于大约</span><span class="font7">12</span><span class="font5">个国家，程序不能自动确 定其两个字母的国别码。请找出这些国家，在字典</span><span class="font2">COUNTRIES</span><span class="font5">中找到它们的国别码；然 后，对于每个这样的国家，都在</span><span class="font2">get_country_code()</span><span class="font5">中添加一个</span><span class="font2">if-elif</span><span class="font5">代码块，以返 回其国别码：</span></p>
<p><span class="font0">if country_name == 'Yemen, Rep.'</span></p>
<p><span class="font0">return 'ye' elif </span><span class="font0" style="font-style:italic;">--snip--</span></p>
<p><span class="font5">将这些代码放在遍历</span><span class="font2">COUNTRIES</span><span class="font5">的循环和语句</span><span class="font2">return None</span><span class="font5">之间。完成这样的修改</span></p>
</body>
</html>