<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:14pt Arial, sans-serif; }
 .font3 { font:22pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:14pt SimHei, sans-serif; }
 .font6 { font:15pt SimHei, sans-serif; }
 .font7 { font:23pt SimHei, sans-serif; }
 .font8 { font:9pt SimSun, serif; }
 .font9 { font:10pt SimSun, serif; }
 .font10 { font:10pt Times New Roman, serif; }
 .font11 { font:15pt Times New Roman, serif; }

</style>
</head>
<body><a name="caption1"></a>
<h4><a name="bookmark0"></a><span class="font7"><a name="bookmark1"></a>用户输入和囚</span><span class="font3">h</span><span class="font7">订</span><span class="font3">6</span><span class="font7">循环</span></h4>
<div><img src="PythonPa Chong Kai Fa  Cong Ru - Eric Matthes - 0117_files/PythonPa20Chong20Kai20Fa2020Cong20Ru20-20Eric20Matthes20-200117-1.jpg" alt="" style="width:98pt;height:98pt;">
</div><br clear="all">
<p><span class="font9">大多数程序都旨在解决最终用户的问题，为此通常需要从用户那 里获取一些信息。例如，假设有人要判断自己是否到了投票的年龄， 要编写回答这个问题的程序，就需要知道用户的年龄，这样才能给出 答案。因此，这种程序需要让用户</span><span class="font9" style="font-weight:bold;">输入</span><span class="font9">其年龄，再将其与投票年龄进 行比较，以判断用户是否到了投票的年龄，再给出结果。</span></p>
<p><span class="font9">在本章中，你将学习如何接受用户输入，让程序能够对其进行处 理。在程序需要一个名字时，你需要提示用户输入该名字；程序需要 一个名单时，你需要提示用户输入一系列名字。为此，你需要使用函</span></p>
<p><span class="font9">数</span><span class="font4">input()</span><span class="font9">。</span></p>
<p><span class="font9">你还将学习如何让程序不断地运行，让用户能够根据需要输入信息，并在程序中使用这 些信息。为此，你需要使用</span><span class="font4">while</span><span class="font9">循环让程序不断地运行，直到指定的条件不满足为止。</span></p>
<p><span class="font9">通过获取用户输入并学会控制程序的运行时间，可编写出交互式程序。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">7.1</span><span class="font5"> 函数</span><span class="font2">input()</span><span class="font5">的工作原理</span></p></li></ul>
<p><span class="font9">函数</span><span class="font4">input</span><span class="font9">。让程序暂停运行，等待用户输入一些文本。获取用户输入后，</span><span class="font10">Python</span><span class="font9">将其存储在 一个变量中，以方便你使用。</span></p>
<p><span class="font9">例如，下面的程序让用户输入一些文本，再将这些文本呈现给用户：</span></p>
<p><span class="font1">parrot.py</span></p>
<p><span class="font0">message = input(&quot;Tell me something, and I will repeat it back to you: &quot;) print(message)</span></p>
<p><span class="font9">函数</span><span class="font4">input()</span><span class="font9">接受一个参数：即要向用户显示的</span><span class="font8">提示</span><span class="font9">或说明，让用户知道该如何做。在这个 示例中，</span><span class="font10">Python</span><span class="font9">运行第</span><span class="font10">1</span><span class="font9">行代码时，用户将看到提示</span><span class="font4">Tell me something, and I will repeat it back to you:</span><span class="font9">。程序等待用户输入，并在用户按回车键后继续运行。输入存储在变量</span><span class="font4">message</span><span class="font9">中，接下 来的</span><span class="font4">print(message)</span><span class="font9">将输入呈现给用户：</span></p>
</body>
</html>