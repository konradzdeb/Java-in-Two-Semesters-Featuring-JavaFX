<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:9pt Arial, sans-serif; }
 .font2 { font:10pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:7pt SimHei, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:12pt SimHei, sans-serif; }
 .font8 { font:8pt SimSun, serif; }
 .font9 { font:10pt SimSun, serif; }
 .font10 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font10">84</span></p>
<p><span class="font9">第</span><span class="font10">6</span><span class="font9">章 字典</span></p>
<p><span class="font0">print(alien_0)</span></p><a name="caption1"></a>
<h6><a name="bookmark0"></a><span class="font9"><a name="bookmark1"></a>这里首先定义了空字典</span><span class="font4">alien_0</span><span class="font9">,再在其中添加颜色和点数，得到前述示例一直在使用的 字典：</span></h6>
<p><span class="font0">{'color': 'green', 'points': 5}</span></p>
<p><span class="font9">使用字典来存储用户提供的数据或在编写能自动生成大量键</span><span class="font1">—</span><span class="font9">值对的代码时，通常都需要先 定义一个空字典。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">6.2.4</span><span class="font7"> 修改字典中的值</span></p></li></ul>
<h6><a name="bookmark2"></a><span class="font9"><a name="bookmark3"></a>要修改字典中的值，可依次指定字典名、用方括号括起的键以及与该键相关联的新值。例如， 假设随着游戏的进行，需要将一个外星人从绿色改为黄色：</span></h6>
<p><span class="font0">alien_0 = {'color': 'green'}</span></p>
<p><span class="font0">print(&quot;The alien is &quot;&nbsp;+ alien_0['color'] + &quot;.&quot;)</span></p>
<p><span class="font0">alien_0['color'] = 'yellow'</span></p>
<p><span class="font0">print(&quot;The alien is now &quot;&nbsp;+ alien_0['color'] + &quot;.&quot;)</span></p>
<p><span class="font9">我们首先定义了一个表示外星人</span><span class="font4">alien_</span><span class="font6">。</span><span class="font9">的字典，其中只包含这个外星人的颜色。接下 来，我们将与键</span><span class="font4">'color'</span><span class="font9">相关联的值改为</span><span class="font4">'yellow,</span><span class="font9">。输出表明，这个外星人确实从绿色变成 了黄色：</span></p>
<p><span class="font0">The alien is green.</span></p>
<p><span class="font0">The alien is now yellow.</span></p>
<h6><a name="bookmark4"></a><span class="font9"><a name="bookmark5"></a>来看一个更有趣的例子：对一个能够以不同速度移动的外星人的位置进行跟踪。为此，我们 将存储该外星人的当前速度，并据此确定该外星人将向右移动多远：</span></h6>
<p><span class="font0">alien_0 = {'x_position': 0, 'y_position': 25, 'speed': 'medium'}</span></p>
<p><span class="font0">print(&quot;Original x-position: &quot;&nbsp;+ str(alien_0['x_position']))</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8"> 向右移动外星人</span></p></li>
<li>
<p><span class="font0">#</span><span class="font8"> 据外星人当前速度决定将其移动多远</span></p></li></ul>
<p><span class="font5">❶ </span><span class="font0">if alien_0[,speed'] == 'slow':</span></p>
<p><span class="font0">x_increment = 1</span></p>
<p><span class="font0">elif al</span><span class="font2">i</span><span class="font0">en_0['speed'] == 'medium':</span></p>
<p><span class="font0">x_increment = 2</span></p>
<p><span class="font0">else:</span></p>
<p><span class="font0"># </span><span class="font8">这个外星人的速度一定很快</span></p>
<p><span class="font0">x_increment = 3</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font8"> 新位置等于老位置加上增量</span></p></li></ul>
<p><span class="font5">❷ </span><span class="font0">alien_0['x_position'] = alien_0['x_position'] + x_increment</span></p>
<div>
</div><br clear="all">
</body>
</html>