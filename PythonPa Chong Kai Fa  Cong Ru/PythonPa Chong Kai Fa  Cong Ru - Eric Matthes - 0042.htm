<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:11pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:12pt SimHei, sans-serif; }
 .font4 { font:9pt SimSun, serif; }
 .font5 { font:10pt SimSun, serif; }
 .font6 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font6">2.4 </span><span class="font5">数字</span></p>
<p><span class="font6">25</span></p>
<p><span class="font2" style="font-weight:bold;">2</span></p>
<p><span class="font0">&gt;&gt;&gt; </span><span class="font0" style="font-weight:bold;">2 + 3*4</span></p>
<p><span class="font0">14</span></p>
<p><span class="font0">&gt;&gt;&gt; </span><span class="font0" style="font-weight:bold;">(2 + 3) * 4</span></p>
<p><span class="font0">20</span></p>
<p><span class="font5">在这些示例中，空格不影响</span><span class="font6">Python</span><span class="font5">计算表达式的方式，它们的存在旨在让你阅读代码时，能 迅速确定先执行哪些运算。</span></p><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>2.4.2 </span><span class="font3">浮点数</span></h5>
<p><span class="font6">Python</span><span class="font5">将带小数点的数字都称为</span><span class="font4">浮点数</span><span class="font5">。大多数编程语言都使用了这个术语，它指出了这样 一个事实：小数点可出现在数字的任何位置。每种编程语言都须细心设计，以妥善地处理浮点数， 确保不管小数点出现在什么位置，数字的行为都是正常的。</span></p>
<p><span class="font5">从很大程度上说，使用浮点数时都无需考虑其行为。你只需输入要使用的数字，</span><span class="font6">Python</span><span class="font5">通常 都会按你期望的方式处理它们：</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt; &gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">0.1 + 0.1</span></p></li></ul>
<p><span class="font0">0.2</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt; &gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">0.2 + 0.2</span></p></li></ul>
<p><span class="font0">0.4</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt; &gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">2 * 0.1</span></p></li></ul>
<p><span class="font0">0.2</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt; &gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">2 * 0.2</span></p></li></ul>
<p><span class="font0">0.4</span></p>
<p><span class="font5">但需要注意的是，结果包含的小数位数可能是不确定的：</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt; &gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">0.2 + 0.1</span></p></li></ul>
<p><span class="font0">0.30000000000000004</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">&gt; &gt;&gt;&nbsp;</span><span class="font0" style="font-weight:bold;">3 * 0.1</span></p></li></ul>
<p><span class="font0">0.30000000000000004</span></p>
<p><span class="font5">所有语言都存在这种问题，没有什么可担心的。</span><span class="font6">Python</span><span class="font5">会尽力找到一种方式，以尽可能精确 地表示结果，但鉴于计算机内部表示数字的方式，这在有些情况下很难。就现在而言，暂时忽略 多余的小数位数即可；在第二部分的项目中，你将学习在需要时处理多余小数位的方式。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">2.4.3</span><span class="font3"> 使用函数</span><span class="font1">str()</span><span class="font3">避免类型错误</span></p></li></ul>
<p><span class="font5">你经常需要在消息中使用变量的值。例如，假设你要祝人生日快乐，可能会编写类似于下面 的代码：</span></p>
<p><span class="font6">birthday.py</span></p>
<p><span class="font0">age = 23</span></p>
<p><span class="font0">message = &quot;Happy &quot;&nbsp;+ age + &quot;rd Birthday!</span></p>
</body>
</html>