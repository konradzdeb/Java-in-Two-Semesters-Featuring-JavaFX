<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:11pt Arial, sans-serif; }
 .font3 { font:12pt Arial, sans-serif; }
 .font4 { font:10pt Segoe UI, sans-serif; }
 .font5 { font:7pt SimHei, sans-serif; }
 .font6 { font:10pt SimHei, sans-serif; }
 .font7 { font:12pt SimHei, sans-serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">7.2 while</span><span class="font8">循环简介 &nbsp;&nbsp;</span><span class="font9">107</span></p>
<p><span class="font8">下面来在前一节的程序</span><span class="font9">parrot.py</span><span class="font8">中添加一个标志。我们把这个标志命名为</span><span class="font4">active </span><span class="font8">（可给它指 定任何名称），它将用于判断程序是否应继续运行：</span></p>
<p><span class="font0">prompt = &quot;\nTell me something, and I will repeat it back to you:&quot;</span></p>
<p><span class="font0">prompt += &quot;\nEnter 'quit' to end the program. &quot;</span></p>
<p><span class="font5">❶ </span><span class="font0">active = True</span></p>
<p><span class="font5">❷ </span><span class="font0">while active:</span></p>
<p><span class="font0">message = input（prompt）</span></p>
<p><span class="font5">❸ &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">if message == 'quit':</span></p>
<p><span class="font0">active = False</span></p>
<p><span class="font5">❹ &nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">else:</span></p>
<p><span class="font0">print（message）</span></p>
<p><span class="font8">我们将变量</span><span class="font4">active</span><span class="font8">设置成了</span><span class="font4">True </span><span class="font8">（见</span><span class="font6">❶</span><span class="font8">），让程序最初处于活动状态。这样做简化了</span><span class="font4">while</span><span class="font8">语 句，因为不需要在其中做任何比较一相关的逻辑由程序的其他部分处理。只要变量</span><span class="font4">active</span><span class="font8">为 </span><span class="font4">True</span><span class="font8">，循环就将继续运行（见</span><span class="font6">❷</span><span class="font8">）。</span></p>
<p><span class="font8">在</span><span class="font4">while</span><span class="font8">循环中，我们在用户输入后使用一条</span><span class="font4">if</span><span class="font8">语句来检查变量</span><span class="font4">message</span><span class="font8">的值。如果用户输入 的是</span><span class="font4">‘quit'</span><span class="font8">（见</span><span class="font6">❸</span><span class="font8">），我们就将变量</span><span class="font4">active</span><span class="font8">设置为</span><span class="font4">False</span><span class="font8">，这将导致</span><span class="font4">while</span><span class="font8">循环不再继续执行。如果 用户输入的不是</span><span class="font4">‘quit'</span><span class="font8">（见</span><span class="font6">❹</span><span class="font8">），我们就将输入作为一条消息打印出来。</span></p>
<p><span class="font8">这个程序的输出与前一个示例相同。在前一个示例中，我们将条件测试直接放在了</span><span class="font4">while</span><span class="font8">语句 中，而在这个程序中，我们使用了一个标志来指出程序是否处于活动状态，这样如果要添加测试 （如</span><span class="font4">elif</span><span class="font8">语句）以检查是否发生了其他导致</span><span class="font4">active</span><span class="font8">变为</span><span class="font4">False</span><span class="font8">的事件，将很容易。在复杂的程序中， 如很多事件都会导致程序停止运行的游戏中，标志很有用：在其中的任何一个事件导致活动标志 变成</span><span class="font4">False</span><span class="font8">时，主游戏循环将退出，此时可显示一条游戏结束消息，并让用户选择是否要重新玩。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font3">7.2.4</span><span class="font7"> 使用</span><span class="font2">break</span><span class="font7">退出循环</span></p></li></ul>
<p><span class="font8">要立即退出</span><span class="font4">while</span><span class="font8">循环，不再运行循环中余下的代码，也不管条件测试的结果如何，可使用 </span><span class="font4">break</span><span class="font8">语句。</span><span class="font4">break</span><span class="font8">语句用于控制程序流程，可使用它来控制哪些代码行将执行，哪些代码行不执 行，从而让程序按你的要求执行你要执行的代码。</span></p>
<p><span class="font8">例如，来看一个让用户指出他到过哪些地方的程序。在这个程序中，我们可以在用户输入 </span><span class="font4">‘quit'</span><span class="font8">后使用</span><span class="font4">break</span><span class="font8">语句立即退出</span><span class="font4">while</span><span class="font8">循环：</span></p>
<p><span class="font1">cities.py</span></p>
<p><span class="font0">prompt = &quot;\nPlease enter the name of a city you have visited:&quot;</span></p>
<p><span class="font0">prompt += &quot;\n（Enter ‘quit‘ when you are finished.） &quot;</span></p>
<p><span class="font5">❶ </span><span class="font0">while True:</span></p>
<p><span class="font0">city = input（prompt）</span></p>
<p><span class="font0">if city == ‘quit‘: break</span></p>
</body>
</html>