<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:7pt Arial, sans-serif; }
 .font1 { font:12pt SimHei, sans-serif; }
 .font2 { font:9pt SimSun, serif; }
 .font3 { font:10pt SimSun, serif; }
 .font4 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font4">2.6 Python </span><span class="font3">之禅 </span><span class="font4">29</span></p>
<p><span class="font4">Python</span><span class="font3">程序员笃信代码可以编写得漂亮而优雅。编程是要解决问题的，设计良好、高效而漂 亮的解决方案都会让程序员心生敬意。随着你对</span><span class="font4">Python</span><span class="font3">的认识越来越深入，并使用它来编写越来 越多的代码，有一天也许会有人站在你后面惊呼：“哇，代码编写得真是漂亮!”</span></p>
<p><span class="font0" style="font-weight:bold;">Simple is better than complex.</span></p>
<p><span class="font3">如果有两个解决方案，一个简单，一个复杂，但都行之有效，就选择简单的解决方案吧。这 样，你编写的代码将更容易维护，你或他人以后改进这些代码时也会更容易。</span></p>
<p><span class="font0" style="font-weight:bold;">Complex is better than complicated.</span></p>
<p><span class="font3">现实是复杂的，有时候可能没有简单的解决方案。在这种情况下，就选择最简单可行的解决 方案吧。</span></p>
<p><span class="font0" style="font-weight:bold;">Readability counts.</span></p>
<p><span class="font3">即便是复杂的代码，也要让它易于理解。开发的项目涉及复杂代码时，一定要为这些代码编 写有益的注释。</span></p>
<p><span class="font0" style="font-weight:bold;">There should be one-- and preferably only one --obvious way to do it.</span></p>
<p><span class="font3">如果让两名</span><span class="font4">Python</span><span class="font3">程序员去解决同一个问题，他们提供的解决方案应大致相同。这并不是说 编程没有创意空间，而是恰恰相反！然而，大部分编程工作都是使用常见解决方案来解决简单的 小问题，但这些小问题都包含在更庞大、更有创意空间的项目中。在你的程序中，各种具体细节 对其他</span><span class="font4">Python</span><span class="font3">程序员来说都应易于理解。</span></p>
<p><span class="font0" style="font-weight:bold;">Now is better than never.</span></p>
<p><span class="font3">你可以将余生都用来学习</span><span class="font4">Python</span><span class="font3">和编程的纷繁难懂之处，但这样你什么项目都完不成。不要 企图编写完美无缺的代码；先编写行之有效的代码，再决定是对其做进一步改进，还是转而去编 写新代码。</span></p>
<p><span class="font3">等你进入下一章，开始研究更复杂的主题时，务必牢记这种简约而清晰的理念。如此，经 验丰富的程序员定将对你编写的代码心生敬意，进而乐意向你提供反馈，并与你合作开发有趣 的项目。</span></p>
<p><span class="font1">动手试一试</span></p>
<p><span class="font4">2-11 Python</span><span class="font3">之禅：在</span><span class="font4">Python</span><span class="font3">终端会话中执行命令</span><span class="font4">import this,</span><span class="font3">并粗略地浏览一下 其他的指导原则。</span></p>
<p><span class="font2">图灵社区会员江子涛</span><span class="font4">Tesla(jiangzitao201314@foxmail.com)</span><span class="font2">专享尊重版权</span></p>
</body>
</html>