<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }
 .font10 { font:11pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font9">13.6 </span><span class="font8">结束游戏</span></p>
<p><span class="font9">251</span></p>
<p><span class="font7">检查是否有外星人到达屏幕边缘 然后更新所有外星人的位置 </span><span class="font0">&quot;&quot;&quot;</span></p>
<p><span class="font0">check_fleet_edges(ai_settings, aliens) aliens.update()</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 检测外星人和飞船之间的碰撞</span></p></li></ul>
<p><span class="font4">❶ </span><span class="font0">if pygame.sprite.spritecollideany(ship, aliens):</span></p>
<p><span class="font4">❷ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="font0">print(&quot;Ship hit!!!&quot;)</span></p>
<p><span class="font8">方法</span><span class="font3">spritecollideany</span><span class="font8">。接受两个实参：一个精灵和一个编组。它检查编组是否有成员与精 灵发生了碰撞，并在找到与精灵发生了碰撞的成员后就停止遍历编组。在这里，它遍历编组 </span><span class="font3">aliens</span><span class="font8">，并返回它找到的第一个与飞船发生了碰撞的外星人。</span></p>
<p><span class="font8">如果没有发生碰撞，</span><span class="font3">spritecollideany()</span><span class="font8">将返回</span><span class="font3">None</span><span class="font8">，因此</span><span class="font10" style="font-weight:bold;">O</span><span class="font8">处的</span><span class="font3">if</span><span class="font8">代码块不会执行。如果 找到了与飞船发生碰撞的外星人，它就返回这个外星人，因此</span><span class="font3">if</span><span class="font8">代码块将执行：打印</span><span class="font9">“Ship hit!!!</span><span class="font8">” (见</span><span class="font5">❷</span><span class="font8">)。(有外星人撞到飞船时，需要执行的任务很多：需要删除余下的所有外星人和子弹，让 飞船重新居中，以及创建一群新的外星人。编写完成这些任务的代码前，需要确定检测外星人和 飞船碰撞的方法是否可行。而为确定这一点，最简单的方式是编写一条</span><span class="font3">print</span><span class="font8">语句。)</span></p>
<p><span class="font8">现在，我们需要将</span><span class="font3">ship</span><span class="font8">传递给</span><span class="font3">update_aliens()</span><span class="font8">:</span></p>
<p><span class="font1">alien_invasion.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font7"> 开始游戏主循环</span></p></li></ul>
<p><span class="font0">while True:</span></p>
<p><span class="font0">gf.check_events(ai_settings, screen, ship, bullets)</span></p>
<p><span class="font0">ship.update()</span></p>
<p><span class="font0">gf.update_bullets(ai_settings, screen, ship, aliens, bullets)</span></p>
<p><span class="font0">gf.update_aliens(ai_settings, ship, aliens)</span></p>
<p><span class="font0">gf.update_screen(ai_settings, screen, ship, aliens, bullets)</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">13</span></p>
</div><br clear="all">
<p><span class="font8">现在如果你运行这个游戏，则每当有外星人撞到飞船时，终端窗口都将显示“</span><span class="font9">Ship hit!!!</span><span class="font8">”。 测试这项功能时，请将</span><span class="font3">alien_drop_speed</span><span class="font8">设置为较大的值，如</span><span class="font9">50</span><span class="font8">或</span><span class="font9">100</span><span class="font8">，这样外星人将更快地撞到 飞船。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">13.6.2 </span><span class="font6">响应外星人和飞船碰撞</span></p></li></ul>
<p><span class="font8">现在需要确定外星人与飞船发生碰撞时，该做些什么。我们不销毁</span><span class="font3">ship</span><span class="font8">实例并创建一个新的 </span><span class="font3">ship</span><span class="font8">实例，而是通过跟踪游戏的统计信息来记录飞船被撞了多少次(跟踪统计信息还有助于记 分)。</span></p>
<p><span class="font8">下面来编写一个用于跟踪游戏统计信息的新类一</span><span class="font3">GameStats</span><span class="font8">，并将其保存为文件 </span><span class="font9">game_stats.py</span><span class="font8">：</span></p>
<p><span class="font1">game_stats.py</span></p>
<p><span class="font0">class GameStats():</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>