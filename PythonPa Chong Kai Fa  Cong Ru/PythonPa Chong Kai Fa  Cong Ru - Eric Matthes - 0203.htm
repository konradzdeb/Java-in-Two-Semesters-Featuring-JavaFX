<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:14pt Arial, sans-serif; }
 .font1 { font:10pt Segoe UI, sans-serif; }
 .font2 { font:14pt SimHei, sans-serif; }
 .font3 { font:9pt SimSun, serif; }
 .font4 { font:10pt SimSun, serif; }
 .font5 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font5">186 </span><span class="font4">第</span><span class="font5">10</span><span class="font4">章 文件和异常</span></p>
<p><span class="font3">么是首次运行该程序。我们应修改这个程序，以应对这样的情形：当前和最后一次运行 该程序的用户并非同一个人。</span></p>
<p><span class="font3">为此，在</span><span class="font1">greet_user()</span><span class="font3">中打印欢迎用户回来的消息前，先询问他用户名是否是对的。 如果不对，就调用</span><span class="font1">get_new_username()</span><span class="font3">让用户输入正确的用户名。</span></p>
<p><span class="font0">10.5 </span><span class="font2">小结</span></p>
<p><span class="font4">在本章中，你学习了：如何使用文件；如何一次性读取整个文件，以及如何以每次一行的方 式读取文件的内容；如何写入文件，以及如何将文本附加到文件末尾；什么是异常以及如何处理 程序可能引发的异常；如何存储</span><span class="font5">Python</span><span class="font4">数据结构，以保存用户提供的信息，避免用户每次运行程 序时都需要重新提供。</span></p>
<p><span class="font4">在第</span><span class="font5">11</span><span class="font4">章中，你将学习高效的代码测试方式，这可帮助你确定代码正确无误，以及发现扩展 现有程序时可能引入的</span><span class="font5">bug</span><span class="font4">。</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>