<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:7pt Arial, sans-serif; }
 .font1 { font:8pt Arial, sans-serif; }
 .font2 { font:9pt Arial, sans-serif; }
 .font3 { font:10pt Arial, sans-serif; }
 .font4 { font:14pt Arial, sans-serif; }
 .font5 { font:8pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:14pt SimHei, sans-serif; }
 .font8 { font:10pt SimSun, serif; }
 .font9 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font3">8.8</span><span class="font8">小结</span></p>
<p><span class="font3">137</span></p>
<p><span class="font6">动手试一试</span></p>
<p><span class="font2">8-15</span><span class="font8">打印模型：将示例</span><span class="font9">print_models.py </span><span class="font8">中的函数放在另一个名为printing_</span><span class="font9"> functions.py</span><span class="font8">的文件中；在 </span><span class="font9">print_models.py </span><span class="font8">的开头编写一条</span><span class="font9">import</span><span class="font8">语句，并修改这个文 件以使用导入的函数。</span></p>
<p><span class="font2">8-16</span><span class="font8">导入：选择一个你编写的且只包含一个函数的程序，并将这个函数放在另一 个文件中。在主程序文件中，使用下述各种方法导入这个函数，再调用它：</span></p>
<p><span class="font0" style="font-weight:bold;">import </span><span class="font1" style="font-style:italic;">module_name</span></p>
<p><span class="font0" style="font-weight:bold;">from </span><span class="font1" style="font-style:italic;">module_name</span><span class="font0" style="font-weight:bold;"> import </span><span class="font1" style="font-style:italic;">-function_name</span></p>
<p><span class="font0" style="font-weight:bold;">from </span><span class="font1" style="font-style:italic;">module_name</span><span class="font0" style="font-weight:bold;"> import </span><span class="font1" style="font-style:italic;">function_name as fn</span></p>
<p><span class="font0" style="font-weight:bold;">import </span><span class="font1" style="font-style:italic;">module_name</span><span class="font0" style="font-weight:bold;"> as </span><span class="font1" style="font-style:italic;">mn</span></p>
<p><span class="font0" style="font-weight:bold;">from </span><span class="font1" style="font-style:italic;">module_name</span><span class="font0" style="font-weight:bold;"> import *</span></p>
<p><span class="font2">8-17</span><span class="font8">函数编写指南：选择你在本章中编写的三个程序，确保它们遵循了本节介绍</span></p>
<ul style="list-style:none;"><li>
<p><span class="font4">8.8</span><span class="font7"> 小结</span></p></li></ul>
<p><span class="font8">在本章中，你学习了：如何编写函数，以及如何传递实参，让函数能够访问完成其工作所需 的信息；如何使用位置实参和关键字实参，以及如何接受任意数量的实参；显示输出的函数和返 回值的函数；如何将函数同列表、字典、</span><span class="font9">if</span><span class="font8">语句和</span><span class="font9">while</span><span class="font8">循环结合起来使用。你还知道了如何将 函数存储在被称为模块的独立文件中，让程序文件更简单、更易于理解。最后，你学习了函数编 写指南，遵循这些指南可让程序始终结构良好，并对你和其他人来说易于阅读。</span></p>
<p><span class="font8">程序员的目标之一是，编写简单的代码来完成任务，而函数有助于你实现这样的目标。它们 让你编写好代码块并确定其能够正确运行后,就可置之不理。确定函数能够正确地完成其工作后， 你就可以接着投身于下一个编码任务。</span></p>
<p><span class="font8">函数让你编写代码一次后，想重用它们多少次就重用多少次。需要运行函数中的代码时，只 需编写一行函数调用代码，就可让函数完成其工作。需要修改函数的行为时，只需修改一个代码 块，而所做的修改将影响调用这个函数的每个地方。</span></p>
<p><span class="font8">使用函数让程序更容易阅读，而良好的函数名概述了程序各个部分的作用。相对于阅读一系 列的代码块，阅读一系列函数调用让你能够更快地明白程序的作用。</span></p>
<p><span class="font8">函数还让代码更容易测试和调试。如果程序使用一系列的函数来完成其任务，而其中的每个 函数都完成一项具体的工作，测试和维护起来将容易得多：你可编写分别调用每个函数的程序， 并测试每个函数是否在它可能遇到的各种情形下都能正确地运行。经过这样的测试后你就能信心 满满，深信你每次调用这些函数时，它们都将正确地运行。</span></p>
<p><span class="font8">在第</span><span class="font9">9</span><span class="font8">章，你将学习编写类。类将函数和数据整洁地封装起来，让你能够灵活而高效地使用 它们。</span></p>
<p><span class="font5">图灵社区会员江子涛</span><span class="font1">Tesla(jiangzitao201314@foxmail.com)</span><span class="font5">专享尊重版权</span></p>
</body>
</html>