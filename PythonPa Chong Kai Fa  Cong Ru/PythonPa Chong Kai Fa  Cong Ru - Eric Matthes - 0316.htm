<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:7pt SimHei, sans-serif; }
 .font5 { font:10pt SimHei, sans-serif; }
 .font6 { font:12pt SimHei, sans-serif; }
 .font7 { font:8pt SimSun, serif; }
 .font8 { font:9pt SimSun, serif; }
 .font9 { font:10pt SimSun, serif; }
 .font10 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font10">15.3 </span><span class="font9">随机漫步</span></p>
<p><span class="font10">299</span></p>
<p><span class="font0">rw.fill_walk()</span></p>
<p><span class="font0">plt.scatter(rw.x_values, rw.y_values, s=15) plt.show()</span></p>
<p><span class="font4">❶ </span><span class="font0">keep_running = input(&quot;Make another walk? (y/n)</span><span class="font8">：</span><span class="font0">&quot;) if keep_running == 'n':</span></p>
<p><span class="font0">break</span></p>
<p><span class="font9">这些代码模拟一次随机漫步，在</span><span class="font10">matplotlib</span><span class="font9">查看器中显示结果，再在不关闭查看器的情况下暂 停。如果你关闭查看器，程序将询问你是否要再模拟一次随机漫步。如果你输入</span><span class="font3">y</span><span class="font9">，可模拟多次 随机漫步：这些随机漫步都在起点附近进行，大多沿特定方向偏离起点，漫步点分布不均匀等。 要结束程序，请输入</span><span class="font3">n</span><span class="font9">。</span></p>
<p><span class="font5">注意</span><span class="font8">如果你使用的是</span><span class="font10">Python 2.7</span><span class="font8">,别忘了将</span><span class="font9">。</span><span class="font8">处的</span><span class="font3">input()</span><span class="font8">替换为</span><span class="font3">raw_input()</span><span class="font8">。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">15.3.5</span><span class="font6"> 设置随机漫步图的样式</span></p></li></ul>
<p><span class="font9">在本节中，我们将定制图表，以突出每次漫步的重要特征，并让分散注意力的元素不那么显 眼。为此，我们确定要突出的元素，如漫步的起点、终点和经过的路径。接下来确定要使其不那 么显眼的元素，如刻度标记和标签。最终的结果是简单的可视化表示，清楚地指出了每次漫步经 过的路径。</span></p>
<ul style="list-style:none;"><li><a name="caption1"></a>
<h5><a name="bookmark0"></a><span class="font2"><a name="bookmark1"></a>15.3.6</span><span class="font6"> 给点着色</span></h5></li></ul>
<p><span class="font9">我们将使用颜色映射来指出漫步中各点的先后顺序，并删除每个点的黑色轮廓，让它们的颜 色更明显。为根据漫步中各点的先后顺序进行着色，我们传递参数</span><span class="font3">c</span><span class="font9">，并将其设置为一个列表， 其中包含各点的先后顺序。由于这些点是按顺序绘制的，因此给参数</span><span class="font3">c</span><span class="font9">指定的列表只需包含数字 </span><span class="font10">1~5000</span><span class="font9">，如下所示：</span></p>
<p><span class="font1">rw_visual.py</span></p>
<div>
<p><span class="font2" style="font-weight:bold;">15</span></p>
</div><br clear="all">
<ul style="list-style:none;"><li>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">-</span></p></li></ul>
<p><span class="font0">while True</span><span class="font8">：</span></p>
<p><span class="font0">#</span><span class="font7">创建一个</span><span class="font0">RandomWalk</span><span class="font7">实例，并将其包含的点都绘制出来 </span><span class="font0">rw = RandomWalk()</span></p>
<p><span class="font0">rw.fill_walk()</span></p>
<p><span class="font4">❶ </span><span class="font0">point_numbers = list(range(rw.num_points))</span></p>
<p><span class="font0">plt.scatter(rw.x_values, rw.y_values, c=point_numbers, cmap=plt.cm.Blues, edgecolor='none', s=15)</span></p>
<p><span class="font0">plt.show()</span></p>
<p><span class="font0">keep_running = input(&quot;Make another walk? (y/n)</span><span class="font8">：</span><span class="font0"> &quot;)</span></p>
<p><span class="font0">--</span><span class="font0" style="font-style:italic;">snip</span><span class="font0">--</span></p>
<div>
</div><br clear="all">
<div>
</div><br clear="all">
</body>
</html>