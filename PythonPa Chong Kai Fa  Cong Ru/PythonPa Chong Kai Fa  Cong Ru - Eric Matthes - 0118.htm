<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:12pt Arial, sans-serif; }
 .font3 { font:10pt Segoe UI, sans-serif; }
 .font4 { font:12pt SimHei, sans-serif; }
 .font5 { font:9pt SimSun, serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">7.1 </span><span class="font6">函数</span><span class="font7">1</span><span class="font6">叩仇()的工作原理</span></p>
<p><span class="font7">101</span></p>
<p><span class="font0">Tell me something, and I will repeat it back to you: </span><span class="font0" style="font-weight:bold;">Hello everyone! </span><span class="font0">Hello everyone!</span></p>
<p><span class="font6">注意 </span><span class="font7">Sublime Text</span><span class="font5">不能运行提示用户输入的程序。你可以使用</span><span class="font7">Sublime Text</span><span class="font5">来编写提示用户输入 的程序，但必须从终端运行它们。详情请参阅</span><span class="font7">1.4</span><span class="font5">节。</span></p>
<ul style="list-style:none;"><li>
<p><span class="font2">7.1.1</span><span class="font4"> 编写清晰的程序</span></p></li></ul>
<p><span class="font6">每当你使用函数</span><span class="font3">input()</span><span class="font6">时，都应指定清晰而易于明白的提示，准确地指出你希望用户提供 什么样的信息</span><span class="font7">——</span><span class="font6">指出用户该输入任何信息的提示都行，如下所示：</span></p>
<p><span class="font1">greeter.py</span></p>
<p><span class="font0">name = input(&quot;Please enter your name: &quot;)</span></p>
<p><span class="font0">print(&quot;Hello, &quot;&nbsp;+ name + &quot;!&quot;)</span></p>
<p><span class="font6">通过在提示末尾(这里是冒号后面)包含一个空格，可将提示与用户输入分开，让用户清楚 地知道其输入始于何处，如下所示：</span></p>
<p><span class="font0">Please enter your name: </span><span class="font0" style="font-weight:bold;">Eric</span></p>
<p><span class="font0">Hello, Eric!</span></p>
<p><span class="font6">有时候，提示可能超过一行，例如，你可能需要指出获取特定输入的原因。在这种情况下， 可将提示存储在一个变量中，再将该变量传递给函数</span><span class="font3">input()</span><span class="font6">。这样，即便提示超过一行，</span><span class="font3">input() </span><span class="font6">语句也非常清晰。</span></p>
<p><span class="font1">greeter.py</span></p>
<p><span class="font0">prompt = &quot;If you tell us who you are, we can personalize the messages you see.&quot;</span></p>
<p><span class="font0">prompt += &quot;\nWhat is your first name? &quot;</span></p>
<p><span class="font0">name = input(prompt)</span></p>
<p><span class="font0">print(&quot;\nHello, &quot;&nbsp;+ name + &quot;!&quot;)</span></p>
<p><span class="font6">这个示例演示了一种创建多行字符串的方式。第</span><span class="font7">1</span><span class="font6">行将消息的前半部分存储在变量</span><span class="font3">prompt</span><span class="font6">中; 在第</span><span class="font7">2</span><span class="font6">行中，运算符</span><span class="font3">+=</span><span class="font6">在存储在</span><span class="font3">prompt</span><span class="font6">中的字符串末尾附加一个字符串。</span></p>
<p><span class="font6">最终的提示横跨两行，并在问号后面包含一个空格，这也是出于清晰考虑：</span></p>
<p><span class="font0">If you tell us who you are, we can personalize the messages you see.</span></p>
<p><span class="font0">What is your first name? </span><span class="font0" style="font-weight:bold;">Eric</span></p>
<p><span class="font0">Hello, Eric!</span></p>
<div>
</div><br clear="all">
</body>
</html>