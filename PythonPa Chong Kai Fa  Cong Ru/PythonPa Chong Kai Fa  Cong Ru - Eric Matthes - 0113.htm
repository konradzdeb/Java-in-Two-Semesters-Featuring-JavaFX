<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
	"http://www.w3.org/TR/1998/REC-html40-19980424/loose.dtd">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta name="generator" content="ABBYY FineReader PDF 15">
<style type="text/css">
 table.main {}
 tr.row {}
 td.cell {}
 div.block {}
 div.paragraph {}
 .font0 { font:8pt Arial, sans-serif; }
 .font1 { font:10pt Arial, sans-serif; }
 .font2 { font:10pt Segoe UI, sans-serif; }
 .font3 { font:7pt SimHei, sans-serif; }
 .font4 { font:10pt SimHei, sans-serif; }
 .font5 { font:8pt SimSun, serif; }
 .font6 { font:10pt SimSun, serif; }
 .font7 { font:10pt Times New Roman, serif; }

</style>
</head>
<body>
<p><span class="font7">96 </span><span class="font6">第</span><span class="font7">6</span><span class="font6">章 字典</span></p>
<p><span class="font6">的比萨呢？如果使用列表，只能存储要添加的比萨配料；但如果使用字典，就不仅可在其中包含 配料列表，还可包含其他有关比萨的描述。</span></p>
<p><span class="font6">在下面的示例中，存储了比萨的两方面信息：外皮类型和配料列表。其中的配料列表是一个 与键</span><span class="font2">'toppings'</span><span class="font6">相关联的值。要访问该列表，我们使用字典名和键</span><span class="font2">'toppings'</span><span class="font6">,就像访问字典中 的其他值一样。这将返回一个配料列表，而不是单个值：</span></p>
<p><span class="font1">pizza.py</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font5"> 存储所点比萨的信息</span></p></li></ul>
<p><span class="font3">❶ </span><span class="font0">pizza = {</span></p>
<p><span class="font0">'crust': 'thick',</span></p>
<p><span class="font0">'toppings': ['mushrooms', 'extra cheese'], }</span></p>
<ul style="list-style:none;"><li>
<p><span class="font0">#</span><span class="font5"> 概述所点的比萨</span></p></li></ul>
<p><span class="font3">❷ </span><span class="font0">print（&quot;You ordered a &quot;&nbsp;+ pizza['crust'] + &quot;-crust pizza &quot;&nbsp;+ &quot;with the following toppings:&quot;）</span></p>
<p><span class="font3">❸ </span><span class="font0">for topping in pizza['toppings']: print（&quot;\t&quot; + topping）</span></p>
<p><span class="font6">我们首先创建了一个字典，其中存储了有关顾客所点比萨的信息（见</span><span class="font4">❶</span><span class="font6">）。在这个字典中， 一个键是</span><span class="font2">‘crust'</span><span class="font6">，与之相关联的值是字符串</span><span class="font2">'thick'</span><span class="font6">；下一个键是</span><span class="font2">‘toppings'</span><span class="font6">，与之相关联的值 是一个列表，其中存储了顾客要求添加的所有配料。制作前我们概述了顾客所点的比萨（见</span><span class="font4">❷</span><span class="font6">）。 为打印配料，我们编写了一个</span><span class="font2">for</span><span class="font6">循环（见</span><span class="font4">❸</span><span class="font6">）。为访问配料列表，我们使用了键</span><span class="font2">'toppings'</span><span class="font6">，这 样</span><span class="font7">Python</span><span class="font6">将从字典中提取配料列表。</span></p>
<p><span class="font6">下面的输出概述了要制作的比萨：</span></p>
<p><span class="font0">You ordered a thick-crust pizza with the following toppings: mushrooms extra cheese</span></p>
<p><span class="font6">每当需要在字典中将一个键关联到多个值时，都可以在字典中嵌套一个列表。在本章前面有 关喜欢的编程语言的示例中，如果将每个人的回答都存储在一个列表中，被调查者就可选择多种 喜欢的语言。在这种情况下，当我们遍历字典时，与每个被调查者相关联的都是一个语言列表， 而不是一种语言；因此，在遍历该字典的</span><span class="font2">for</span><span class="font6">循环中，我们需要再使用一个</span><span class="font2">for</span><span class="font6">循环来遍历与被调 查者相关联的语言列表：</span></p>
<p><span class="font1">favorite_languages.py</span></p>
<p><span class="font3">❶ </span><span class="font0">favorite_languages = {</span></p>
<p><span class="font0">'jen': ['python', 'ruby'],</span></p>
<p><span class="font0">'sarah': ['c'],</span></p>
<p><span class="font0">'edward': ['ruby', 'go'],</span></p>
<p><span class="font0">'phil': ['python', 'haskell'], }</span></p>
</body>
</html>